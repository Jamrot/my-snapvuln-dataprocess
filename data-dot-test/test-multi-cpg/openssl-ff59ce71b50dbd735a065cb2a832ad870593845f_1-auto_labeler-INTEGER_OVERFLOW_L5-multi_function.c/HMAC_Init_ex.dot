digraph {
  369 [label=BLOCK ORDER=2 ARGUMENT_INDEX=-1 CODE="{
        reset = 1;
        ctx->md = md;
    }" COLUMN_NUMBER=21 LINE_NUMBER=114 TYPE_FULL_NAME="void"]
  539 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="md" COLUMN_NUMBER=44 LINE_NUMBER=148 TYPE_FULL_NAME="EVP_MD*" NAME="md"]
  326 [label=METHOD COLUMN_NUMBER=1 LINE_NUMBER=103 COLUMN_NUMBER_END=1 IS_EXTERNAL=false SIGNATURE="int HMAC_Init_ex (HMAC_CTX*,void*,int,EVP_MD*,ENGINE*)" NAME="HMAC_Init_ex" AST_PARENT_TYPE="TYPE_DECL" AST_PARENT_FULL_NAME="openssl-ff59ce71b50dbd735a065cb2a832ad870593845f_1-auto_labeler-INTEGER_OVERFLOW_L5-multi_function.c:<global>" ORDER=5 CODE="int HMAC_Init_ex(HMAC_CTX *ctx, const void *key, int len,
                 const EVP_MD *md, ENGINE *impl)
{
    int rv = 0;
    int i, j, reset = 0;
    unsigned char pad[HMAC_MAX_MD_CBLOCK];

    /* If we are changing MD then we must have a key */
    if (md != NULL && md != ctx->md && (key == NULL || len < 0))
        return 0;

    if (md != NULL) {
        reset = 1;
        ctx->md = md;
    } else if (ctx->md) {
        md = ctx->md;
    } else {
        return 0;
    }

    if (key != NULL) {
        reset = 1;
        j = EVP_MD_block_size(md);
        if (!ossl_assert(j <= (int)sizeof(ctx->key)))
            return 0;
        if (j < len) {
            if (!EVP_DigestInit_ex(ctx->md_ctx, md, impl)
                    || !EVP_DigestUpdate(ctx->md_ctx, key, len)
                    || !EVP_DigestFinal_ex(ctx->md_ctx, ctx->key,
                                           &ctx->key_length))
                return 0;
        } else {
            if (len < 0 || len > (int)sizeof(..." FULL_NAME="HMAC_Init_ex" LINE_NUMBER_END=165 FILENAME="openssl-ff59ce71b50dbd735a065cb2a832ad870593845f_1-auto_labeler-INTEGER_OVERFLOW_L5-multi_function.c"]
  415 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=43 LINE_NUMBER=126 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  495 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->key[ctx->key_length]" COLUMN_NUMBER=21 METHOD_FULL_NAME="<operator>.indirectIndexAccess" LINE_NUMBER=141 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectIndexAccess"]
  503 [label=CALL ORDER=3 ARGUMENT_INDEX=3 CODE="HMAC_MAX_MD_CBLOCK - ctx->key_length" COLUMN_NUMBER=20 METHOD_FULL_NAME="<operator>.subtraction" LINE_NUMBER=142 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.subtraction"]
  612 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="pad" COLUMN_NUMBER=37 LINE_NUMBER=163 TYPE_FULL_NAME="unsigned char[HMAC_MAX_MD_CBLOCK]" NAME="pad"]
  419 [label=LITERAL ORDER=1 ARGUMENT_INDEX=-1 CODE="0" COLUMN_NUMBER=20 LINE_NUMBER=127 TYPE_FULL_NAME="int"]
  608 [label=BLOCK ORDER=2 ARGUMENT_INDEX=-1 CODE="<empty>" COLUMN_NUMBER=9 LINE_NUMBER=163 TYPE_FULL_NAME="void"]
  566 [label=LITERAL ORDER=1 ARGUMENT_INDEX=1 CODE="0x5c" COLUMN_NUMBER=22 LINE_NUMBER=153 TYPE_FULL_NAME="int"]
  607 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=-1 CODE="reset" COLUMN_NUMBER=9 LINE_NUMBER=162 TYPE_FULL_NAME="int" NAME="reset"]
  365 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="IF" ORDER=9 PARSER_TYPE_NAME="CASTIfStatement" ARGUMENT_INDEX=-1 CODE="if (md != NULL)" COLUMN_NUMBER=5 LINE_NUMBER=114]
  367 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="md" COLUMN_NUMBER=9 LINE_NUMBER=114 TYPE_FULL_NAME="EVP_MD*" NAME="md"]
  576 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->o_ctx" COLUMN_NUMBER=32 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=154 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  491 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="HMAC_MAX_MD_CBLOCK" COLUMN_NUMBER=32 LINE_NUMBER=140 TYPE_FULL_NAME="ANY" NAME="HMAC_MAX_MD_CBLOCK"]
  544 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=38 LINE_NUMBER=149 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  479 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="key" COLUMN_NUMBER=30 LINE_NUMBER=137 TYPE_FULL_NAME="void*" NAME="key"]
  493 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="memset(&ctx->key[ctx->key_length], 0,
                   HMAC_MAX_MD_CBLOCK - ctx->key_length)" COLUMN_NUMBER=13 METHOD_FULL_NAME="memset" LINE_NUMBER=141 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="memset"]
  540 [label=IDENTIFIER ORDER=3 ARGUMENT_INDEX=3 CODE="impl" COLUMN_NUMBER=48 LINE_NUMBER=148 TYPE_FULL_NAME="ENGINE*" NAME="impl"]
  600 [label=BLOCK ORDER=2 ARGUMENT_INDEX=-1 CODE="<empty>" COLUMN_NUMBER=9 LINE_NUMBER=159 TYPE_FULL_NAME="void"]
  586 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="pad" COLUMN_NUMBER=50 LINE_NUMBER=155 TYPE_FULL_NAME="unsigned char[HMAC_MAX_MD_CBLOCK]" NAME="pad"]
  438 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=42 LINE_NUMBER=130 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  327 [label=METHOD_PARAMETER_IN ORDER=1 CODE="HMAC_CTX *ctx" IS_VARIADIC=false COLUMN_NUMBER=18 LINE_NUMBER=103 TYPE_FULL_NAME="HMAC_CTX*" EVALUATION_STRATEGY="BY_VALUE" INDEX=1 NAME="ctx"]
  535 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="EVP_DigestInit_ex(ctx->i_ctx, md, impl)" COLUMN_NUMBER=14 METHOD_FULL_NAME="EVP_DigestInit_ex" LINE_NUMBER=148 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="EVP_DigestInit_ex"]
  454 [label=BLOCK ORDER=2 ARGUMENT_INDEX=-1 CODE="<empty>" COLUMN_NUMBER=17 LINE_NUMBER=133 TYPE_FULL_NAME="void"]
  590 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="GOTO" ORDER=1 PARSER_TYPE_NAME="CASTGotoStatement" ARGUMENT_INDEX=1 CODE="goto err;" COLUMN_NUMBER=13 LINE_NUMBER=156]
  595 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=29 LINE_NUMBER=158 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  363 [label=RETURN ORDER=1 ARGUMENT_INDEX=1 CODE="return 0;" COLUMN_NUMBER=9 LINE_NUMBER=112]
  516 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="i < HMAC_MAX_MD_CBLOCK" COLUMN_NUMBER=21 METHOD_FULL_NAME="<operator>.lessThan" LINE_NUMBER=146 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.lessThan"]
  388 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=14 LINE_NUMBER=118 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  504 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="HMAC_MAX_MD_CBLOCK" COLUMN_NUMBER=20 LINE_NUMBER=142 TYPE_FULL_NAME="ANY" NAME="HMAC_MAX_MD_CBLOCK"]
  528 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->key" COLUMN_NUMBER=29 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=147 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  328 [label=METHOD_PARAMETER_IN ORDER=2 CODE="const void *key" IS_VARIADIC=false COLUMN_NUMBER=33 LINE_NUMBER=103 TYPE_FULL_NAME="void*" EVALUATION_STRATEGY="BY_VALUE" INDEX=2 NAME="key"]
  904 [label=METHOD_PARAMETER_OUT ORDER=4 CODE="const EVP_MD *md" IS_VARIADIC=false COLUMN_NUMBER=18 LINE_NUMBER=104 TYPE_FULL_NAME="EVP_MD*" EVALUATION_STRATEGY="BY_VALUE" INDEX=4 NAME="md"]
  334 [label=CALL ORDER=2 ARGUMENT_INDEX=-1 CODE="rv = 0" COLUMN_NUMBER=9 METHOD_FULL_NAME="<operator>.assignment" LINE_NUMBER=106 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.assignment"]
  547 [label=CALL ORDER=3 ARGUMENT_INDEX=3 CODE="EVP_MD_block_size(md)" COLUMN_NUMBER=55 METHOD_FULL_NAME="EVP_MD_block_size" LINE_NUMBER=149 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="EVP_MD_block_size"]
  354 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="md" COLUMN_NUMBER=29 LINE_NUMBER=111 CANONICAL_NAME="md"]
  442 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="!EVP_DigestFinal_ex(ctx->md_ctx, ctx->key,
                                           &ctx->key_length)" COLUMN_NUMBER=24 METHOD_FULL_NAME="<operator>.logicalNot" LINE_NUMBER=131 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.logicalNot"]
  356 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="key == NULL" COLUMN_NUMBER=41 METHOD_FULL_NAME="<operator>.equals" LINE_NUMBER=111 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.equals"]
  432 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="md_ctx" COLUMN_NUMBER=36 LINE_NUMBER=129 CANONICAL_NAME="md_ctx"]
  412 [label=UNKNOWN ORDER=1 PARSER_TYPE_NAME="CASTTypeId" ARGUMENT_INDEX=1 CODE="int" COLUMN_NUMBER=32 LINE_NUMBER=126 TYPE_FULL_NAME="<empty>" CONTAINED_REF="<empty>"]
  515 [label=LITERAL ORDER=2 ARGUMENT_INDEX=2 CODE="0" COLUMN_NUMBER=18 LINE_NUMBER=146 TYPE_FULL_NAME="int"]
  421 [label=CALL ORDER=1 ARGUMENT_INDEX=-1 CODE="j < len" COLUMN_NUMBER=13 METHOD_FULL_NAME="<operator>.lessThan" LINE_NUMBER=128 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.lessThan"]
  524 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="i" COLUMN_NUMBER=17 LINE_NUMBER=147 TYPE_FULL_NAME="int" NAME="i"]
  549 [label=BLOCK ORDER=2 ARGUMENT_INDEX=-1 CODE="<empty>" COLUMN_NUMBER=13 LINE_NUMBER=150 TYPE_FULL_NAME="void"]
  474 [label=LITERAL ORDER=1 ARGUMENT_INDEX=-1 CODE="0" COLUMN_NUMBER=24 LINE_NUMBER=136 TYPE_FULL_NAME="int"]
  554 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="i" COLUMN_NUMBER=14 LINE_NUMBER=152 TYPE_FULL_NAME="int" NAME="i"]
  409 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="j <= (int)sizeof(ctx->key)" COLUMN_NUMBER=26 METHOD_FULL_NAME="<operator>.lessEqualsThan" LINE_NUMBER=126 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.lessEqualsThan"]
  513 [label=CALL ORDER=1 ARGUMENT_INDEX=-1 CODE="i = 0" COLUMN_NUMBER=14 METHOD_FULL_NAME="<operator>.assignment" LINE_NUMBER=146 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.assignment"]
  494 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="&ctx->key[ctx->key_length]" COLUMN_NUMBER=20 METHOD_FULL_NAME="<operator>.addressOf" LINE_NUMBER=141 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.addressOf"]
  471 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="key" COLUMN_NUMBER=46 LINE_NUMBER=135 CANONICAL_NAME="key"]
  337 [label=LOCAL ORDER=3 CODE="int i" COLUMN_NUMBER=9 LINE_NUMBER=107 TYPE_FULL_NAME="int" NAME="i"]
  529 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=29 LINE_NUMBER=147 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  487 [label=CALL ORDER=1 ARGUMENT_INDEX=-1 CODE="ctx->key_length != HMAC_MAX_MD_CBLOCK" COLUMN_NUMBER=13 METHOD_FULL_NAME="<operator>.notEquals" LINE_NUMBER=140 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.notEquals"]
  546 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="pad" COLUMN_NUMBER=50 LINE_NUMBER=149 TYPE_FULL_NAME="unsigned char[HMAC_MAX_MD_CBLOCK]" NAME="pad"]
  484 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="key_length" COLUMN_NUMBER=13 LINE_NUMBER=138 CANONICAL_NAME="key_length"]
  518 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="HMAC_MAX_MD_CBLOCK" COLUMN_NUMBER=25 LINE_NUMBER=146 TYPE_FULL_NAME="ANY" NAME="HMAC_MAX_MD_CBLOCK"]
  453 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="key_length" COLUMN_NUMBER=45 LINE_NUMBER=132 CANONICAL_NAME="key_length"]
  347 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="md != NULL" COLUMN_NUMBER=9 METHOD_FULL_NAME="<operator>.notEquals" LINE_NUMBER=111 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.notEquals"]
  447 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="ctx->key" COLUMN_NUMBER=57 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=131 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  519 [label=CALL ORDER=3 ARGUMENT_INDEX=3 CODE="i++" COLUMN_NUMBER=45 METHOD_FULL_NAME="<operator>.postIncrement" LINE_NUMBER=146 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.postIncrement"]
  382 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=16 LINE_NUMBER=117 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  380 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="IF" ORDER=1 PARSER_TYPE_NAME="CASTIfStatement" ARGUMENT_INDEX=1 CODE="if (ctx->md)" COLUMN_NUMBER=12 LINE_NUMBER=117]
  587 [label=CALL ORDER=3 ARGUMENT_INDEX=3 CODE="EVP_MD_block_size(md)" COLUMN_NUMBER=55 METHOD_FULL_NAME="EVP_MD_block_size" LINE_NUMBER=155 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="EVP_MD_block_size"]
  423 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="len" COLUMN_NUMBER=17 LINE_NUMBER=128 TYPE_FULL_NAME="int" NAME="len"]
  436 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="EVP_DigestUpdate(ctx->md_ctx, key, len)" COLUMN_NUMBER=25 METHOD_FULL_NAME="EVP_DigestUpdate" LINE_NUMBER=130 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="EVP_DigestUpdate"]
  532 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="IF" ORDER=2 PARSER_TYPE_NAME="CASTIfStatement" ARGUMENT_INDEX=-1 CODE="if (!EVP_DigestInit_ex(ctx->i_ctx, md, impl)
                || !EVP_DigestUpdate(ctx->i_ctx, pad, EVP_MD_block_size(md)))" COLUMN_NUMBER=9 LINE_NUMBER=148]
  577 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=32 LINE_NUMBER=154 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  373 [label=CALL ORDER=2 ARGUMENT_INDEX=-1 CODE="ctx->md = md" COLUMN_NUMBER=9 METHOD_FULL_NAME="<operator>.assignment" LINE_NUMBER=116 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.assignment"]
  525 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="0x36 ^ ctx->key[i]" COLUMN_NUMBER=22 METHOD_FULL_NAME="<operator>.xor" LINE_NUMBER=147 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.xor"]
  467 [label=UNKNOWN ORDER=1 PARSER_TYPE_NAME="CASTTypeId" ARGUMENT_INDEX=1 CODE="int" COLUMN_NUMBER=35 LINE_NUMBER=135 TYPE_FULL_NAME="<empty>" CONTAINED_REF="<empty>"]
  360 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="len" COLUMN_NUMBER=56 LINE_NUMBER=111 TYPE_FULL_NAME="int" NAME="len"]
  430 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->md_ctx" COLUMN_NUMBER=36 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=129 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  355 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="key == NULL || len < 0" COLUMN_NUMBER=41 METHOD_FULL_NAME="<operator>.logicalOr" LINE_NUMBER=111 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.logicalOr"]
  405 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="md" COLUMN_NUMBER=31 LINE_NUMBER=125 TYPE_FULL_NAME="EVP_MD*" NAME="md"]
  338 [label=LOCAL ORDER=4 CODE="int j" COLUMN_NUMBER=12 LINE_NUMBER=107 TYPE_FULL_NAME="int" NAME="j"]
  332 [label=BLOCK ORDER=6 ARGUMENT_INDEX=-1 CODE="{
    int rv = 0;
    int i, j, reset = 0;
    unsigned char pad[HMAC_MAX_MD_CBLOCK];

    /* If we are changing MD then we must have a key */
    if (md != NULL && md != ctx->md && (key == NULL || len < 0))
        return 0;

    if (md != NULL) {
        reset = 1;
        ctx->md = md;
    } else if (ctx->md) {
        md = ctx->md;
    } else {
        return 0;
    }

    if (key != NULL) {
        reset = 1;
        j = EVP_MD_block_size(md);
        if (!ossl_assert(j <= (int)sizeof(ctx->key)))
            return 0;
        if (j < len) {
            if (!EVP_DigestInit_ex(ctx->md_ctx, md, impl)
                    || !EVP_DigestUpdate(ctx->md_ctx, key, len)
                    || !EVP_DigestFinal_ex(ctx->md_ctx, ctx->key,
                                           &ctx->key_length))
                return 0;
        } else {
            if (len < 0 || len > (int)sizeof(ctx->key))
                return 0;
            memcpy(ctx->key, key, len);
            ctx->key_length = ..." COLUMN_NUMBER=1 LINE_NUMBER=105 TYPE_FULL_NAME="void"]
  406 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="IF" ORDER=3 PARSER_TYPE_NAME="CASTIfStatement" ARGUMENT_INDEX=-1 CODE="if (!ossl_assert(j <= (int)sizeof(ctx->key)))" COLUMN_NUMBER=9 LINE_NUMBER=126]
  468 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="sizeof(ctx->key)" COLUMN_NUMBER=39 METHOD_FULL_NAME="<operator>.sizeOf" LINE_NUMBER=135 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.sizeOf"]
  439 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="md_ctx" COLUMN_NUMBER=42 LINE_NUMBER=130 CANONICAL_NAME="md_ctx"]
  550 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="GOTO" ORDER=1 PARSER_TYPE_NAME="CASTGotoStatement" ARGUMENT_INDEX=1 CODE="goto err;" COLUMN_NUMBER=13 LINE_NUMBER=150]
  475 [label=CALL ORDER=2 ARGUMENT_INDEX=-1 CODE="memcpy(ctx->key, key, len)" COLUMN_NUMBER=13 METHOD_FULL_NAME="memcpy" LINE_NUMBER=137 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="memcpy"]
  534 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="!EVP_DigestInit_ex(ctx->i_ctx, md, impl)" COLUMN_NUMBER=13 METHOD_FULL_NAME="<operator>.logicalNot" LINE_NUMBER=148 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.logicalNot"]
  361 [label=LITERAL ORDER=2 ARGUMENT_INDEX=2 CODE="0" COLUMN_NUMBER=62 LINE_NUMBER=111 TYPE_FULL_NAME="int"]
  416 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="key" COLUMN_NUMBER=43 LINE_NUMBER=126 CANONICAL_NAME="key"]
  562 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="pad[i]" COLUMN_NUMBER=13 METHOD_FULL_NAME="<operator>.indirectIndexAccess" LINE_NUMBER=153 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectIndexAccess"]
  478 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="key" COLUMN_NUMBER=20 LINE_NUMBER=137 CANONICAL_NAME="key"]
  411 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="(int)sizeof(ctx->key)" COLUMN_NUMBER=31 METHOD_FULL_NAME="<operator>.cast" LINE_NUMBER=126 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.cast"]
  374 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->md" COLUMN_NUMBER=9 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=116 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  444 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->md_ctx" COLUMN_NUMBER=44 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=131 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  333 [label=LOCAL ORDER=1 CODE="int rv" COLUMN_NUMBER=9 LINE_NUMBER=106 TYPE_FULL_NAME="int" NAME="rv"]
  431 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=36 LINE_NUMBER=129 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  383 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="md" COLUMN_NUMBER=16 LINE_NUMBER=117 CANONICAL_NAME="md"]
  575 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="EVP_DigestInit_ex(ctx->o_ctx, md, impl)" COLUMN_NUMBER=14 METHOD_FULL_NAME="EVP_DigestInit_ex" LINE_NUMBER=154 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="EVP_DigestInit_ex"]
  585 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="o_ctx" COLUMN_NUMBER=38 LINE_NUMBER=155 CANONICAL_NAME="o_ctx"]
  509 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=-1 CODE="reset" COLUMN_NUMBER=9 LINE_NUMBER=145 TYPE_FULL_NAME="int" NAME="reset"]
  377 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="md" COLUMN_NUMBER=19 LINE_NUMBER=116 TYPE_FULL_NAME="EVP_MD*" NAME="md"]
  458 [label=BLOCK ORDER=1 ARGUMENT_INDEX=-1 CODE="{
            if (len < 0 || len > (int)sizeof(ctx->key))
                return 0;
            memcpy(ctx->key, key, len);
            ctx->key_length = len;
        }" COLUMN_NUMBER=16 LINE_NUMBER=134 TYPE_FULL_NAME="void"]
  573 [label=CALL ORDER=1 ARGUMENT_INDEX=-1 CODE="!EVP_DigestInit_ex(ctx->o_ctx, md, impl)
                || !EVP_DigestUpdate(ctx->o_ctx, pad, EVP_MD_block_size(md))" COLUMN_NUMBER=13 METHOD_FULL_NAME="<operator>.logicalOr" LINE_NUMBER=154 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.logicalOr"]
  441 [label=IDENTIFIER ORDER=3 ARGUMENT_INDEX=3 CODE="len" COLUMN_NUMBER=60 LINE_NUMBER=130 TYPE_FULL_NAME="int" NAME="len"]
  536 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->i_ctx" COLUMN_NUMBER=32 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=148 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  488 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->key_length" COLUMN_NUMBER=13 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=140 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  613 [label=RETURN ORDER=16 ARGUMENT_INDEX=-1 CODE="return rv;" COLUMN_NUMBER=5 LINE_NUMBER=164]
  558 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="HMAC_MAX_MD_CBLOCK" COLUMN_NUMBER=25 LINE_NUMBER=152 TYPE_FULL_NAME="ANY" NAME="HMAC_MAX_MD_CBLOCK"]
  391 [label=BLOCK ORDER=1 ARGUMENT_INDEX=-1 CODE="{
        return 0;
    }" COLUMN_NUMBER=12 LINE_NUMBER=119 TYPE_FULL_NAME="void"]
  371 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="reset" COLUMN_NUMBER=9 LINE_NUMBER=115 TYPE_FULL_NAME="int" NAME="reset"]
  359 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="len < 0" COLUMN_NUMBER=56 METHOD_FULL_NAME="<operator>.lessThan" LINE_NUMBER=111 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.lessThan"]
  393 [label=LITERAL ORDER=1 ARGUMENT_INDEX=-1 CODE="0" COLUMN_NUMBER=16 LINE_NUMBER=120 TYPE_FULL_NAME="int"]
  568 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->key" COLUMN_NUMBER=29 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=153 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  381 [label=CALL ORDER=1 ARGUMENT_INDEX=-1 CODE="ctx->md" COLUMN_NUMBER=16 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=117 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  344 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="IF" ORDER=8 PARSER_TYPE_NAME="CASTIfStatement" ARGUMENT_INDEX=-1 CODE="if (md != NULL && md != ctx->md && (key == NULL || len < 0))" COLUMN_NUMBER=5 LINE_NUMBER=111]
  597 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="ctx->i_ctx" COLUMN_NUMBER=42 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=158 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  463 [label=LITERAL ORDER=2 ARGUMENT_INDEX=2 CODE="0" COLUMN_NUMBER=23 LINE_NUMBER=135 TYPE_FULL_NAME="int"]
  482 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->key_length" COLUMN_NUMBER=13 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=138 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  335 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="rv" COLUMN_NUMBER=9 LINE_NUMBER=106 TYPE_FULL_NAME="int" NAME="rv"]
  352 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="ctx->md" COLUMN_NUMBER=29 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=111 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  402 [label=CALL ORDER=2 ARGUMENT_INDEX=-1 CODE="j = EVP_MD_block_size(md)" COLUMN_NUMBER=9 METHOD_FULL_NAME="<operator>.assignment" LINE_NUMBER=125 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.assignment"]
  477 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=20 LINE_NUMBER=137 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  413 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="sizeof(ctx->key)" COLUMN_NUMBER=36 METHOD_FULL_NAME="<operator>.sizeOf" LINE_NUMBER=126 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.sizeOf"]
  602 [label=CALL ORDER=13 ARGUMENT_INDEX=-1 CODE="rv = 1" COLUMN_NUMBER=5 METHOD_FULL_NAME="<operator>.assignment" LINE_NUMBER=160 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.assignment"]
  349 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="NULL" COLUMN_NUMBER=15 LINE_NUMBER=111 TYPE_FULL_NAME="ANY" NAME="NULL"]
  605 [label=JUMP_TARGET ORDER=14 PARSER_TYPE_NAME="CASTLabelStatement" ARGUMENT_INDEX=-1 CODE="err:
    if (reset)
        OPENSSL_cleanse(pad, sizeof(pad));" COLUMN_NUMBER=2 LINE_NUMBER=161 NAME="err"]
  414 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->key" COLUMN_NUMBER=43 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=126 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  588 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="md" COLUMN_NUMBER=73 LINE_NUMBER=155 TYPE_FULL_NAME="EVP_MD*" NAME="md"]
  401 [label=LITERAL ORDER=2 ARGUMENT_INDEX=2 CODE="1" COLUMN_NUMBER=17 LINE_NUMBER=124 TYPE_FULL_NAME="int"]
  578 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="o_ctx" COLUMN_NUMBER=32 LINE_NUMBER=154 CANONICAL_NAME="o_ctx"]
  370 [label=CALL ORDER=1 ARGUMENT_INDEX=-1 CODE="reset = 1" COLUMN_NUMBER=9 METHOD_FULL_NAME="<operator>.assignment" LINE_NUMBER=115 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.assignment"]
  398 [label=BLOCK ORDER=2 ARGUMENT_INDEX=-1 CODE="{
        reset = 1;
        j = EVP_MD_block_size(md);
        if (!ossl_assert(j <= (int)sizeof(ctx->key)))
            return 0;
        if (j < len) {
            if (!EVP_DigestInit_ex(ctx->md_ctx, md, impl)
                    || !EVP_DigestUpdate(ctx->md_ctx, key, len)
                    || !EVP_DigestFinal_ex(ctx->md_ctx, ctx->key,
                                           &ctx->key_length))
                return 0;
        } else {
            if (len < 0 || len > (int)sizeof(ctx->key))
                return 0;
            memcpy(ctx->key, key, len);
            ctx->key_length = len;
        }
        if (ctx->key_length != HMAC_MAX_MD_CBLOCK)
            memset(&ctx->key[ctx->key_length], 0,
                   HMAC_MAX_MD_CBLOCK - ctx->key_length);
    }" COLUMN_NUMBER=22 LINE_NUMBER=123 TYPE_FULL_NAME="void"]
  592 [label=CALL ORDER=1 ARGUMENT_INDEX=-1 CODE="!EVP_MD_CTX_copy_ex(ctx->md_ctx, ctx->i_ctx)" COLUMN_NUMBER=9 METHOD_FULL_NAME="<operator>.logicalNot" LINE_NUMBER=158 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.logicalNot"]
  486 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="IF" ORDER=5 PARSER_TYPE_NAME="CASTIfStatement" ARGUMENT_INDEX=-1 CODE="if (ctx->key_length != HMAC_MAX_MD_CBLOCK)" COLUMN_NUMBER=9 LINE_NUMBER=140]
  385 [label=CALL ORDER=1 ARGUMENT_INDEX=-1 CODE="md = ctx->md" COLUMN_NUMBER=9 METHOD_FULL_NAME="<operator>.assignment" LINE_NUMBER=118 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.assignment"]
  350 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="md != ctx->md" COLUMN_NUMBER=23 METHOD_FULL_NAME="<operator>.notEquals" LINE_NUMBER=111 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.notEquals"]
  548 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="md" COLUMN_NUMBER=73 LINE_NUMBER=149 TYPE_FULL_NAME="EVP_MD*" NAME="md"]
  533 [label=CALL ORDER=1 ARGUMENT_INDEX=-1 CODE="!EVP_DigestInit_ex(ctx->i_ctx, md, impl)
                || !EVP_DigestUpdate(ctx->i_ctx, pad, EVP_MD_block_size(md))" COLUMN_NUMBER=13 METHOD_FULL_NAME="<operator>.logicalOr" LINE_NUMBER=148 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.logicalOr"]
  396 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="key" COLUMN_NUMBER=9 LINE_NUMBER=123 TYPE_FULL_NAME="void*" NAME="key"]
  517 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="i" COLUMN_NUMBER=21 LINE_NUMBER=146 TYPE_FULL_NAME="int" NAME="i"]
  581 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="!EVP_DigestUpdate(ctx->o_ctx, pad, EVP_MD_block_size(md))" COLUMN_NUMBER=20 METHOD_FULL_NAME="<operator>.logicalNot" LINE_NUMBER=155 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.logicalNot"]
  460 [label=CALL ORDER=1 ARGUMENT_INDEX=-1 CODE="len < 0 || len > (int)sizeof(ctx->key)" COLUMN_NUMBER=17 METHOD_FULL_NAME="<operator>.logicalOr" LINE_NUMBER=135 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.logicalOr"]
  440 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="key" COLUMN_NUMBER=55 LINE_NUMBER=130 TYPE_FULL_NAME="void*" NAME="key"]
  552 [label=BLOCK ORDER=1 ARGUMENT_INDEX=-1 CODE="<empty>" COLUMN_NUMBER=9 LINE_NUMBER=152 TYPE_FULL_NAME="void"]
  446 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="md_ctx" COLUMN_NUMBER=44 LINE_NUMBER=131 CANONICAL_NAME="md_ctx"]
  353 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=29 LINE_NUMBER=111 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  574 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="!EVP_DigestInit_ex(ctx->o_ctx, md, impl)" COLUMN_NUMBER=13 METHOD_FULL_NAME="<operator>.logicalNot" LINE_NUMBER=154 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.logicalNot"]
  593 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="EVP_MD_CTX_copy_ex(ctx->md_ctx, ctx->i_ctx)" COLUMN_NUMBER=10 METHOD_FULL_NAME="EVP_MD_CTX_copy_ex" LINE_NUMBER=158 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="EVP_MD_CTX_copy_ex"]
  564 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="i" COLUMN_NUMBER=17 LINE_NUMBER=153 TYPE_FULL_NAME="int" NAME="i"]
  389 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="md" COLUMN_NUMBER=14 LINE_NUMBER=118 CANONICAL_NAME="md"]
  394 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="IF" ORDER=10 PARSER_TYPE_NAME="CASTIfStatement" ARGUMENT_INDEX=-1 CODE="if (key != NULL)" COLUMN_NUMBER=5 LINE_NUMBER=123]
  342 [label=LITERAL ORDER=2 ARGUMENT_INDEX=2 CODE="0" COLUMN_NUMBER=23 LINE_NUMBER=107 TYPE_FULL_NAME="int"]
  395 [label=CALL ORDER=1 ARGUMENT_INDEX=-1 CODE="key != NULL" COLUMN_NUMBER=9 METHOD_FULL_NAME="<operator>.notEquals" LINE_NUMBER=123 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.notEquals"]
  527 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="ctx->key[i]" COLUMN_NUMBER=29 METHOD_FULL_NAME="<operator>.indirectIndexAccess" LINE_NUMBER=147 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectIndexAccess"]
  489 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=13 LINE_NUMBER=140 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  591 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="IF" ORDER=12 PARSER_TYPE_NAME="CASTIfStatement" ARGUMENT_INDEX=-1 CODE="if (!EVP_MD_CTX_copy_ex(ctx->md_ctx, ctx->i_ctx))" COLUMN_NUMBER=5 LINE_NUMBER=158]
  500 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=30 LINE_NUMBER=141 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  466 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="(int)sizeof(ctx->key)" COLUMN_NUMBER=34 METHOD_FULL_NAME="<operator>.cast" LINE_NUMBER=135 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.cast"]
  451 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->key_length" COLUMN_NUMBER=45 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=132 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  559 [label=CALL ORDER=3 ARGUMENT_INDEX=3 CODE="i++" COLUMN_NUMBER=45 METHOD_FULL_NAME="<operator>.postIncrement" LINE_NUMBER=152 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.postIncrement"]
  902 [label=METHOD_PARAMETER_OUT ORDER=2 CODE="const void *key" IS_VARIADIC=false COLUMN_NUMBER=33 LINE_NUMBER=103 TYPE_FULL_NAME="void*" EVALUATION_STRATEGY="BY_VALUE" INDEX=2 NAME="key"]
  456 [label=LITERAL ORDER=1 ARGUMENT_INDEX=-1 CODE="0" COLUMN_NUMBER=24 LINE_NUMBER=133 TYPE_FULL_NAME="int"]
  551 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="FOR" ORDER=3 PARSER_TYPE_NAME="CASTForStatement" ARGUMENT_INDEX=-1 CODE="for (i = 0;i < HMAC_MAX_MD_CBLOCK;i++)" COLUMN_NUMBER=9 LINE_NUMBER=152]
  348 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="md" COLUMN_NUMBER=9 LINE_NUMBER=111 TYPE_FULL_NAME="EVP_MD*" NAME="md"]
  455 [label=RETURN ORDER=1 ARGUMENT_INDEX=1 CODE="return 0;" COLUMN_NUMBER=17 LINE_NUMBER=133]
  426 [label=CALL ORDER=1 ARGUMENT_INDEX=-1 CODE="!EVP_DigestInit_ex(ctx->md_ctx, md, impl)
                    || !EVP_DigestUpdate(ctx->md_ctx, key, len)
                    || !EVP_DigestFinal_ex(ctx->md_ctx, ctx->key,
                                           &ctx->key_length)" COLUMN_NUMBER=17 METHOD_FULL_NAME="<operator>.logicalOr" LINE_NUMBER=129 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.logicalOr"]
  378 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="ELSE" ORDER=3 PARSER_TYPE_NAME="CASTIfStatement" ARGUMENT_INDEX=-1 CODE="else" COLUMN_NUMBER=12 LINE_NUMBER=117]
  449 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="key" COLUMN_NUMBER=57 LINE_NUMBER=131 CANONICAL_NAME="key"]
  556 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="i < HMAC_MAX_MD_CBLOCK" COLUMN_NUMBER=21 METHOD_FULL_NAME="<operator>.lessThan" LINE_NUMBER=152 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.lessThan"]
  596 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="md_ctx" COLUMN_NUMBER=29 LINE_NUMBER=158 CANONICAL_NAME="md_ctx"]
  445 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=44 LINE_NUMBER=131 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  366 [label=CALL ORDER=1 ARGUMENT_INDEX=-1 CODE="md != NULL" COLUMN_NUMBER=9 METHOD_FULL_NAME="<operator>.notEquals" LINE_NUMBER=114 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.notEquals"]
  555 [label=LITERAL ORDER=2 ARGUMENT_INDEX=2 CODE="0" COLUMN_NUMBER=18 LINE_NUMBER=152 TYPE_FULL_NAME="int"]
  490 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="key_length" COLUMN_NUMBER=13 LINE_NUMBER=140 CANONICAL_NAME="key_length"]
  473 [label=RETURN ORDER=1 ARGUMENT_INDEX=1 CODE="return 0;" COLUMN_NUMBER=17 LINE_NUMBER=136]
  510 [label=BLOCK ORDER=2 ARGUMENT_INDEX=-1 CODE="{
        for (i = 0; i < HMAC_MAX_MD_CBLOCK; i++)
            pad[i] = 0x36 ^ ctx->key[i];
        if (!EVP_DigestInit_ex(ctx->i_ctx, md, impl)
                || !EVP_DigestUpdate(ctx->i_ctx, pad, EVP_MD_block_size(md)))
            goto err;

        for (i = 0; i < HMAC_MAX_MD_CBLOCK; i++)
            pad[i] = 0x5c ^ ctx->key[i];
        if (!EVP_DigestInit_ex(ctx->o_ctx, md, impl)
                || !EVP_DigestUpdate(ctx->o_ctx, pad, EVP_MD_block_size(md)))
            goto err;
    }" COLUMN_NUMBER=16 LINE_NUMBER=145 TYPE_FULL_NAME="void"]
  545 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="i_ctx" COLUMN_NUMBER=38 LINE_NUMBER=149 CANONICAL_NAME="i_ctx"]
  476 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->key" COLUMN_NUMBER=20 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=137 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  404 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="EVP_MD_block_size(md)" COLUMN_NUMBER=13 METHOD_FULL_NAME="EVP_MD_block_size" LINE_NUMBER=125 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="EVP_MD_block_size"]
  420 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="IF" ORDER=4 PARSER_TYPE_NAME="CASTIfStatement" ARGUMENT_INDEX=-1 CODE="if (j < len)" COLUMN_NUMBER=9 LINE_NUMBER=128]
  603 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="rv" COLUMN_NUMBER=5 LINE_NUMBER=160 TYPE_FULL_NAME="int" NAME="rv"]
  480 [label=IDENTIFIER ORDER=3 ARGUMENT_INDEX=3 CODE="len" COLUMN_NUMBER=35 LINE_NUMBER=137 TYPE_FULL_NAME="int" NAME="len"]
  464 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="len > (int)sizeof(ctx->key)" COLUMN_NUMBER=28 METHOD_FULL_NAME="<operator>.greaterThan" LINE_NUMBER=135 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.greaterThan"]
  364 [label=LITERAL ORDER=1 ARGUMENT_INDEX=-1 CODE="0" COLUMN_NUMBER=16 LINE_NUMBER=112 TYPE_FULL_NAME="int"]
  351 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="md" COLUMN_NUMBER=23 LINE_NUMBER=111 TYPE_FULL_NAME="EVP_MD*" NAME="md"]
  606 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="IF" ORDER=15 PARSER_TYPE_NAME="CASTIfStatement" ARGUMENT_INDEX=-1 CODE="if (reset)" COLUMN_NUMBER=5 LINE_NUMBER=162]
  336 [label=LITERAL ORDER=2 ARGUMENT_INDEX=2 CODE="0" COLUMN_NUMBER=14 LINE_NUMBER=106 TYPE_FULL_NAME="int"]
  452 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=45 LINE_NUMBER=132 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  496 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->key" COLUMN_NUMBER=21 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=141 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  433 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="md" COLUMN_NUMBER=49 LINE_NUMBER=129 TYPE_FULL_NAME="EVP_MD*" NAME="md"]
  599 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="i_ctx" COLUMN_NUMBER=42 LINE_NUMBER=158 CANONICAL_NAME="i_ctx"]
  435 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="!EVP_DigestUpdate(ctx->md_ctx, key, len)" COLUMN_NUMBER=24 METHOD_FULL_NAME="<operator>.logicalNot" LINE_NUMBER=130 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.logicalNot"]
  523 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="pad" COLUMN_NUMBER=13 LINE_NUMBER=147 TYPE_FULL_NAME="unsigned char[HMAC_MAX_MD_CBLOCK]" NAME="pad"]
  905 [label=METHOD_PARAMETER_OUT ORDER=5 CODE="ENGINE *impl" IS_VARIADIC=false COLUMN_NUMBER=36 LINE_NUMBER=104 TYPE_FULL_NAME="ENGINE*" EVALUATION_STRATEGY="BY_VALUE" INDEX=5 NAME="impl"]
  611 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="sizeof(pad)" COLUMN_NUMBER=30 METHOD_FULL_NAME="<operator>.sizeOf" LINE_NUMBER=163 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.sizeOf"]
  563 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="pad" COLUMN_NUMBER=13 LINE_NUMBER=153 TYPE_FULL_NAME="unsigned char[HMAC_MAX_MD_CBLOCK]" NAME="pad"]
  376 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="md" COLUMN_NUMBER=9 LINE_NUMBER=116 CANONICAL_NAME="md"]
  339 [label=LOCAL ORDER=5 CODE="int reset" COLUMN_NUMBER=15 LINE_NUMBER=107 TYPE_FULL_NAME="int" NAME="reset"]
  330 [label=METHOD_PARAMETER_IN ORDER=4 CODE="const EVP_MD *md" IS_VARIADIC=false COLUMN_NUMBER=18 LINE_NUMBER=104 TYPE_FULL_NAME="EVP_MD*" EVALUATION_STRATEGY="BY_VALUE" INDEX=4 NAME="md"]
  417 [label=BLOCK ORDER=2 ARGUMENT_INDEX=-1 CODE="<empty>" COLUMN_NUMBER=13 LINE_NUMBER=127 TYPE_FULL_NAME="void"]
  571 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="i" COLUMN_NUMBER=38 LINE_NUMBER=153 TYPE_FULL_NAME="int" NAME="i"]
  589 [label=BLOCK ORDER=2 ARGUMENT_INDEX=-1 CODE="<empty>" COLUMN_NUMBER=13 LINE_NUMBER=156 TYPE_FULL_NAME="void"]
  614 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=-1 CODE="rv" COLUMN_NUMBER=12 LINE_NUMBER=164 TYPE_FULL_NAME="int" NAME="rv"]
  514 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="i" COLUMN_NUMBER=14 LINE_NUMBER=146 TYPE_FULL_NAME="int" NAME="i"]
  343 [label=LOCAL ORDER=7 CODE="unsigned char[HMAC_MAX_MD_CBLOCK] pad" COLUMN_NUMBER=19 LINE_NUMBER=108 TYPE_FULL_NAME="unsigned char[HMAC_MAX_MD_CBLOCK]" NAME="pad"]
  565 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="0x5c ^ ctx->key[i]" COLUMN_NUMBER=22 METHOD_FULL_NAME="<operator>.xor" LINE_NUMBER=153 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.xor"]
  418 [label=RETURN ORDER=1 ARGUMENT_INDEX=1 CODE="return 0;" COLUMN_NUMBER=13 LINE_NUMBER=127]
  506 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=41 LINE_NUMBER=142 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  387 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="ctx->md" COLUMN_NUMBER=14 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=118 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  541 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="!EVP_DigestUpdate(ctx->i_ctx, pad, EVP_MD_block_size(md))" COLUMN_NUMBER=20 METHOD_FULL_NAME="<operator>.logicalNot" LINE_NUMBER=149 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.logicalNot"]
  520 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="i" COLUMN_NUMBER=45 LINE_NUMBER=146 TYPE_FULL_NAME="int" NAME="i"]
  569 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=29 LINE_NUMBER=153 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  492 [label=BLOCK ORDER=2 ARGUMENT_INDEX=-1 CODE="<empty>" COLUMN_NUMBER=13 LINE_NUMBER=141 TYPE_FULL_NAME="void"]
  521 [label=CALL ORDER=4 ARGUMENT_INDEX=-1 CODE="pad[i] = 0x36 ^ ctx->key[i]" COLUMN_NUMBER=13 METHOD_FULL_NAME="<operator>.assignment" LINE_NUMBER=147 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.assignment"]
  583 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->o_ctx" COLUMN_NUMBER=38 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=155 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  450 [label=CALL ORDER=3 ARGUMENT_INDEX=3 CODE="&ctx->key_length" COLUMN_NUMBER=44 METHOD_FULL_NAME="<operator>.addressOf" LINE_NUMBER=132 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.addressOf"]
  457 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="ELSE" ORDER=3 PARSER_TYPE_NAME="CASTCompoundStatement" ARGUMENT_INDEX=-1 CODE="else" COLUMN_NUMBER=16 LINE_NUMBER=134]
  462 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="len" COLUMN_NUMBER=17 LINE_NUMBER=135 TYPE_FULL_NAME="int" NAME="len"]
  372 [label=LITERAL ORDER=2 ARGUMENT_INDEX=2 CODE="1" COLUMN_NUMBER=17 LINE_NUMBER=115 TYPE_FULL_NAME="int"]
  526 [label=LITERAL ORDER=1 ARGUMENT_INDEX=1 CODE="0x36" COLUMN_NUMBER=22 LINE_NUMBER=147 TYPE_FULL_NAME="int"]
  584 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=38 LINE_NUMBER=155 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  425 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="IF" ORDER=1 PARSER_TYPE_NAME="CASTIfStatement" ARGUMENT_INDEX=-1 CODE="if (!EVP_DigestInit_ex(ctx->md_ctx, md, impl)
                    || !EVP_DigestUpdate(ctx->md_ctx, key, len)
                    || !EVP_DigestFinal_ex(ctx->md_ctx, ctx->key,
                                           &ctx->key_length))" COLUMN_NUMBER=13 LINE_NUMBER=129]
  483 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=13 LINE_NUMBER=138 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  362 [label=BLOCK ORDER=2 ARGUMENT_INDEX=-1 CODE="<empty>" COLUMN_NUMBER=9 LINE_NUMBER=112 TYPE_FULL_NAME="void"]
  543 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->i_ctx" COLUMN_NUMBER=38 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=149 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  499 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="ctx->key_length" COLUMN_NUMBER=30 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=141 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  512 [label=BLOCK ORDER=1 ARGUMENT_INDEX=-1 CODE="<empty>" COLUMN_NUMBER=9 LINE_NUMBER=146 TYPE_FULL_NAME="void"]
  340 [label=CALL ORDER=6 ARGUMENT_INDEX=-1 CODE="reset = 0" COLUMN_NUMBER=15 METHOD_FULL_NAME="<operator>.assignment" LINE_NUMBER=107 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.assignment"]
  443 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="EVP_DigestFinal_ex(ctx->md_ctx, ctx->key,
                                           &ctx->key_length)" COLUMN_NUMBER=25 METHOD_FULL_NAME="EVP_DigestFinal_ex" LINE_NUMBER=131 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="EVP_DigestFinal_ex"]
  537 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=32 LINE_NUMBER=148 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  379 [label=BLOCK ORDER=1 ARGUMENT_INDEX=-1 CODE="<empty>" COLUMN_NUMBER=12 LINE_NUMBER=117 TYPE_FULL_NAME="void"]
  422 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="j" COLUMN_NUMBER=13 LINE_NUMBER=128 TYPE_FULL_NAME="int" NAME="j"]
  594 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->md_ctx" COLUMN_NUMBER=29 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=158 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  357 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="key" COLUMN_NUMBER=41 LINE_NUMBER=111 TYPE_FULL_NAME="void*" NAME="key"]
  434 [label=IDENTIFIER ORDER=3 ARGUMENT_INDEX=3 CODE="impl" COLUMN_NUMBER=53 LINE_NUMBER=129 TYPE_FULL_NAME="ENGINE*" NAME="impl"]
  428 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="!EVP_DigestInit_ex(ctx->md_ctx, md, impl)" COLUMN_NUMBER=17 METHOD_FULL_NAME="<operator>.logicalNot" LINE_NUMBER=129 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.logicalNot"]
  390 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="ELSE" ORDER=3 PARSER_TYPE_NAME="CASTCompoundStatement" ARGUMENT_INDEX=-1 CODE="else" COLUMN_NUMBER=12 LINE_NUMBER=119]
  522 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="pad[i]" COLUMN_NUMBER=13 METHOD_FULL_NAME="<operator>.indirectIndexAccess" LINE_NUMBER=147 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectIndexAccess"]
  392 [label=RETURN ORDER=1 ARGUMENT_INDEX=-1 CODE="return 0;" COLUMN_NUMBER=9 LINE_NUMBER=120]
  459 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="IF" ORDER=1 PARSER_TYPE_NAME="CASTIfStatement" ARGUMENT_INDEX=-1 CODE="if (len < 0 || len > (int)sizeof(ctx->key))" COLUMN_NUMBER=13 LINE_NUMBER=135]
  579 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="md" COLUMN_NUMBER=44 LINE_NUMBER=154 TYPE_FULL_NAME="EVP_MD*" NAME="md"]
  400 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="reset" COLUMN_NUMBER=9 LINE_NUMBER=124 TYPE_FULL_NAME="int" NAME="reset"]
  531 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="i" COLUMN_NUMBER=38 LINE_NUMBER=147 TYPE_FULL_NAME="int" NAME="i"]
  502 [label=LITERAL ORDER=2 ARGUMENT_INDEX=2 CODE="0" COLUMN_NUMBER=48 LINE_NUMBER=141 TYPE_FULL_NAME="int"]
  429 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="EVP_DigestInit_ex(ctx->md_ctx, md, impl)" COLUMN_NUMBER=18 METHOD_FULL_NAME="EVP_DigestInit_ex" LINE_NUMBER=129 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="EVP_DigestInit_ex"]
  497 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=21 LINE_NUMBER=141 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  469 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->key" COLUMN_NUMBER=46 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=135 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  386 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="md" COLUMN_NUMBER=9 LINE_NUMBER=118 TYPE_FULL_NAME="EVP_MD*" NAME="md"]
  901 [label=METHOD_PARAMETER_OUT ORDER=1 CODE="HMAC_CTX *ctx" IS_VARIADIC=false COLUMN_NUMBER=18 LINE_NUMBER=103 TYPE_FULL_NAME="HMAC_CTX*" EVALUATION_STRATEGY="BY_VALUE" INDEX=1 NAME="ctx"]
  567 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="ctx->key[i]" COLUMN_NUMBER=29 METHOD_FULL_NAME="<operator>.indirectIndexAccess" LINE_NUMBER=153 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectIndexAccess"]
  511 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="FOR" ORDER=1 PARSER_TYPE_NAME="CASTForStatement" ARGUMENT_INDEX=-1 CODE="for (i = 0;i < HMAC_MAX_MD_CBLOCK;i++)" COLUMN_NUMBER=9 LINE_NUMBER=146]
  572 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="IF" ORDER=4 PARSER_TYPE_NAME="CASTIfStatement" ARGUMENT_INDEX=-1 CODE="if (!EVP_DigestInit_ex(ctx->o_ctx, md, impl)
                || !EVP_DigestUpdate(ctx->o_ctx, pad, EVP_MD_block_size(md)))" COLUMN_NUMBER=9 LINE_NUMBER=154]
  557 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="i" COLUMN_NUMBER=21 LINE_NUMBER=152 TYPE_FULL_NAME="int" NAME="i"]
  410 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="j" COLUMN_NUMBER=26 LINE_NUMBER=126 TYPE_FULL_NAME="int" NAME="j"]
  472 [label=BLOCK ORDER=2 ARGUMENT_INDEX=-1 CODE="<empty>" COLUMN_NUMBER=17 LINE_NUMBER=136 TYPE_FULL_NAME="void"]
  345 [label=CALL ORDER=1 ARGUMENT_INDEX=-1 CODE="md != NULL && md != ctx->md && (key == NULL || len < 0)" COLUMN_NUMBER=9 METHOD_FULL_NAME="<operator>.logicalAnd" LINE_NUMBER=111 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.logicalAnd"]
  481 [label=CALL ORDER=3 ARGUMENT_INDEX=-1 CODE="ctx->key_length = len" COLUMN_NUMBER=13 METHOD_FULL_NAME="<operator>.assignment" LINE_NUMBER=138 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.assignment"]
  341 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="reset" COLUMN_NUMBER=15 LINE_NUMBER=107 TYPE_FULL_NAME="int" NAME="reset"]
  609 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="OPENSSL_cleanse(pad, sizeof(pad))" COLUMN_NUMBER=9 METHOD_FULL_NAME="OPENSSL_cleanse" LINE_NUMBER=163 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="OPENSSL_cleanse"]
  508 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="IF" ORDER=11 PARSER_TYPE_NAME="CASTIfStatement" ARGUMENT_INDEX=-1 CODE="if (reset)" COLUMN_NUMBER=5 LINE_NUMBER=145]
  553 [label=CALL ORDER=1 ARGUMENT_INDEX=-1 CODE="i = 0" COLUMN_NUMBER=14 METHOD_FULL_NAME="<operator>.assignment" LINE_NUMBER=152 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.assignment"]
  407 [label=CALL ORDER=1 ARGUMENT_INDEX=-1 CODE="!ossl_assert(j <= (int)sizeof(ctx->key))" COLUMN_NUMBER=13 METHOD_FULL_NAME="<operator>.logicalNot" LINE_NUMBER=126 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.logicalNot"]
  582 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="EVP_DigestUpdate(ctx->o_ctx, pad, EVP_MD_block_size(md))" COLUMN_NUMBER=21 METHOD_FULL_NAME="EVP_DigestUpdate" LINE_NUMBER=155 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="EVP_DigestUpdate"]
  598 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=42 LINE_NUMBER=158 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  427 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="!EVP_DigestInit_ex(ctx->md_ctx, md, impl)
                    || !EVP_DigestUpdate(ctx->md_ctx, key, len)" COLUMN_NUMBER=17 METHOD_FULL_NAME="<operator>.logicalOr" LINE_NUMBER=129 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.logicalOr"]
  461 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="len < 0" COLUMN_NUMBER=17 METHOD_FULL_NAME="<operator>.lessThan" LINE_NUMBER=135 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.lessThan"]
  601 [label=CONTROL_STRUCTURE CONTROL_STRUCTURE_TYPE="GOTO" ORDER=1 PARSER_TYPE_NAME="CASTGotoStatement" ARGUMENT_INDEX=1 CODE="goto err;" COLUMN_NUMBER=9 LINE_NUMBER=159]
  501 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="key_length" COLUMN_NUMBER=30 LINE_NUMBER=141 CANONICAL_NAME="key_length"]
  424 [label=BLOCK ORDER=2 ARGUMENT_INDEX=-1 CODE="{
            if (!EVP_DigestInit_ex(ctx->md_ctx, md, impl)
                    || !EVP_DigestUpdate(ctx->md_ctx, key, len)
                    || !EVP_DigestFinal_ex(ctx->md_ctx, ctx->key,
                                           &ctx->key_length))
                return 0;
        }" COLUMN_NUMBER=22 LINE_NUMBER=128 TYPE_FULL_NAME="void"]
  329 [label=METHOD_PARAMETER_IN ORDER=3 CODE="int len" IS_VARIADIC=false COLUMN_NUMBER=50 LINE_NUMBER=103 TYPE_FULL_NAME="int" EVALUATION_STRATEGY="BY_VALUE" INDEX=3 NAME="len"]
  465 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="len" COLUMN_NUMBER=28 LINE_NUMBER=135 TYPE_FULL_NAME="int" NAME="len"]
  397 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="NULL" COLUMN_NUMBER=16 LINE_NUMBER=123 TYPE_FULL_NAME="ANY" NAME="NULL"]
  384 [label=BLOCK ORDER=2 ARGUMENT_INDEX=-1 CODE="{
        md = ctx->md;
    }" COLUMN_NUMBER=25 LINE_NUMBER=117 TYPE_FULL_NAME="void"]
  498 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="key" COLUMN_NUMBER=21 LINE_NUMBER=141 CANONICAL_NAME="key"]
  375 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=9 LINE_NUMBER=116 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  470 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=46 LINE_NUMBER=135 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  358 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="NULL" COLUMN_NUMBER=48 LINE_NUMBER=111 TYPE_FULL_NAME="ANY" NAME="NULL"]
  437 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ctx->md_ctx" COLUMN_NUMBER=42 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=130 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  542 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="EVP_DigestUpdate(ctx->i_ctx, pad, EVP_MD_block_size(md))" COLUMN_NUMBER=21 METHOD_FULL_NAME="EVP_DigestUpdate" LINE_NUMBER=149 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="EVP_DigestUpdate"]
  331 [label=METHOD_PARAMETER_IN ORDER=5 CODE="ENGINE *impl" IS_VARIADIC=false COLUMN_NUMBER=36 LINE_NUMBER=104 TYPE_FULL_NAME="ENGINE*" EVALUATION_STRATEGY="BY_VALUE" INDEX=5 NAME="impl"]
  408 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="ossl_assert(j <= (int)sizeof(ctx->key))" COLUMN_NUMBER=14 METHOD_FULL_NAME="ossl_assert" LINE_NUMBER=126 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="ossl_assert"]
  403 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="j" COLUMN_NUMBER=9 LINE_NUMBER=125 TYPE_FULL_NAME="int" NAME="j"]
  561 [label=CALL ORDER=4 ARGUMENT_INDEX=-1 CODE="pad[i] = 0x5c ^ ctx->key[i]" COLUMN_NUMBER=13 METHOD_FULL_NAME="<operator>.assignment" LINE_NUMBER=153 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.assignment"]
  615 [label=METHOD_RETURN ORDER=7 CODE="RET" COLUMN_NUMBER=1 LINE_NUMBER=103 TYPE_FULL_NAME="int" EVALUATION_STRATEGY="BY_VALUE"]
  530 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="key" COLUMN_NUMBER=29 LINE_NUMBER=147 CANONICAL_NAME="key"]
  610 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="pad" COLUMN_NUMBER=25 LINE_NUMBER=163 TYPE_FULL_NAME="unsigned char[HMAC_MAX_MD_CBLOCK]" NAME="pad"]
  570 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="key" COLUMN_NUMBER=29 LINE_NUMBER=153 CANONICAL_NAME="key"]
  505 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="ctx->key_length" COLUMN_NUMBER=41 METHOD_FULL_NAME="<operator>.indirectFieldAccess" LINE_NUMBER=142 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.indirectFieldAccess"]
  580 [label=IDENTIFIER ORDER=3 ARGUMENT_INDEX=3 CODE="impl" COLUMN_NUMBER=48 LINE_NUMBER=154 TYPE_FULL_NAME="ENGINE*" NAME="impl"]
  485 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="len" COLUMN_NUMBER=31 LINE_NUMBER=138 TYPE_FULL_NAME="int" NAME="len"]
  560 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="i" COLUMN_NUMBER=45 LINE_NUMBER=152 TYPE_FULL_NAME="int" NAME="i"]
  448 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="ctx" COLUMN_NUMBER=57 LINE_NUMBER=131 TYPE_FULL_NAME="HMAC_CTX*" NAME="ctx"]
  346 [label=CALL ORDER=1 ARGUMENT_INDEX=1 CODE="md != NULL && md != ctx->md" COLUMN_NUMBER=9 METHOD_FULL_NAME="<operator>.logicalAnd" LINE_NUMBER=111 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.logicalAnd"]
  903 [label=METHOD_PARAMETER_OUT ORDER=3 CODE="int len" IS_VARIADIC=false COLUMN_NUMBER=50 LINE_NUMBER=103 TYPE_FULL_NAME="int" EVALUATION_STRATEGY="BY_VALUE" INDEX=3 NAME="len"]
  538 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="i_ctx" COLUMN_NUMBER=32 LINE_NUMBER=148 CANONICAL_NAME="i_ctx"]
  507 [label=FIELD_IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="key_length" COLUMN_NUMBER=41 LINE_NUMBER=142 CANONICAL_NAME="key_length"]
  368 [label=IDENTIFIER ORDER=2 ARGUMENT_INDEX=2 CODE="NULL" COLUMN_NUMBER=15 LINE_NUMBER=114 TYPE_FULL_NAME="ANY" NAME="NULL"]
  399 [label=CALL ORDER=1 ARGUMENT_INDEX=-1 CODE="reset = 1" COLUMN_NUMBER=9 METHOD_FULL_NAME="<operator>.assignment" LINE_NUMBER=124 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.assignment"]
  604 [label=LITERAL ORDER=2 ARGUMENT_INDEX=2 CODE="1" COLUMN_NUMBER=10 LINE_NUMBER=160 TYPE_FULL_NAME="int"]
  614 -> 607 [label=POST_DOMINATE ]
  533 -> 579 [label=CDG ]
  416 -> 414 [label=DOMINATE ]
  359 -> 615 [label=REACHING_DEF VARIABLE="len < 0"]
  540 -> 535 [label=REACHING_DEF VARIABLE="impl"]
  441 -> 440 [label=POST_DOMINATE ]
  389 -> 388 [label=POST_DOMINATE ]
  585 -> 583 [label=CFG ]
  488 -> 505 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  576 -> 578 [label=ARGUMENT ]
  340 -> 342 [label=ARGUMENT ]
  326 -> 569 [label=REACHING_DEF VARIABLE=""]
  378 -> 379 [label=AST ]
  460 -> 477 [label=DOMINATE ]
  326 -> 607 [label=CONTAINS ]
  366 -> 396 [label=CDG ]
  474 -> 473 [label=CFG ]
  556 -> 558 [label=POST_DOMINATE ]
  515 -> 514 [label=REACHING_DEF VARIABLE="0"]
  508 -> 509 [label=AST ]
  450 -> 443 [label=CFG ]
  461 -> 466 [label=CDG ]
  326 -> 596 [label=CONTAINS ]
  520 -> 519 [label=DOMINATE ]
  536 -> 539 [label=DOMINATE ]
  370 -> 375 [label=CFG ]
  352 -> 353 [label=ARGUMENT ]
  476 -> 478 [label=AST ]
  509 -> 596 [label=CDG ]
  405 -> 404 [label=REACHING_DEF VARIABLE="md"]
  359 -> 360 [label=AST ]
  421 -> 430 [label=CDG ]
  326 -> 455 [label=CONTAINS ]
  561 -> 565 [label=POST_DOMINATE ]
  546 -> 586 [label=REACHING_DEF VARIABLE="pad"]
  578 -> 576 [label=CFG ]
  562 -> 586 [label=REACHING_DEF VARIABLE="pad[i]"]
  455 -> 456 [label=POST_DOMINATE ]
  468 -> 466 [label=CFG ]
  326 -> 562 [label=CONTAINS ]
  561 -> 560 [label=CFG ]
  346 -> 355 [label=REACHING_DEF VARIABLE="md != NULL && md != ctx->md"]
  326 -> 447 [label=CONTAINS ]
  589 -> 590 [label=AST ]
  520 -> 521 [label=POST_DOMINATE ]
  508 -> 510 [label=AST ]
  401 -> 400 [label=POST_DOMINATE ]
  437 -> 439 [label=ARGUMENT ]
  326 -> 487 [label=CONTAINS ]
  576 -> 579 [label=REACHING_DEF VARIABLE="ctx->o_ctx"]
  465 -> 329 [label=REF ]
  509 -> 493 [label=POST_DOMINATE ]
  527 -> 528 [label=ARGUMENT ]
  326 -> 415 [label=REACHING_DEF VARIABLE=""]
  326 -> 368 [label=CONTAINS ]
  595 -> 327 [label=REF ]
  477 -> 478 [label=DOMINATE ]
  467 -> 470 [label=DOMINATE ]
  326 -> 554 [label=CONTAINS ]
  475 -> 480 [label=ARGUMENT ]
  332 -> 365 [label=AST ]
  363 -> 364 [label=AST ]
  430 -> 594 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  427 -> 435 [label=AST ]
  346 -> 347 [label=ARGUMENT ]
  462 -> 463 [label=CFG ]
  395 -> 607 [label=CDG ]
  326 -> 555 [label=CONTAINS ]
  430 -> 434 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  513 -> 514 [label=AST ]
  428 -> 435 [label=CDG ]
  487 -> 497 [label=CFG ]
  326 -> 484 [label=CONTAINS ]
  355 -> 359 [label=POST_DOMINATE ]
  539 -> 540 [label=REACHING_DEF VARIABLE="md"]
  430 -> 598 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  437 -> 595 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  381 -> 386 [label=CDG ]
  444 -> 598 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  367 -> 368 [label=REACHING_DEF VARIABLE="md"]
  430 -> 584 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  469 -> 471 [label=AST ]
  528 -> 529 [label=AST ]
  368 -> 367 [label=POST_DOMINATE ]
  326 -> 593 [label=CONTAINS ]
  351 -> 353 [label=DOMINATE ]
  516 -> 530 [label=CDG ]
  326 -> 483 [label=REACHING_DEF VARIABLE=""]
  525 -> 522 [label=REACHING_DEF VARIABLE="0x36 ^ ctx->key[i]"]
  326 -> 361 [label=REACHING_DEF VARIABLE=""]
  460 -> 464 [label=POST_DOMINATE ]
  428 -> 427 [label=REACHING_DEF VARIABLE="!EVP_DigestInit_ex(ctx->md_ctx, md, impl)"]
  437 -> 500 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  594 -> 597 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  371 -> 372 [label=DOMINATE ]
  427 -> 442 [label=CDG ]
  534 -> 533 [label=CFG ]
  407 -> 423 [label=CDG ]
  326 -> 471 [label=CONTAINS ]
  346 -> 347 [label=AST ]
  575 -> 576 [label=AST ]
  594 -> 598 [label=CFG ]
  414 -> 584 [label=REACHING_DEF VARIABLE="ctx->key"]
  414 -> 416 [label=AST ]
  463 -> 462 [label=POST_DOMINATE ]
  566 -> 569 [label=DOMINATE ]
  612 -> 611 [label=REACHING_DEF VARIABLE="pad"]
  326 -> 434 [label=CONTAINS ]
  435 -> 428 [label=REACHING_DEF VARIABLE="!EVP_DigestUpdate(ctx->md_ctx, key, len)"]
  348 -> 351 [label=REACHING_DEF VARIABLE="md"]
  381 -> 396 [label=CDG ]
  569 -> 327 [label=REF ]
  427 -> 435 [label=ARGUMENT ]
  326 -> 341 [label=CONTAINS ]
  366 -> 371 [label=CDG ]
  418 -> 419 [label=POST_DOMINATE ]
  430 -> 432 [label=AST ]
  387 -> 595 [label=REACHING_DEF VARIABLE="ctx->md"]
  372 -> 370 [label=DOMINATE ]
  426 -> 442 [label=AST ]
  326 -> 601 [label=CONTAINS ]
  377 -> 373 [label=CFG ]
  475 -> 480 [label=AST ]
  592 -> 593 [label=POST_DOMINATE ]
  525 -> 521 [label=DOMINATE ]
  431 -> 327 [label=REF ]
  373 -> 377 [label=AST ]
  366 -> 382 [label=DOMINATE ]
  575 -> 576 [label=ARGUMENT ]
  593 -> 592 [label=REACHING_DEF VARIABLE="EVP_MD_CTX_copy_ex(ctx->md_ctx, ctx->i_ctx)"]
  433 -> 430 [label=POST_DOMINATE ]
  583 -> 595 [label=REACHING_DEF VARIABLE="ctx->o_ctx"]
  434 -> 429 [label=CFG ]
  468 -> 469 [label=POST_DOMINATE ]
  444 -> 544 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  428 -> 441 [label=CDG ]
  488 -> 497 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  448 -> 449 [label=DOMINATE ]
  524 -> 337 [label=REF ]
  397 -> 396 [label=POST_DOMINATE ]
  524 -> 522 [label=DOMINATE ]
  556 -> 570 [label=CDG ]
  436 -> 440 [label=AST ]
  582 -> 587 [label=POST_DOMINATE ]
  326 -> 431 [label=CONTAINS ]
  583 -> 584 [label=AST ]
  426 -> 489 [label=CFG ]
  538 -> 537 [label=POST_DOMINATE ]
  332 -> 338 [label=AST ]
  444 -> 443 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  399 -> 401 [label=ARGUMENT ]
  430 -> 595 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  606 -> 607 [label=AST ]
  561 -> 562 [label=ARGUMENT ]
  370 -> 372 [label=ARGUMENT ]
  332 -> 613 [label=AST ]
  327 -> 352 [label=REACHING_DEF VARIABLE="ctx"]
  381 -> 393 [label=CDG ]
  451 -> 488 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  395 -> 413 [label=CDG ]
  442 -> 427 [label=REACHING_DEF VARIABLE="!EVP_DigestFinal_ex(ctx->md_ctx, ctx->key,
                                           &ctx->key_length)"]
  510 -> 551 [label=AST ]
  414 -> 416 [label=POST_DOMINATE ]
  464 -> 460 [label=CFG ]
  326 -> 424 [label=CONTAINS ]
  356 -> 359 [label=CDG ]
  326 -> 501 [label=CONTAINS ]
  505 -> 544 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  536 -> 543 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  505 -> 503 [label=CFG ]
  518 -> 558 [label=REACHING_DEF VARIABLE="HMAC_MAX_MD_CBLOCK"]
  346 -> 357 [label=CDG ]
  480 -> 485 [label=REACHING_DEF VARIABLE="len"]
  371 -> 339 [label=REF ]
  326 -> 388 [label=REACHING_DEF VARIABLE=""]
  461 -> 464 [label=REACHING_DEF VARIABLE="len < 0"]
  517 -> 518 [label=CFG ]
  335 -> 336 [label=DOMINATE ]
  497 -> 327 [label=REF ]
  447 -> 444 [label=REACHING_DEF VARIABLE="ctx->key"]
  499 -> 501 [label=AST ]
  331 -> 434 [label=REACHING_DEF VARIABLE="impl"]
  476 -> 537 [label=REACHING_DEF VARIABLE="ctx->key"]
  612 -> 610 [label=REACHING_DEF VARIABLE="pad"]
  509 -> 593 [label=CDG ]
  504 -> 505 [label=REACHING_DEF VARIABLE="HMAC_MAX_MD_CBLOCK"]
  395 -> 411 [label=CDG ]
  521 -> 522 [label=ARGUMENT ]
  381 -> 393 [label=DOMINATE ]
  417 -> 418 [label=AST ]
  387 -> 584 [label=REACHING_DEF VARIABLE="ctx->md"]
  435 -> 436 [label=AST ]
  505 -> 507 [label=ARGUMENT ]
  444 -> 447 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  414 -> 568 [label=REACHING_DEF VARIABLE="ctx->key"]
  387 -> 389 [label=ARGUMENT ]
  334 -> 341 [label=CFG ]
  326 -> 518 [label=CONTAINS ]
  389 -> 387 [label=DOMINATE ]
  440 -> 436 [label=REACHING_DEF VARIABLE="key"]
  358 -> 356 [label=REACHING_DEF VARIABLE="NULL"]
  573 -> 581 [label=AST ]
  414 -> 577 [label=REACHING_DEF VARIABLE="ctx->key"]
  326 -> 335 [label=DOMINATE ]
  326 -> 409 [label=CONTAINS ]
  573 -> 597 [label=CDG ]
  374 -> 376 [label=AST ]
  349 -> 348 [label=REACHING_DEF VARIABLE="NULL"]
  484 -> 482 [label=CFG ]
  562 -> 566 [label=CFG ]
  513 -> 515 [label=POST_DOMINATE ]
  326 -> 480 [label=REACHING_DEF VARIABLE=""]
  437 -> 436 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  493 -> 509 [label=CFG ]
  567 -> 571 [label=AST ]
  358 -> 368 [label=REACHING_DEF VARIABLE="NULL"]
  326 -> 340 [label=CONTAINS ]
  414 -> 413 [label=REACHING_DEF VARIABLE="ctx->key"]
  543 -> 584 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  605 -> 573 [label=POST_DOMINATE ]
  366 -> 396 [label=DOMINATE ]
  397 -> 395 [label=DOMINATE ]
  469 -> 471 [label=ARGUMENT ]
  534 -> 548 [label=CDG ]
  487 -> 495 [label=CDG ]
  374 -> 500 [label=REACHING_DEF VARIABLE="ctx->md"]
  352 -> 350 [label=DOMINATE ]
  367 -> 330 [label=REF ]
  474 -> 473 [label=REACHING_DEF VARIABLE="0"]
  326 -> 425 [label=CONTAINS ]
  546 -> 563 [label=REACHING_DEF VARIABLE="pad"]
  560 -> 561 [label=POST_DOMINATE ]
  334 -> 336 [label=AST ]
  374 -> 415 [label=REACHING_DEF VARIABLE="ctx->md"]
  510 -> 572 [label=AST ]
  395 -> 509 [label=DOMINATE ]
  351 -> 615 [label=REACHING_DEF VARIABLE="md"]
  420 -> 457 [label=AST ]
  430 -> 433 [label=CFG ]
  326 -> 462 [label=CONTAINS ]
  533 -> 550 [label=CDG ]
  401 -> 399 [label=CFG ]
  575 -> 574 [label=CFG ]
  327 -> 470 [label=REACHING_DEF VARIABLE="ctx"]
  326 -> 585 [label=CONTAINS ]
  509 -> 539 [label=CDG ]
  536 -> 539 [label=CFG ]
  356 -> 361 [label=CDG ]
  345 -> 364 [label=CDG ]
  366 -> 371 [label=CFG ]
  571 -> 337 [label=REF ]
  509 -> 339 [label=REF ]
  444 -> 446 [label=POST_DOMINATE ]
  600 -> 601 [label=AST ]
  326 -> 345 [label=CONTAINS ]
  410 -> 338 [label=REF ]
  326 -> 433 [label=REACHING_DEF VARIABLE=""]
  411 -> 413 [label=ARGUMENT ]
  516 -> 516 [label=CDG ]
  374 -> 377 [label=DOMINATE ]
  540 -> 535 [label=DOMINATE ]
  488 -> 500 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  545 -> 543 [label=CFG ]
  487 -> 494 [label=CDG ]
  352 -> 375 [label=REACHING_DEF VARIABLE="ctx->md"]
  487 -> 502 [label=CDG ]
  521 -> 522 [label=AST ]
  561 -> 560 [label=DOMINATE ]
  446 -> 444 [label=DOMINATE ]
  444 -> 489 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  341 -> 334 [label=POST_DOMINATE ]
  350 -> 346 [label=CFG ]
  615 -> 613 [label=POST_DOMINATE ]
  578 -> 576 [label=DOMINATE ]
  437 -> 448 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  574 -> 588 [label=CDG ]
  532 -> 549 [label=AST ]
  522 -> 610 [label=REACHING_DEF VARIABLE="pad[i]"]
  543 -> 544 [label=ARGUMENT ]
  473 -> 474 [label=POST_DOMINATE ]
  516 -> 518 [label=POST_DOMINATE ]
  516 -> 527 [label=CDG ]
  326 -> 335 [label=CONTAINS ]
  387 -> 598 [label=REACHING_DEF VARIABLE="ctx->md"]
  523 -> 524 [label=DOMINATE ]
  615 -> 392 [label=POST_DOMINATE ]
  426 -> 614 [label=CDG ]
  586 -> 588 [label=CFG ]
  516 -> 523 [label=CDG ]
  386 -> 539 [label=REACHING_DEF VARIABLE="md"]
  541 -> 534 [label=REACHING_DEF VARIABLE="!EVP_DigestUpdate(ctx->i_ctx, pad, EVP_MD_block_size(md))"]
  327 -> 497 [label=REACHING_DEF VARIABLE="ctx"]
  447 -> 497 [label=REACHING_DEF VARIABLE="ctx->key"]
  336 -> 335 [label=POST_DOMINATE ]
  326 -> 452 [label=REACHING_DEF VARIABLE=""]
  385 -> 387 [label=POST_DOMINATE ]
  364 -> 363 [label=DOMINATE ]
  326 -> 527 [label=CONTAINS ]
  428 -> 438 [label=CDG ]
  326 -> 493 [label=CONTAINS ]
  482 -> 484 [label=ARGUMENT ]
  607 -> 339 [label=REF ]
  524 -> 522 [label=CFG ]
  326 -> 456 [label=REACHING_DEF VARIABLE=""]
  487 -> 506 [label=CDG ]
  326 -> 433 [label=CONTAINS ]
  347 -> 349 [label=ARGUMENT ]
  495 -> 496 [label=ARGUMENT ]
  615 -> 455 [label=POST_DOMINATE ]
  439 -> 437 [label=DOMINATE ]
  548 -> 546 [label=POST_DOMINATE ]
  326 -> 548 [label=REACHING_DEF VARIABLE=""]
  560 -> 337 [label=REF ]
  326 -> 483 [label=CONTAINS ]
  395 -> 396 [label=AST ]
  327 -> 583 [label=REACHING_DEF VARIABLE="ctx"]
  326 -> 348 [label=REACHING_DEF VARIABLE=""]
  326 -> 403 [label=CONTAINS ]
  326 -> 539 [label=CONTAINS ]
  326 -> 437 [label=CONTAINS ]
  359 -> 361 [label=ARGUMENT ]
  326 -> 369 [label=CONTAINS ]
  557 -> 560 [label=REACHING_DEF VARIABLE="i"]
  403 -> 338 [label=REF ]
  562 -> 610 [label=REACHING_DEF VARIABLE="pad[i]"]
  326 -> 506 [label=REACHING_DEF VARIABLE=""]
  402 -> 404 [label=ARGUMENT ]
  334 -> 336 [label=ARGUMENT ]
  366 -> 382 [label=CFG ]
  402 -> 404 [label=AST ]
  385 -> 387 [label=ARGUMENT ]
  326 -> 419 [label=REACHING_DEF VARIABLE=""]
  452 -> 453 [label=DOMINATE ]
  547 -> 548 [label=POST_DOMINATE ]
  536 -> 537 [label=AST ]
  361 -> 359 [label=REACHING_DEF VARIABLE="0"]
  585 -> 583 [label=DOMINATE ]
  433 -> 539 [label=REACHING_DEF VARIABLE="md"]
  599 -> 597 [label=CFG ]
  409 -> 408 [label=CFG ]
  409 -> 411 [label=ARGUMENT ]
  348 -> 349 [label=REACHING_DEF VARIABLE="md"]
  509 -> 595 [label=DOMINATE ]
  553 -> 555 [label=ARGUMENT ]
  427 -> 426 [label=CFG ]
  481 -> 485 [label=POST_DOMINATE ]
  348 -> 340 [label=POST_DOMINATE ]
  574 -> 584 [label=CDG ]
  361 -> 359 [label=DOMINATE ]
  428 -> 438 [label=DOMINATE ]
  326 -> 429 [label=CONTAINS ]
  612 -> 611 [label=DOMINATE ]
  448 -> 327 [label=REF ]
  374 -> 497 [label=REACHING_DEF VARIABLE="ctx->md"]
  568 -> 569 [label=AST ]
  540 -> 580 [label=REACHING_DEF VARIABLE="impl"]
  533 -> 575 [label=CDG ]
  326 -> 589 [label=CONTAINS ]
  332 -> 340 [label=AST ]
  539 -> 330 [label=REF ]
  609 -> 610 [label=ARGUMENT ]
  387 -> 569 [label=REACHING_DEF VARIABLE="ctx->md"]
  536 -> 598 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  468 -> 469 [label=ARGUMENT ]
  580 -> 579 [label=REACHING_DEF VARIABLE="impl"]
  326 -> 381 [label=CONTAINS ]
  326 -> 459 [label=CONTAINS ]
  496 -> 500 [label=CFG ]
  430 -> 529 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  461 -> 462 [label=ARGUMENT ]
  385 -> 386 [label=AST ]
  326 -> 395 [label=CONTAINS ]
  523 -> 524 [label=CFG ]
  326 -> 544 [label=REACHING_DEF VARIABLE=""]
  326 -> 552 [label=CONTAINS ]
  355 -> 615 [label=REACHING_DEF VARIABLE="key == NULL || len < 0"]
  326 -> 604 [label=REACHING_DEF VARIABLE=""]
  543 -> 597 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  534 -> 535 [label=AST ]
  536 -> 597 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  505 -> 598 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  326 -> 370 [label=CONTAINS ]
  462 -> 461 [label=REACHING_DEF VARIABLE="len"]
  326 -> 342 [label=REACHING_DEF VARIABLE=""]
  452 -> 447 [label=POST_DOMINATE ]
  353 -> 354 [label=DOMINATE ]
  327 -> 528 [label=REACHING_DEF VARIABLE="ctx"]
  556 -> 559 [label=CDG ]
  583 -> 582 [label=REACHING_DEF VARIABLE="ctx->o_ctx"]
  527 -> 525 [label=DOMINATE ]
  326 -> 362 [label=CONTAINS ]
  350 -> 351 [label=AST ]
  509 -> 516 [label=CDG ]
  551 -> 552 [label=AST ]
  598 -> 594 [label=POST_DOMINATE ]
  503 -> 493 [label=CFG ]
  595 -> 596 [label=CFG ]
  327 -> 537 [label=REACHING_DEF VARIABLE="ctx"]
  326 -> 421 [label=CONTAINS ]
  355 -> 359 [label=ARGUMENT ]
  607 -> 611 [label=CDG ]
  605 -> 592 [label=POST_DOMINATE ]
  376 -> 374 [label=DOMINATE ]
  356 -> 355 [label=CFG ]
  470 -> 467 [label=POST_DOMINATE ]
  437 -> 506 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  326 -> 417 [label=CONTAINS ]
  347 -> 349 [label=POST_DOMINATE ]
  374 -> 375 [label=AST ]
  553 -> 554 [label=AST ]
  592 -> 602 [label=CDG ]
  558 -> 556 [label=REACHING_DEF VARIABLE="HMAC_MAX_MD_CBLOCK"]
  579 -> 580 [label=CFG ]
  597 -> 599 [label=ARGUMENT ]
  414 -> 598 [label=REACHING_DEF VARIABLE="ctx->key"]
  326 -> 579 [label=CONTAINS ]
  444 -> 445 [label=AST ]
  505 -> 504 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  427 -> 442 [label=REACHING_DEF VARIABLE="!EVP_DigestInit_ex(ctx->md_ctx, md, impl)
                    || !EVP_DigestUpdate(ctx->md_ctx, key, len)"]
  476 -> 475 [label=REACHING_DEF VARIABLE="ctx->key"]
  414 -> 477 [label=REACHING_DEF VARIABLE="ctx->key"]
  355 -> 359 [label=AST ]
  427 -> 453 [label=CDG ]
  535 -> 534 [label=REACHING_DEF VARIABLE="EVP_DigestInit_ex(ctx->i_ctx, md, impl)"]
  543 -> 598 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  326 -> 467 [label=CONTAINS ]
  375 -> 376 [label=DOMINATE ]
  503 -> 505 [label=ARGUMENT ]
  355 -> 345 [label=REACHING_DEF VARIABLE="key == NULL || len < 0"]
  326 -> 532 [label=CONTAINS ]
  326 -> 584 [label=CONTAINS ]
  602 -> 604 [label=ARGUMENT ]
  356 -> 358 [label=POST_DOMINATE ]
  543 -> 595 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  458 -> 481 [label=AST ]
  482 -> 485 [label=CFG ]
  432 -> 430 [label=CFG ]
  326 -> 502 [label=REACHING_DEF VARIABLE=""]
  444 -> 446 [label=AST ]
  387 -> 506 [label=REACHING_DEF VARIABLE="ctx->md"]
  565 -> 567 [label=ARGUMENT ]
  374 -> 448 [label=REACHING_DEF VARIABLE="ctx->md"]
  430 -> 429 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  405 -> 404 [label=CFG ]
  609 -> 610 [label=AST ]
  463 -> 461 [label=DOMINATE ]
  476 -> 477 [label=AST ]
  479 -> 476 [label=REACHING_DEF VARIABLE="key"]
  447 -> 506 [label=REACHING_DEF VARIABLE="ctx->key"]
  398 -> 406 [label=AST ]
  326 -> 536 [label=CONTAINS ]
  597 -> 599 [label=AST ]
  476 -> 595 [label=REACHING_DEF VARIABLE="ctx->key"]
  326 -> 543 [label=CONTAINS ]
  326 -> 475 [label=CONTAINS ]
  614 -> 613 [label=CFG ]
  549 -> 550 [label=AST ]
  369 -> 373 [label=AST ]
  427 -> 445 [label=DOMINATE ]
  607 -> 610 [label=DOMINATE ]
  562 -> 563 [label=AST ]
  613 -> 614 [label=POST_DOMINATE ]
  443 -> 447 [label=AST ]
  326 -> 364 [label=REACHING_DEF VARIABLE=""]
  553 -> 555 [label=POST_DOMINATE ]
  332 -> 394 [label=AST ]
  326 -> 595 [label=CONTAINS ]
  441 -> 436 [label=DOMINATE ]
  577 -> 556 [label=POST_DOMINATE ]
  485 -> 481 [label=REACHING_DEF VARIABLE="len"]
  504 -> 518 [label=REACHING_DEF VARIABLE="HMAC_MAX_MD_CBLOCK"]
  421 -> 423 [label=ARGUMENT ]
  539 -> 540 [label=CFG ]
  588 -> 587 [label=DOMINATE ]
  447 -> 569 [label=REACHING_DEF VARIABLE="ctx->key"]
  581 -> 582 [label=POST_DOMINATE ]
  395 -> 400 [label=DOMINATE ]
  440 -> 437 [label=POST_DOMINATE ]
  326 -> 606 [label=CONTAINS ]
  326 -> 332 [label=AST ]
  502 -> 503 [label=REACHING_DEF VARIABLE="0"]
  581 -> 573 [label=CFG ]
  571 -> 567 [label=CFG ]
  421 -> 462 [label=CDG ]
  355 -> 345 [label=CFG ]
  386 -> 388 [label=DOMINATE ]
  432 -> 430 [label=DOMINATE ]
  326 -> 387 [label=CONTAINS ]
  387 -> 385 [label=CFG ]
  591 -> 600 [label=AST ]
  587 -> 582 [label=CFG ]
  326 -> 508 [label=CONTAINS ]
  327 -> 488 [label=REACHING_DEF VARIABLE="ctx"]
  327 -> 577 [label=REACHING_DEF VARIABLE="ctx"]
  545 -> 544 [label=POST_DOMINATE ]
  456 -> 455 [label=CFG ]
  556 -> 556 [label=CDG ]
  520 -> 337 [label=REF ]
  443 -> 450 [label=AST ]
  436 -> 441 [label=POST_DOMINATE ]
  436 -> 440 [label=ARGUMENT ]
  426 -> 490 [label=CDG ]
  327 -> 483 [label=REACHING_DEF VARIABLE="ctx"]
  401 -> 399 [label=REACHING_DEF VARIABLE="1"]
  509 -> 597 [label=CDG ]
  464 -> 466 [label=AST ]
  326 -> 904 [label=AST ]
  525 -> 526 [label=ARGUMENT ]
  428 -> 437 [label=CDG ]
  475 -> 483 [label=CFG ]
  593 -> 594 [label=ARGUMENT ]
  543 -> 544 [label=AST ]
  328 -> 615 [label=REACHING_DEF VARIABLE="key"]
  444 -> 577 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  367 -> 368 [label=DOMINATE ]
  402 -> 410 [label=DOMINATE ]
  326 -> 353 [label=REACHING_DEF VARIABLE=""]
  326 -> 569 [label=CONTAINS ]
  480 -> 475 [label=DOMINATE ]
  386 -> 385 [label=REACHING_DEF VARIABLE="md"]
  395 -> 401 [label=CDG ]
  413 -> 414 [label=POST_DOMINATE ]
  493 -> 494 [label=ARGUMENT ]
  577 -> 578 [label=DOMINATE ]
  381 -> 385 [label=CDG ]
  539 -> 535 [label=REACHING_DEF VARIABLE="md"]
  399 -> 400 [label=ARGUMENT ]
  441 -> 436 [label=REACHING_DEF VARIABLE="len"]
  326 -> 509 [label=CONTAINS ]
  352 -> 388 [label=REACHING_DEF VARIABLE="ctx->md"]
  370 -> 372 [label=AST ]
  404 -> 402 [label=CFG ]
  547 -> 543 [label=REACHING_DEF VARIABLE="EVP_MD_block_size(md)"]
  541 -> 542 [label=ARGUMENT ]
  326 -> 581 [label=CONTAINS ]
  592 -> 593 [label=AST ]
  592 -> 601 [label=DOMINATE ]
  326 -> 505 [label=CONTAINS ]
  423 -> 329 [label=REF ]
  352 -> 353 [label=AST ]
  522 -> 586 [label=REACHING_DEF VARIABLE="pad[i]"]
  547 -> 548 [label=AST ]
  460 -> 477 [label=CDG ]
  347 -> 350 [label=REACHING_DEF VARIABLE="md != NULL"]
  476 -> 478 [label=POST_DOMINATE ]
  387 -> 577 [label=REACHING_DEF VARIABLE="ctx->md"]
  533 -> 556 [label=CDG ]
  326 -> 372 [label=REACHING_DEF VARIABLE=""]
  382 -> 327 [label=REF ]
  328 -> 902 [label=PARAMETER_LINK ]
  436 -> 441 [label=AST ]
  447 -> 448 [label=ARGUMENT ]
  327 -> 375 [label=REACHING_DEF VARIABLE="ctx"]
  326 -> 566 [label=CONTAINS ]
  326 -> 391 [label=CONTAINS ]
  582 -> 583 [label=ARGUMENT ]
  395 -> 404 [label=CDG ]
  347 -> 615 [label=REACHING_DEF VARIABLE="md != NULL"]
  569 -> 566 [label=POST_DOMINATE ]
  406 -> 417 [label=AST ]
  326 -> 329 [label=REACHING_DEF VARIABLE=""]
  326 -> 426 [label=CONTAINS ]
  326 -> 523 [label=CONTAINS ]
  586 -> 343 [label=REF ]
  449 -> 448 [label=POST_DOMINATE ]
  374 -> 376 [label=ARGUMENT ]
  326 -> 531 [label=CONTAINS ]
  573 -> 595 [label=CFG ]
  326 -> 410 [label=CONTAINS ]
  500 -> 501 [label=DOMINATE ]
  482 -> 484 [label=AST ]
  535 -> 534 [label=DOMINATE ]
  440 -> 437 [label=REACHING_DEF VARIABLE="key"]
  536 -> 537 [label=ARGUMENT ]
  516 -> 537 [label=DOMINATE ]
  326 -> 524 [label=CONTAINS ]
  551 -> 556 [label=AST ]
  465 -> 464 [label=REACHING_DEF VARIABLE="len"]
  326 -> 612 [label=CONTAINS ]
  489 -> 490 [label=DOMINATE ]
  380 -> 381 [label=AST ]
  422 -> 423 [label=REACHING_DEF VARIABLE="j"]
  465 -> 467 [label=DOMINATE ]
  326 -> 582 [label=CONTAINS ]
  510 -> 511 [label=AST ]
  427 -> 446 [label=CDG ]
  460 -> 473 [label=CDG ]
  383 -> 381 [label=CFG ]
  399 -> 403 [label=CFG ]
  326 -> 384 [label=CONTAINS ]
  543 -> 546 [label=DOMINATE ]
  348 -> 367 [label=REACHING_DEF VARIABLE="md"]
  407 -> 419 [label=CFG ]
  453 -> 452 [label=POST_DOMINATE ]
  345 -> 368 [label=CDG ]
  522 -> 546 [label=REACHING_DEF VARIABLE="pad[i]"]
  556 -> 562 [label=CDG ]
  327 -> 568 [label=REACHING_DEF VARIABLE="ctx"]
  326 -> 374 [label=CONTAINS ]
  606 -> 607 [label=CONDITION ]
  583 -> 586 [label=CFG ]
  430 -> 431 [label=AST ]
  459 -> 460 [label=AST ]
  326 -> 444 [label=CONTAINS ]
  437 -> 439 [label=AST ]
  427 -> 428 [label=AST ]
  336 -> 334 [label=DOMINATE ]
  352 -> 382 [label=REACHING_DEF VARIABLE="ctx->md"]
  414 -> 529 [label=REACHING_DEF VARIABLE="ctx->key"]
  421 -> 422 [label=ARGUMENT ]
  533 -> 534 [label=ARGUMENT ]
  382 -> 383 [label=CFG ]
  609 -> 611 [label=AST ]
  385 -> 387 [label=AST ]
  542 -> 541 [label=DOMINATE ]
  414 -> 415 [label=ARGUMENT ]
  326 -> 445 [label=CONTAINS ]
  511 -> 516 [label=CONDITION ]
  397 -> 395 [label=REACHING_DEF VARIABLE="NULL"]
  354 -> 352 [label=DOMINATE ]
  547 -> 542 [label=CFG ]
  565 -> 562 [label=REACHING_DEF VARIABLE="0x5c ^ ctx->key[i]"]
  367 -> 377 [label=REACHING_DEF VARIABLE="md"]
  363 -> 615 [label=REACHING_DEF VARIABLE="<RET>"]
  574 -> 583 [label=CDG ]
  519 -> 520 [label=AST ]
  326 -> 588 [label=REACHING_DEF VARIABLE=""]
  437 -> 598 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  326 -> 460 [label=CONTAINS ]
  460 -> 481 [label=CDG ]
  426 -> 456 [label=CFG ]
  329 -> 615 [label=REACHING_DEF VARIABLE="len"]
  451 -> 453 [label=AST ]
  427 -> 426 [label=REACHING_DEF VARIABLE="!EVP_DigestInit_ex(ctx->md_ctx, md, impl)
                    || !EVP_DigestUpdate(ctx->md_ctx, key, len)"]
  448 -> 449 [label=CFG ]
  597 -> 593 [label=CFG ]
  459 -> 472 [label=AST ]
  330 -> 904 [label=REACHING_DEF VARIABLE="md"]
  327 -> 452 [label=REACHING_DEF VARIABLE="ctx"]
  413 -> 414 [label=AST ]
  326 -> 603 [label=CONTAINS ]
  441 -> 436 [label=CFG ]
  573 -> 592 [label=CDG ]
  501 -> 500 [label=POST_DOMINATE ]
  437 -> 537 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  541 -> 533 [label=REACHING_DEF VARIABLE="!EVP_DigestUpdate(ctx->i_ctx, pad, EVP_MD_block_size(md))"]
  447 -> 537 [label=REACHING_DEF VARIABLE="ctx->key"]
  514 -> 337 [label=REF ]
  460 -> 476 [label=CDG ]
  414 -> 494 [label=REACHING_DEF VARIABLE="ctx->key"]
  326 -> 614 [label=REACHING_DEF VARIABLE=""]
  556 -> 561 [label=CDG ]
  366 -> 395 [label=CDG ]
  562 -> 563 [label=ARGUMENT ]
  326 -> 360 [label=REACHING_DEF VARIABLE=""]
  326 -> 336 [label=REACHING_DEF VARIABLE=""]
  326 -> 423 [label=CONTAINS ]
  327 -> 544 [label=REACHING_DEF VARIABLE="ctx"]
  447 -> 496 [label=REACHING_DEF VARIABLE="ctx->key"]
  326 -> 373 [label=CONTAINS ]
  607 -> 609 [label=CDG ]
  493 -> 503 [label=POST_DOMINATE ]
  399 -> 400 [label=AST ]
  443 -> 442 [label=REACHING_DEF VARIABLE="EVP_DigestFinal_ex(ctx->md_ctx, ctx->key,
                                           &ctx->key_length)"]
  332 -> 344 [label=AST ]
  528 -> 529 [label=ARGUMENT ]
  509 -> 513 [label=CDG ]
  419 -> 418 [label=REACHING_DEF VARIABLE="0"]
  460 -> 477 [label=CFG ]
  381 -> 386 [label=DOMINATE ]
  527 -> 531 [label=POST_DOMINATE ]
  326 -> 499 [label=CONTAINS ]
  351 -> 367 [label=REACHING_DEF VARIABLE="md"]
  346 -> 347 [label=POST_DOMINATE ]
  537 -> 538 [label=DOMINATE ]
  500 -> 496 [label=POST_DOMINATE ]
  407 -> 408 [label=AST ]
  602 -> 604 [label=AST ]
  588 -> 587 [label=CFG ]
  356 -> 357 [label=ARGUMENT ]
  326 -> 479 [label=CONTAINS ]
  387 -> 431 [label=REACHING_DEF VARIABLE="ctx->md"]
  506 -> 504 [label=POST_DOMINATE ]
  348 -> 330 [label=REF ]
  479 -> 480 [label=DOMINATE ]
  533 -> 541 [label=AST ]
  436 -> 435 [label=DOMINATE ]
  583 -> 587 [label=REACHING_DEF VARIABLE="ctx->o_ctx"]
  468 -> 469 [label=AST ]
  503 -> 505 [label=POST_DOMINATE ]
  519 -> 520 [label=ARGUMENT ]
  423 -> 441 [label=REACHING_DEF VARIABLE="len"]
  395 -> 399 [label=CDG ]
  433 -> 429 [label=REACHING_DEF VARIABLE="md"]
  429 -> 434 [label=AST ]
  366 -> 368 [label=POST_DOMINATE ]
  566 -> 569 [label=CFG ]
  493 -> 494 [label=AST ]
  398 -> 486 [label=AST ]
  326 -> 463 [label=CONTAINS ]
  348 -> 349 [label=CFG ]
  326 -> 407 [label=CONTAINS ]
  347 -> 353 [label=CDG ]
  465 -> 467 [label=CFG ]
  522 -> 523 [label=REACHING_DEF VARIABLE="pad[i]"]
  582 -> 587 [label=AST ]
  450 -> 447 [label=REACHING_DEF VARIABLE="&ctx->key_length"]
  326 -> 540 [label=REACHING_DEF VARIABLE=""]
  472 -> 473 [label=AST ]
  460 -> 607 [label=CDG ]
  583 -> 585 [label=ARGUMENT ]
  354 -> 353 [label=POST_DOMINATE ]
  356 -> 360 [label=CFG ]
  488 -> 491 [label=CFG ]
  605 -> 607 [label=DOMINATE ]
  381 -> 387 [label=CDG ]
  515 -> 513 [label=CFG ]
  615 -> 395 [label=POST_DOMINATE ]
  536 -> 538 [label=POST_DOMINATE ]
  536 -> 544 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  411 -> 412 [label=ARGUMENT ]
  387 -> 470 [label=REACHING_DEF VARIABLE="ctx->md"]
  327 -> 598 [label=REACHING_DEF VARIABLE="ctx"]
  592 -> 603 [label=CDG ]
  507 -> 505 [label=CFG ]
  611 -> 609 [label=DOMINATE ]
  437 -> 439 [label=POST_DOMINATE ]
  517 -> 516 [label=REACHING_DEF VARIABLE="i"]
  516 -> 517 [label=AST ]
  326 -> 441 [label=REACHING_DEF VARIABLE=""]
  451 -> 450 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  451 -> 450 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  494 -> 502 [label=DOMINATE ]
  522 -> 526 [label=DOMINATE ]
  614 -> 333 [label=REF ]
  355 -> 356 [label=POST_DOMINATE ]
  443 -> 450 [label=POST_DOMINATE ]
  426 -> 427 [label=POST_DOMINATE ]
  332 -> 591 [label=AST ]
  326 -> 598 [label=REACHING_DEF VARIABLE=""]
  566 -> 562 [label=POST_DOMINATE ]
  542 -> 547 [label=ARGUMENT ]
  452 -> 327 [label=REF ]
  421 -> 434 [label=CDG ]
  558 -> 556 [label=CFG ]
  360 -> 361 [label=CFG ]
  326 -> 434 [label=REACHING_DEF VARIABLE=""]
  332 -> 334 [label=AST ]
  326 -> 454 [label=CONTAINS ]
  326 -> 588 [label=CONTAINS ]
  366 -> 375 [label=CDG ]
  592 -> 601 [label=CFG ]
  612 -> 611 [label=CFG ]
  326 -> 428 [label=CONTAINS ]
  423 -> 421 [label=REACHING_DEF VARIABLE="len"]
  444 -> 529 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  326 -> 365 [label=CONTAINS ]
  459 -> 460 [label=CONDITION ]
  326 -> 473 [label=CONTAINS ]
  463 -> 461 [label=REACHING_DEF VARIABLE="0"]
  556 -> 567 [label=CDG ]
  442 -> 443 [label=AST ]
  579 -> 330 [label=REF ]
  345 -> 615 [label=REACHING_DEF VARIABLE="md != NULL && md != ctx->md && (key == NULL || len < 0)"]
  326 -> 492 [label=CONTAINS ]
  370 -> 371 [label=AST ]
  550 -> 605 [label=CFG ]
  466 -> 464 [label=CFG ]
  542 -> 541 [label=CFG ]
  442 -> 443 [label=POST_DOMINATE ]
  326 -> 455 [label=REACHING_DEF VARIABLE=""]
  556 -> 558 [label=AST ]
  574 -> 586 [label=CDG ]
  464 -> 466 [label=ARGUMENT ]
  491 -> 487 [label=CFG ]
  447 -> 449 [label=ARGUMENT ]
  377 -> 373 [label=DOMINATE ]
  503 -> 505 [label=AST ]
  469 -> 471 [label=POST_DOMINATE ]
  326 -> 613 [label=CONTAINS ]
  327 -> 444 [label=REACHING_DEF VARIABLE="ctx"]
  447 -> 450 [label=REACHING_DEF VARIABLE="ctx->key"]
  345 -> 367 [label=DOMINATE ]
  395 -> 408 [label=CDG ]
  531 -> 337 [label=REF ]
  436 -> 437 [label=AST ]
  430 -> 431 [label=ARGUMENT ]
  375 -> 327 [label=REF ]
  586 -> 583 [label=REACHING_DEF VARIABLE="pad"]
  582 -> 586 [label=ARGUMENT ]
  471 -> 469 [label=CFG ]
  326 -> 331 [label=AST ]
  466 -> 464 [label=REACHING_DEF VARIABLE="(int)sizeof(ctx->key)"]
  533 -> 554 [label=CFG ]
  410 -> 409 [label=REACHING_DEF VARIABLE="j"]
  516 -> 529 [label=CDG ]
  340 -> 341 [label=ARGUMENT ]
  528 -> 531 [label=DOMINATE ]
  407 -> 419 [label=CDG ]
  400 -> 399 [label=REACHING_DEF VARIABLE="reset"]
  501 -> 499 [label=CFG ]
  476 -> 497 [label=REACHING_DEF VARIABLE="ctx->key"]
  328 -> 396 [label=REACHING_DEF VARIABLE="key"]
  594 -> 596 [label=AST ]
  392 -> 615 [label=REACHING_DEF VARIABLE="<RET>"]
  342 -> 340 [label=DOMINATE ]
  420 -> 421 [label=CONDITION ]
  460 -> 488 [label=CDG ]
  563 -> 343 [label=REF ]
  350 -> 347 [label=REACHING_DEF VARIABLE="md != ctx->md"]
  532 -> 533 [label=AST ]
  342 -> 341 [label=REACHING_DEF VARIABLE="0"]
  516 -> 526 [label=CDG ]
  326 -> 418 [label=REACHING_DEF VARIABLE=""]
  571 -> 567 [label=DOMINATE ]
  450 -> 451 [label=ARGUMENT ]
  481 -> 485 [label=AST ]
  486 -> 487 [label=CONDITION ]
  525 -> 526 [label=AST ]
  395 -> 416 [label=CDG ]
  476 -> 477 [label=ARGUMENT ]
  326 -> 457 [label=CONTAINS ]
  363 -> 364 [label=ARGUMENT ]
  381 -> 382 [label=AST ]
  437 -> 584 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  444 -> 448 [label=CFG ]
  535 -> 540 [label=AST ]
  387 -> 500 [label=REACHING_DEF VARIABLE="ctx->md"]
  529 -> 530 [label=CFG ]
  328 -> 357 [label=REACHING_DEF VARIABLE="key"]
  359 -> 356 [label=REACHING_DEF VARIABLE="len < 0"]
  522 -> 523 [label=ARGUMENT ]
  414 -> 476 [label=REACHING_DEF VARIABLE="ctx->key"]
  575 -> 579 [label=AST ]
  569 -> 570 [label=CFG ]
  495 -> 496 [label=AST ]
  513 -> 515 [label=AST ]
  429 -> 433 [label=ARGUMENT ]
  354 -> 352 [label=CFG ]
  340 -> 341 [label=AST ]
  408 -> 407 [label=REACHING_DEF VARIABLE="ossl_assert(j <= (int)sizeof(ctx->key))"]
  358 -> 357 [label=REACHING_DEF VARIABLE="NULL"]
  487 -> 488 [label=AST ]
  491 -> 487 [label=REACHING_DEF VARIABLE="HMAC_MAX_MD_CBLOCK"]
  326 -> 542 [label=CONTAINS ]
  525 -> 527 [label=POST_DOMINATE ]
  505 -> 507 [label=AST ]
  509 -> 592 [label=CDG ]
  583 -> 585 [label=AST ]
  366 -> 377 [label=CDG ]
  326 -> 573 [label=CONTAINS ]
  346 -> 345 [label=CFG ]
  437 -> 440 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  326 -> 514 [label=CONTAINS ]
  567 -> 568 [label=ARGUMENT ]
  327 -> 584 [label=REACHING_DEF VARIABLE="ctx"]
  407 -> 422 [label=DOMINATE ]
  326 -> 497 [label=REACHING_DEF VARIABLE=""]
  396 -> 440 [label=REACHING_DEF VARIABLE="key"]
  326 -> 608 [label=CONTAINS ]
  395 -> 396 [label=ARGUMENT ]
  501 -> 499 [label=DOMINATE ]
  533 -> 553 [label=CDG ]
  573 -> 590 [label=CFG ]
  587 -> 582 [label=DOMINATE ]
  574 -> 581 [label=REACHING_DEF VARIABLE="!EVP_DigestInit_ex(ctx->o_ctx, md, impl)"]
  437 -> 438 [label=ARGUMENT ]
  546 -> 543 [label=POST_DOMINATE ]
  428 -> 427 [label=DOMINATE ]
  409 -> 408 [label=DOMINATE ]
  534 -> 545 [label=CDG ]
  405 -> 404 [label=DOMINATE ]
  556 -> 569 [label=CDG ]
  455 -> 456 [label=AST ]
  437 -> 497 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  444 -> 595 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  603 -> 614 [label=REACHING_DEF VARIABLE="rv"]
  517 -> 513 [label=POST_DOMINATE ]
  478 -> 476 [label=DOMINATE ]
  540 -> 536 [label=REACHING_DEF VARIABLE="impl"]
  447 -> 595 [label=REACHING_DEF VARIABLE="ctx->key"]
  467 -> 465 [label=POST_DOMINATE ]
  528 -> 531 [label=CFG ]
  425 -> 454 [label=AST ]
  535 -> 540 [label=ARGUMENT ]
  350 -> 346 [label=REACHING_DEF VARIABLE="md != ctx->md"]
  505 -> 503 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  502 -> 493 [label=REACHING_DEF VARIABLE="0"]
  427 -> 428 [label=ARGUMENT ]
  487 -> 498 [label=CDG ]
  326 -> 383 [label=CONTAINS ]
  327 -> 388 [label=REACHING_DEF VARIABLE="ctx"]
  450 -> 443 [label=DOMINATE ]
  518 -> 517 [label=POST_DOMINATE ]
  403 -> 410 [label=REACHING_DEF VARIABLE="j"]
  326 -> 470 [label=CONTAINS ]
  557 -> 553 [label=POST_DOMINATE ]
  326 -> 419 [label=CONTAINS ]
  534 -> 544 [label=CDG ]
  393 -> 392 [label=DOMINATE ]
  475 -> 483 [label=DOMINATE ]
  482 -> 488 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  451 -> 489 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  326 -> 489 [label=REACHING_DEF VARIABLE=""]
  443 -> 444 [label=ARGUMENT ]
  517 -> 337 [label=REF ]
  499 -> 501 [label=ARGUMENT ]
  377 -> 374 [label=REACHING_DEF VARIABLE="md"]
  579 -> 575 [label=REACHING_DEF VARIABLE="md"]
  487 -> 497 [label=DOMINATE ]
  542 -> 547 [label=AST ]
  429 -> 430 [label=ARGUMENT ]
  529 -> 530 [label=DOMINATE ]
  509 -> 514 [label=DOMINATE ]
  326 -> 465 [label=CONTAINS ]
  533 -> 534 [label=POST_DOMINATE ]
  461 -> 464 [label=CDG ]
  461 -> 463 [label=POST_DOMINATE ]
  451 -> 453 [label=POST_DOMINATE ]
  426 -> 427 [label=AST ]
  435 -> 436 [label=ARGUMENT ]
  460 -> 491 [label=CDG ]
  489 -> 490 [label=CFG ]
  540 -> 331 [label=REF ]
  326 -> 411 [label=CONTAINS ]
  447 -> 489 [label=REACHING_DEF VARIABLE="ctx->key"]
  497 -> 498 [label=CFG ]
  424 -> 425 [label=AST ]
  488 -> 595 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  451 -> 452 [label=ARGUMENT ]
  332 -> 343 [label=AST ]
  588 -> 330 [label=REF ]
  423 -> 422 [label=REACHING_DEF VARIABLE="len"]
  353 -> 354 [label=CFG ]
  426 -> 456 [label=DOMINATE ]
  556 -> 564 [label=CDG ]
  447 -> 577 [label=REACHING_DEF VARIABLE="ctx->key"]
  326 -> 390 [label=CONTAINS ]
  447 -> 568 [label=REACHING_DEF VARIABLE="ctx->key"]
  326 -> 372 [label=CONTAINS ]
  326 -> 402 [label=CONTAINS ]
  458 -> 475 [label=AST ]
  420 -> 421 [label=AST ]
  326 -> 496 [label=CONTAINS ]
  495 -> 528 [label=REACHING_DEF VARIABLE="ctx->key[ctx->key_length]"]
  526 -> 527 [label=REACHING_DEF VARIABLE="0x36"]
  350 -> 615 [label=REACHING_DEF VARIABLE="md != ctx->md"]
  427 -> 445 [label=CDG ]
  546 -> 547 [label=REACHING_DEF VARIABLE="pad"]
  509 -> 595 [label=CDG ]
  366 -> 374 [label=CDG ]
  494 -> 495 [label=POST_DOMINATE ]
  518 -> 516 [label=DOMINATE ]
  326 -> 458 [label=CONTAINS ]
  598 -> 327 [label=REF ]
  387 -> 445 [label=REACHING_DEF VARIABLE="ctx->md"]
  414 -> 537 [label=REACHING_DEF VARIABLE="ctx->key"]
  479 -> 480 [label=REACHING_DEF VARIABLE="key"]
  430 -> 438 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  460 -> 487 [label=CDG ]
  582 -> 581 [label=DOMINATE ]
  487 -> 503 [label=CDG ]
  562 -> 563 [label=REACHING_DEF VARIABLE="pad[i]"]
  557 -> 556 [label=REACHING_DEF VARIABLE="i"]
  427 -> 435 [label=POST_DOMINATE ]
  409 -> 410 [label=ARGUMENT ]
  368 -> 397 [label=REACHING_DEF VARIABLE="NULL"]
  469 -> 476 [label=REACHING_DEF VARIABLE="ctx->key"]
  474 -> 473 [label=DOMINATE ]
  604 -> 602 [label=CFG ]
  326 -> 360 [label=CONTAINS ]
  587 -> 583 [label=REACHING_DEF VARIABLE="EVP_MD_block_size(md)"]
  444 -> 584 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  329 -> 903 [label=PARAMETER_LINK ]
  421 -> 460 [label=CDG ]
  418 -> 419 [label=AST ]
  522 -> 526 [label=CFG ]
  539 -> 540 [label=DOMINATE ]
  326 -> 479 [label=REACHING_DEF VARIABLE=""]
  389 -> 387 [label=CFG ]
  491 -> 518 [label=REACHING_DEF VARIABLE="HMAC_MAX_MD_CBLOCK"]
  573 -> 598 [label=CDG ]
  576 -> 575 [label=REACHING_DEF VARIABLE="ctx->o_ctx"]
  574 -> 573 [label=DOMINATE ]
  326 -> 472 [label=CONTAINS ]
  609 -> 614 [label=CFG ]
  361 -> 359 [label=CFG ]
  460 -> 474 [label=CFG ]
  381 -> 389 [label=CDG ]
  477 -> 327 [label=REF ]
  516 -> 518 [label=CDG ]
  374 -> 529 [label=REACHING_DEF VARIABLE="ctx->md"]
  536 -> 569 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  567 -> 568 [label=REACHING_DEF VARIABLE="ctx->key[i]"]
  409 -> 410 [label=AST ]
  355 -> 346 [label=REACHING_DEF VARIABLE="key == NULL || len < 0"]
  428 -> 439 [label=CDG ]
  413 -> 411 [label=DOMINATE ]
  429 -> 433 [label=AST ]
  505 -> 577 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  594 -> 595 [label=AST ]
  594 -> 596 [label=POST_DOMINATE ]
  530 -> 528 [label=CFG ]
  509 -> 514 [label=CDG ]
  525 -> 527 [label=AST ]
  503 -> 493 [label=DOMINATE ]
  537 -> 538 [label=CFG ]
  360 -> 359 [label=REACHING_DEF VARIABLE="len"]
  329 -> 360 [label=REACHING_DEF VARIABLE="len"]
  400 -> 339 [label=REF ]
  456 -> 455 [label=DOMINATE ]
  374 -> 477 [label=REACHING_DEF VARIABLE="ctx->md"]
  462 -> 465 [label=REACHING_DEF VARIABLE="len"]
  326 -> 558 [label=CONTAINS ]
  364 -> 363 [label=REACHING_DEF VARIABLE="0"]
  574 -> 575 [label=POST_DOMINATE ]
  326 -> 548 [label=CONTAINS ]
  408 -> 407 [label=CFG ]
  484 -> 482 [label=DOMINATE ]
  554 -> 337 [label=REF ]
  565 -> 567 [label=AST ]
  433 -> 434 [label=DOMINATE ]
  370 -> 371 [label=ARGUMENT ]
  534 -> 535 [label=ARGUMENT ]
  426 -> 491 [label=CDG ]
  326 -> 520 [label=CONTAINS ]
  593 -> 597 [label=POST_DOMINATE ]
  438 -> 327 [label=REF ]
  437 -> 544 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  511 -> 516 [label=AST ]
  374 -> 375 [label=ARGUMENT ]
  576 -> 578 [label=POST_DOMINATE ]
  487 -> 488 [label=ARGUMENT ]
  587 -> 588 [label=POST_DOMINATE ]
  404 -> 405 [label=ARGUMENT ]
  485 -> 481 [label=DOMINATE ]
  326 -> 328 [label=REACHING_DEF VARIABLE=""]
  409 -> 411 [label=POST_DOMINATE ]
  326 -> 442 [label=CONTAINS ]
  448 -> 444 [label=POST_DOMINATE ]
  380 -> 390 [label=AST ]
  516 -> 528 [label=CDG ]
  327 -> 448 [label=REACHING_DEF VARIABLE="ctx"]
  351 -> 352 [label=REACHING_DEF VARIABLE="md"]
  588 -> 587 [label=REACHING_DEF VARIABLE="md"]
  407 -> 422 [label=CDG ]
  366 -> 382 [label=CDG ]
  431 -> 432 [label=DOMINATE ]
  345 -> 363 [label=CDG ]
  461 -> 462 [label=AST ]
  346 -> 358 [label=CDG ]
  466 -> 467 [label=ARGUMENT ]
  473 -> 615 [label=CFG ]
  546 -> 343 [label=REF ]
  514 -> 513 [label=REACHING_DEF VARIABLE="i"]
  574 -> 573 [label=CFG ]
  487 -> 505 [label=CDG ]
  356 -> 355 [label=REACHING_DEF VARIABLE="key == NULL"]
  615 -> 407 [label=POST_DOMINATE ]
  561 -> 565 [label=ARGUMENT ]
  428 -> 429 [label=POST_DOMINATE ]
  383 -> 381 [label=DOMINATE ]
  399 -> 401 [label=AST ]
  444 -> 569 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  603 -> 333 [label=REF ]
  482 -> 489 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  326 -> 517 [label=REACHING_DEF VARIABLE=""]
  520 -> 517 [label=REACHING_DEF VARIABLE="i"]
  575 -> 579 [label=ARGUMENT ]
  374 -> 470 [label=REACHING_DEF VARIABLE="ctx->md"]
  562 -> 564 [label=POST_DOMINATE ]
  396 -> 397 [label=CFG ]
  488 -> 569 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  460 -> 484 [label=CDG ]
  576 -> 598 [label=REACHING_DEF VARIABLE="ctx->o_ctx"]
  326 -> 350 [label=CONTAINS ]
  583 -> 585 [label=POST_DOMINATE ]
  426 -> 456 [label=CDG ]
  427 -> 449 [label=CDG ]
  404 -> 405 [label=AST ]
  326 -> 334 [label=CONTAINS ]
  437 -> 489 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  522 -> 563 [label=REACHING_DEF VARIABLE="pad[i]"]
  326 -> 523 [label=REACHING_DEF VARIABLE=""]
  346 -> 345 [label=REACHING_DEF VARIABLE="md != NULL && md != ctx->md"]
  392 -> 393 [label=POST_DOMINATE ]
  509 -> 538 [label=CDG ]
  326 -> 512 [label=CONTAINS ]
  341 -> 342 [label=CFG ]
  460 -> 480 [label=CDG ]
  347 -> 351 [label=CDG ]
  326 -> 531 [label=REACHING_DEF VARIABLE=""]
  513 -> 517 [label=CFG ]
  360 -> 329 [label=REF ]
  599 -> 598 [label=POST_DOMINATE ]
  542 -> 543 [label=ARGUMENT ]
  455 -> 456 [label=ARGUMENT ]
  430 -> 569 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  534 -> 544 [label=DOMINATE ]
  352 -> 351 [label=REACHING_DEF VARIABLE="ctx->md"]
  358 -> 615 [label=REACHING_DEF VARIABLE="NULL"]
  395 -> 397 [label=POST_DOMINATE ]
  327 -> 437 [label=REACHING_DEF VARIABLE="ctx"]
  499 -> 501 [label=POST_DOMINATE ]
  515 -> 514 [label=POST_DOMINATE ]
  526 -> 529 [label=DOMINATE ]
  495 -> 494 [label=REACHING_DEF VARIABLE="ctx->key[ctx->key_length]"]
  326 -> 557 [label=REACHING_DEF VARIABLE=""]
  434 -> 429 [label=REACHING_DEF VARIABLE="impl"]
  366 -> 373 [label=CDG ]
  525 -> 521 [label=REACHING_DEF VARIABLE="0x36 ^ ctx->key[i]"]
  516 -> 517 [label=ARGUMENT ]
  345 -> 346 [label=AST ]
  326 -> 538 [label=CONTAINS ]
  326 -> 418 [label=CONTAINS ]
  505 -> 537 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  579 -> 576 [label=REACHING_DEF VARIABLE="md"]
  374 -> 537 [label=REACHING_DEF VARIABLE="ctx->md"]
  372 -> 371 [label=REACHING_DEF VARIABLE="1"]
  335 -> 614 [label=REACHING_DEF VARIABLE="rv"]
  381 -> 386 [label=CFG ]
  414 -> 438 [label=REACHING_DEF VARIABLE="ctx->key"]
  328 -> 902 [label=REACHING_DEF VARIABLE="key"]
  328 -> 902 [label=REACHING_DEF VARIABLE="key"]
  421 -> 431 [label=CDG ]
  435 -> 427 [label=CFG ]
  381 -> 392 [label=CDG ]
  327 -> 353 [label=REACHING_DEF VARIABLE="ctx"]
  560 -> 559 [label=CFG ]
  326 -> 604 [label=CONTAINS ]
  542 -> 547 [label=POST_DOMINATE ]
  498 -> 496 [label=CFG ]
  381 -> 382 [label=ARGUMENT ]
  519 -> 517 [label=CFG ]
  347 -> 348 [label=ARGUMENT ]
  396 -> 395 [label=REACHING_DEF VARIABLE="key"]
  395 -> 605 [label=CDG ]
  602 -> 604 [label=POST_DOMINATE ]
  395 -> 409 [label=CDG ]
  488 -> 499 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  326 -> 537 [label=REACHING_DEF VARIABLE=""]
  449 -> 447 [label=CFG ]
  490 -> 488 [label=CFG ]
  461 -> 463 [label=AST ]
  457 -> 458 [label=AST ]
  563 -> 564 [label=CFG ]
  488 -> 544 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  388 -> 386 [label=POST_DOMINATE ]
  405 -> 403 [label=POST_DOMINATE ]
  557 -> 558 [label=CFG ]
  327 -> 569 [label=REACHING_DEF VARIABLE="ctx"]
  530 -> 528 [label=DOMINATE ]
  351 -> 353 [label=CFG ]
  427 -> 447 [label=CDG ]
  326 -> 398 [label=CONTAINS ]
  447 -> 452 [label=DOMINATE ]
  521 -> 525 [label=AST ]
  326 -> 393 [label=CONTAINS ]
  548 -> 547 [label=CFG ]
  450 -> 451 [label=POST_DOMINATE ]
  430 -> 432 [label=ARGUMENT ]
  326 -> 420 [label=CONTAINS ]
  569 -> 570 [label=DOMINATE ]
  326 -> 515 [label=REACHING_DEF VARIABLE=""]
  437 -> 445 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  326 -> 905 [label=AST ]
  366 -> 381 [label=CDG ]
  368 -> 367 [label=REACHING_DEF VARIABLE="NULL"]
  427 -> 444 [label=CDG ]
  356 -> 357 [label=AST ]
  332 -> 337 [label=AST ]
  556 -> 563 [label=CFG ]
  556 -> 563 [label=CFG ]
  327 -> 451 [label=REACHING_DEF VARIABLE="ctx"]
  327 -> 543 [label=REACHING_DEF VARIABLE="ctx"]
  345 -> 367 [label=CFG ]
  326 -> 432 [label=CONTAINS ]
  326 -> 599 [label=CONTAINS ]
  553 -> 555 [label=AST ]
  326 -> 397 [label=REACHING_DEF VARIABLE=""]
  357 -> 396 [label=REACHING_DEF VARIABLE="key"]
  430 -> 500 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  476 -> 500 [label=REACHING_DEF VARIABLE="ctx->key"]
  547 -> 542 [label=REACHING_DEF VARIABLE="EVP_MD_block_size(md)"]
  451 -> 453 [label=ARGUMENT ]
  336 -> 334 [label=CFG ]
  576 -> 577 [label=ARGUMENT ]
  437 -> 594 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  405 -> 330 [label=REF ]
  377 -> 373 [label=REACHING_DEF VARIABLE="md"]
  583 -> 586 [label=REACHING_DEF VARIABLE="ctx->o_ctx"]
  461 -> 469 [label=CDG ]
  400 -> 401 [label=CFG ]
  489 -> 327 [label=REF ]
  420 -> 424 [label=AST ]
  558 -> 556 [label=DOMINATE ]
  401 -> 399 [label=DOMINATE ]
  465 -> 480 [label=REACHING_DEF VARIABLE="len"]
  517 -> 518 [label=DOMINATE ]
  460 -> 461 [label=POST_DOMINATE ]
  421 -> 463 [label=CDG ]
  516 -> 518 [label=ARGUMENT ]
  359 -> 360 [label=ARGUMENT ]
  494 -> 495 [label=ARGUMENT ]
  326 -> 578 [label=CONTAINS ]
  326 -> 558 [label=REACHING_DEF VARIABLE=""]
  336 -> 335 [label=REACHING_DEF VARIABLE="0"]
  388 -> 389 [label=DOMINATE ]
  495 -> 494 [label=DOMINATE ]
  460 -> 474 [label=CDG ]
  374 -> 452 [label=REACHING_DEF VARIABLE="ctx->md"]
  326 -> 452 [label=CONTAINS ]
  469 -> 468 [label=REACHING_DEF VARIABLE="ctx->key"]
  348 -> 347 [label=REACHING_DEF VARIABLE="md"]
  326 -> 363 [label=REACHING_DEF VARIABLE=""]
  359 -> 355 [label=CFG ]
  326 -> 584 [label=REACHING_DEF VARIABLE=""]
  543 -> 577 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  326 -> 902 [label=AST ]
  395 -> 400 [label=CFG ]
  520 -> 519 [label=CFG ]
  395 -> 412 [label=CDG ]
  593 -> 597 [label=ARGUMENT ]
  402 -> 403 [label=AST ]
  326 -> 504 [label=CONTAINS ]
  529 -> 526 [label=POST_DOMINATE ]
  476 -> 479 [label=REACHING_DEF VARIABLE="ctx->key"]
  326 -> 453 [label=CONTAINS ]
  410 -> 412 [label=CFG ]
  326 -> 468 [label=CONTAINS ]
  480 -> 479 [label=REACHING_DEF VARIABLE="len"]
  415 -> 416 [label=DOMINATE ]
  392 -> 393 [label=AST ]
  327 -> 594 [label=REACHING_DEF VARIABLE="ctx"]
  326 -> 438 [label=CONTAINS ]
  326 -> 563 [label=CONTAINS ]
  560 -> 557 [label=REACHING_DEF VARIABLE="i"]
  330 -> 348 [label=REACHING_DEF VARIABLE="md"]
  326 -> 405 [label=REACHING_DEF VARIABLE=""]
  357 -> 358 [label=CFG ]
  386 -> 388 [label=CFG ]
  495 -> 568 [label=REACHING_DEF VARIABLE="ctx->key[ctx->key_length]"]
  461 -> 465 [label=CDG ]
  440 -> 441 [label=REACHING_DEF VARIABLE="key"]
  326 -> 535 [label=CONTAINS ]
  326 -> 498 [label=CONTAINS ]
  326 -> 388 [label=CONTAINS ]
  524 -> 523 [label=POST_DOMINATE ]
  402 -> 403 [label=ARGUMENT ]
  460 -> 490 [label=CDG ]
  475 -> 476 [label=ARGUMENT ]
  611 -> 612 [label=AST ]
  567 -> 571 [label=POST_DOMINATE ]
  352 -> 350 [label=CFG ]
  477 -> 478 [label=CFG ]
  567 -> 565 [label=CFG ]
  482 -> 485 [label=DOMINATE ]
  480 -> 476 [label=REACHING_DEF VARIABLE="len"]
  398 -> 402 [label=AST ]
  326 -> 406 [label=CONTAINS ]
  408 -> 409 [label=POST_DOMINATE ]
  365 -> 378 [label=AST ]
  429 -> 428 [label=CFG ]
  423 -> 421 [label=CFG ]
  352 -> 387 [label=REACHING_DEF VARIABLE="ctx->md"]
  556 -> 558 [label=CDG ]
  494 -> 502 [label=CFG ]
  332 -> 605 [label=AST ]
  326 -> 549 [label=CONTAINS ]
  326 -> 595 [label=REACHING_DEF VARIABLE=""]
  396 -> 385 [label=POST_DOMINATE ]
  603 -> 602 [label=REACHING_DEF VARIABLE="rv"]
  471 -> 470 [label=POST_DOMINATE ]
  326 -> 422 [label=CONTAINS ]
  349 -> 348 [label=POST_DOMINATE ]
  387 -> 389 [label=AST ]
  505 -> 506 [label=AST ]
  485 -> 482 [label=POST_DOMINATE ]
  414 -> 431 [label=REACHING_DEF VARIABLE="ctx->key"]
  387 -> 385 [label=REACHING_DEF VARIABLE="ctx->md"]
  326 -> 485 [label=CONTAINS ]
  583 -> 586 [label=DOMINATE ]
  516 -> 518 [label=AST ]
  430 -> 433 [label=DOMINATE ]
  582 -> 587 [label=ARGUMENT ]
  327 -> 901 [label=PARAMETER_LINK ]
  356 -> 359 [label=REACHING_DEF VARIABLE="key == NULL"]
  326 -> 368 [label=REACHING_DEF VARIABLE=""]
  517 -> 524 [label=REACHING_DEF VARIABLE="i"]
  326 -> 359 [label=CONTAINS ]
  352 -> 354 [label=POST_DOMINATE ]
  574 -> 575 [label=AST ]
  576 -> 584 [label=REACHING_DEF VARIABLE="ctx->o_ctx"]
  591 -> 592 [label=CONDITION ]
  461 -> 470 [label=CDG ]
  347 -> 346 [label=DOMINATE ]
  575 -> 574 [label=REACHING_DEF VARIABLE="EVP_DigestInit_ex(ctx->o_ctx, md, impl)"]
  509 -> 594 [label=CDG ]
  607 -> 605 [label=POST_DOMINATE ]
  504 -> 506 [label=DOMINATE ]
  345 -> 364 [label=DOMINATE ]
  533 -> 573 [label=CDG ]
  437 -> 444 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  432 -> 431 [label=POST_DOMINATE ]
  430 -> 537 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  326 -> 580 [label=REACHING_DEF VARIABLE=""]
  528 -> 530 [label=ARGUMENT ]
  483 -> 484 [label=DOMINATE ]
  357 -> 615 [label=REACHING_DEF VARIABLE="key"]
  437 -> 440 [label=CFG ]
  533 -> 577 [label=CDG ]
  326 -> 504 [label=REACHING_DEF VARIABLE=""]
  594 -> 596 [label=ARGUMENT ]
  411 -> 413 [label=AST ]
  506 -> 327 [label=REF ]
  346 -> 615 [label=REACHING_DEF VARIABLE="md != NULL && md != ctx->md"]
  327 -> 447 [label=REACHING_DEF VARIABLE="ctx"]
  327 -> 445 [label=REACHING_DEF VARIABLE="ctx"]
  326 -> 412 [label=CONTAINS ]
  521 -> 520 [label=DOMINATE ]
  426 -> 487 [label=CDG ]
  374 -> 577 [label=REACHING_DEF VARIABLE="ctx->md"]
  326 -> 377 [label=REACHING_DEF VARIABLE=""]
  431 -> 432 [label=CFG ]
  326 -> 610 [label=CONTAINS ]
  326 -> 571 [label=CONTAINS ]
  521 -> 525 [label=POST_DOMINATE ]
  327 -> 382 [label=REACHING_DEF VARIABLE="ctx"]
  582 -> 586 [label=AST ]
  362 -> 363 [label=AST ]
  326 -> 579 [label=REACHING_DEF VARIABLE=""]
  614 -> 609 [label=POST_DOMINATE ]
  533 -> 576 [label=CDG ]
  411 -> 409 [label=DOMINATE ]
  548 -> 579 [label=REACHING_DEF VARIABLE="md"]
  450 -> 451 [label=AST ]
  395 -> 397 [label=AST ]
  326 -> 410 [label=REACHING_DEF VARIABLE=""]
  415 -> 327 [label=REF ]
  562 -> 564 [label=ARGUMENT ]
  326 -> 364 [label=CONTAINS ]
  326 -> 546 [label=CONTAINS ]
  437 -> 440 [label=DOMINATE ]
  326 -> 351 [label=REACHING_DEF VARIABLE=""]
  397 -> 395 [label=CFG ]
  421 -> 423 [label=AST ]
  470 -> 471 [label=CFG ]
  326 -> 348 [label=CONTAINS ]
  592 -> 601 [label=CDG ]
  331 -> 540 [label=REACHING_DEF VARIABLE="impl"]
  326 -> 399 [label=CONTAINS ]
  579 -> 580 [label=DOMINATE ]
  581 -> 573 [label=REACHING_DEF VARIABLE="!EVP_DigestUpdate(ctx->o_ctx, pad, EVP_MD_block_size(md))"]
  415 -> 412 [label=POST_DOMINATE ]
  327 -> 615 [label=REACHING_DEF VARIABLE="ctx"]
  517 -> 518 [label=REACHING_DEF VARIABLE="i"]
  326 -> 446 [label=CONTAINS ]
  592 -> 603 [label=CFG ]
  455 -> 615 [label=CFG ]
  460 -> 489 [label=CDG ]
  479 -> 475 [label=REACHING_DEF VARIABLE="key"]
  555 -> 553 [label=DOMINATE ]
  326 -> 478 [label=CONTAINS ]
  326 -> 336 [label=CONTAINS ]
  522 -> 524 [label=ARGUMENT ]
  436 -> 435 [label=REACHING_DEF VARIABLE="EVP_DigestUpdate(ctx->md_ctx, key, len)"]
  607 -> 614 [label=DOMINATE ]
  326 -> 580 [label=CONTAINS ]
  326 -> 577 [label=CONTAINS ]
  476 -> 478 [label=ARGUMENT ]
  516 -> 525 [label=CDG ]
  353 -> 327 [label=REF ]
  443 -> 442 [label=CFG ]
  395 -> 410 [label=CDG ]
  366 -> 368 [label=AST ]
  485 -> 482 [label=REACHING_DEF VARIABLE="len"]
  403 -> 405 [label=CFG ]
  326 -> 474 [label=REACHING_DEF VARIABLE=""]
  426 -> 509 [label=CDG ]
  493 -> 502 [label=AST ]
  495 -> 499 [label=POST_DOMINATE ]
  372 -> 371 [label=POST_DOMINATE ]
  509 -> 598 [label=CDG ]
  326 -> 363 [label=CONTAINS ]
  430 -> 432 [label=POST_DOMINATE ]
  327 -> 597 [label=REACHING_DEF VARIABLE="ctx"]
  394 -> 395 [label=AST ]
  526 -> 529 [label=CFG ]
  326 -> 583 [label=CONTAINS ]
  426 -> 442 [label=ARGUMENT ]
  559 -> 557 [label=CFG ]
  326 -> 430 [label=CONTAINS ]
  326 -> 491 [label=REACHING_DEF VARIABLE=""]
  326 -> 586 [label=CONTAINS ]
  503 -> 493 [label=REACHING_DEF VARIABLE="HMAC_MAX_MD_CBLOCK - ctx->key_length"]
  341 -> 339 [label=REF ]
  347 -> 346 [label=CFG ]
  414 -> 528 [label=REACHING_DEF VARIABLE="ctx->key"]
  395 -> 402 [label=CDG ]
  460 -> 605 [label=CDG ]
  582 -> 583 [label=AST ]
  326 -> 575 [label=CONTAINS ]
  326 -> 555 [label=REACHING_DEF VARIABLE=""]
  567 -> 568 [label=AST ]
  464 -> 461 [label=REACHING_DEF VARIABLE="len > (int)sizeof(ctx->key)"]
  344 -> 345 [label=CONDITION ]
  570 -> 568 [label=DOMINATE ]
  340 -> 348 [label=DOMINATE ]
  326 -> 462 [label=REACHING_DEF VARIABLE=""]
  326 -> 615 [label=AST ]
  407 -> 418 [label=CDG ]
  556 -> 568 [label=CDG ]
  466 -> 467 [label=AST ]
  440 -> 441 [label=CFG ]
  546 -> 548 [label=CFG ]
  437 -> 452 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  408 -> 409 [label=ARGUMENT ]
  335 -> 615 [label=REACHING_DEF VARIABLE="rv"]
  614 -> 613 [label=DOMINATE ]
  464 -> 465 [label=ARGUMENT ]
  349 -> 368 [label=REACHING_DEF VARIABLE="NULL"]
  544 -> 545 [label=DOMINATE ]
  341 -> 615 [label=REACHING_DEF VARIABLE="reset"]
  326 -> 605 [label=CONTAINS ]
  411 -> 409 [label=REACHING_DEF VARIABLE="(int)sizeof(ctx->key)"]
  326 -> 513 [label=CONTAINS ]
  430 -> 448 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  615 -> 426 [label=POST_DOMINATE ]
  531 -> 527 [label=CFG ]
  506 -> 507 [label=CFG ]
  469 -> 477 [label=REACHING_DEF VARIABLE="ctx->key"]
  387 -> 483 [label=REACHING_DEF VARIABLE="ctx->md"]
  416 -> 415 [label=POST_DOMINATE ]
  345 -> 346 [label=ARGUMENT ]
  460 -> 478 [label=CDG ]
  476 -> 528 [label=REACHING_DEF VARIABLE="ctx->key"]
  335 -> 336 [label=CFG ]
  437 -> 441 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  548 -> 547 [label=DOMINATE ]
  421 -> 431 [label=DOMINATE ]
  327 -> 489 [label=REACHING_DEF VARIABLE="ctx"]
  327 -> 430 [label=REACHING_DEF VARIABLE="ctx"]
  350 -> 352 [label=AST ]
  476 -> 480 [label=REACHING_DEF VARIABLE="ctx->key"]
  487 -> 493 [label=CDG ]
  443 -> 450 [label=ARGUMENT ]
  521 -> 520 [label=CFG ]
  366 -> 376 [label=CDG ]
  555 -> 553 [label=CFG ]
  543 -> 545 [label=AST ]
  535 -> 534 [label=CFG ]
  560 -> 559 [label=DOMINATE ]
  502 -> 504 [label=CFG ]
  421 -> 433 [label=CDG ]
  441 -> 437 [label=REACHING_DEF VARIABLE="len"]
  473 -> 615 [label=REACHING_DEF VARIABLE="<RET>"]
  516 -> 537 [label=CFG ]
  326 -> 393 [label=REACHING_DEF VARIABLE=""]
  326 -> 413 [label=CONTAINS ]
  429 -> 428 [label=REACHING_DEF VARIABLE="EVP_DigestInit_ex(ctx->md_ctx, md, impl)"]
  404 -> 402 [label=DOMINATE ]
  510 -> 532 [label=AST ]
  517 -> 519 [label=POST_DOMINATE ]
  374 -> 431 [label=REACHING_DEF VARIABLE="ctx->md"]
  404 -> 403 [label=REACHING_DEF VARIABLE="EVP_MD_block_size(md)"]
  404 -> 402 [label=REACHING_DEF VARIABLE="EVP_MD_block_size(md)"]
  326 -> 557 [label=CONTAINS ]
  349 -> 347 [label=DOMINATE ]
  387 -> 544 [label=REACHING_DEF VARIABLE="ctx->md"]
  573 -> 596 [label=CDG ]
  609 -> 611 [label=ARGUMENT ]
  326 -> 539 [label=REACHING_DEF VARIABLE=""]
  447 -> 500 [label=REACHING_DEF VARIABLE="ctx->key"]
  326 -> 351 [label=CONTAINS ]
  348 -> 904 [label=REACHING_DEF VARIABLE="md"]
  379 -> 380 [label=AST ]
  573 -> 574 [label=ARGUMENT ]
  407 -> 419 [label=DOMINATE ]
  414 -> 445 [label=REACHING_DEF VARIABLE="ctx->key"]
  541 -> 533 [label=CFG ]
  326 -> 396 [label=REACHING_DEF VARIABLE=""]
  482 -> 483 [label=ARGUMENT ]
  332 -> 333 [label=AST ]
  584 -> 585 [label=DOMINATE ]
  430 -> 452 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  395 -> 405 [label=CDG ]
  536 -> 577 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  529 -> 327 [label=REF ]
  447 -> 529 [label=REACHING_DEF VARIABLE="ctx->key"]
  397 -> 396 [label=REACHING_DEF VARIABLE="NULL"]
  595 -> 596 [label=DOMINATE ]
  476 -> 598 [label=REACHING_DEF VARIABLE="ctx->key"]
  499 -> 495 [label=CFG ]
  460 -> 483 [label=CDG ]
  349 -> 347 [label=REACHING_DEF VARIABLE="NULL"]
  500 -> 501 [label=CFG ]
  351 -> 330 [label=REF ]
  542 -> 546 [label=AST ]
  326 -> 469 [label=CONTAINS ]
  414 -> 447 [label=REACHING_DEF VARIABLE="ctx->key"]
  476 -> 489 [label=REACHING_DEF VARIABLE="ctx->key"]
  488 -> 490 [label=ARGUMENT ]
  533 -> 558 [label=CDG ]
  326 -> 331 [label=REACHING_DEF VARIABLE=""]
  466 -> 465 [label=REACHING_DEF VARIABLE="(int)sizeof(ctx->key)"]
  608 -> 609 [label=AST ]
  489 -> 481 [label=POST_DOMINATE ]
  487 -> 491 [label=AST ]
  347 -> 348 [label=AST ]
  326 -> 529 [label=CONTAINS ]
  514 -> 517 [label=REACHING_DEF VARIABLE="i"]
  488 -> 491 [label=DOMINATE ]
  570 -> 568 [label=CFG ]
  352 -> 354 [label=AST ]
  487 -> 500 [label=CDG ]
  423 -> 421 [label=DOMINATE ]
  361 -> 360 [label=POST_DOMINATE ]
  356 -> 358 [label=ARGUMENT ]
  373 -> 396 [label=CFG ]
  342 -> 340 [label=REACHING_DEF VARIABLE="0"]
  365 -> 366 [label=CONDITION ]
  326 -> 356 [label=CONTAINS ]
  345 -> 366 [label=CDG ]
  372 -> 370 [label=REACHING_DEF VARIABLE="1"]
  479 -> 480 [label=CFG ]
  534 -> 542 [label=CDG ]
  542 -> 546 [label=ARGUMENT ]
  461 -> 460 [label=CFG ]
  488 -> 584 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  476 -> 496 [label=REACHING_DEF VARIABLE="ctx->key"]
  326 -> 568 [label=CONTAINS ]
  571 -> 568 [label=POST_DOMINATE ]
  367 -> 366 [label=REACHING_DEF VARIABLE="md"]
  587 -> 582 [label=REACHING_DEF VARIABLE="EVP_MD_block_size(md)"]
  522 -> 521 [label=REACHING_DEF VARIABLE="pad[i]"]
  381 -> 395 [label=CDG ]
  387 -> 385 [label=DOMINATE ]
  464 -> 460 [label=REACHING_DEF VARIABLE="len > (int)sizeof(ctx->key)"]
  326 -> 534 [label=CONTAINS ]
  563 -> 564 [label=DOMINATE ]
  592 -> 604 [label=CDG ]
  395 -> 400 [label=CDG ]
  380 -> 381 [label=CONDITION ]
  516 -> 519 [label=CDG ]
  557 -> 558 [label=DOMINATE ]
  483 -> 327 [label=REF ]
  487 -> 497 [label=CDG ]
  546 -> 543 [label=REACHING_DEF VARIABLE="pad"]
  496 -> 500 [label=DOMINATE ]
  482 -> 483 [label=AST ]
  326 -> 375 [label=CONTAINS ]
  326 -> 494 [label=CONTAINS ]
  386 -> 330 [label=REF ]
  573 -> 581 [label=ARGUMENT ]
  427 -> 443 [label=CDG ]
  509 -> 518 [label=CDG ]
  327 -> 500 [label=REACHING_DEF VARIABLE="ctx"]
  349 -> 615 [label=REACHING_DEF VARIABLE="NULL"]
  335 -> 334 [label=REACHING_DEF VARIABLE="rv"]
  421 -> 489 [label=DOMINATE ]
  345 -> 364 [label=CFG ]
  427 -> 450 [label=CDG ]
  427 -> 451 [label=CDG ]
  446 -> 445 [label=POST_DOMINATE ]
  491 -> 488 [label=POST_DOMINATE ]
  476 -> 483 [label=REACHING_DEF VARIABLE="ctx->key"]
  487 -> 491 [label=ARGUMENT ]
  326 -> 521 [label=CONTAINS ]
  598 -> 599 [label=DOMINATE ]
  554 -> 555 [label=DOMINATE ]
  554 -> 553 [label=REACHING_DEF VARIABLE="i"]
  326 -> 438 [label=REACHING_DEF VARIABLE=""]
  509 -> 515 [label=CDG ]
  460 -> 475 [label=CDG ]
  326 -> 397 [label=CONTAINS ]
  326 -> 389 [label=CONTAINS ]
  511 -> 519 [label=AST ]
  613 -> 614 [label=ARGUMENT ]
  326 -> 378 [label=CONTAINS ]
  374 -> 373 [label=REACHING_DEF VARIABLE="ctx->md"]
  326 -> 401 [label=CONTAINS ]
  556 -> 571 [label=CDG ]
  487 -> 499 [label=CDG ]
  460 -> 461 [label=ARGUMENT ]
  461 -> 460 [label=REACHING_DEF VARIABLE="len < 0"]
  326 -> 358 [label=REACHING_DEF VARIABLE=""]
  406 -> 407 [label=CONDITION ]
  485 -> 481 [label=CFG ]
  574 -> 584 [label=CFG ]
  411 -> 412 [label=AST ]
  528 -> 530 [label=POST_DOMINATE ]
  421 -> 432 [label=CDG ]
  326 -> 361 [label=CONTAINS ]
  374 -> 544 [label=REACHING_DEF VARIABLE="ctx->md"]
  326 -> 520 [label=REACHING_DEF VARIABLE=""]
  449 -> 447 [label=DOMINATE ]
  407 -> 422 [label=CFG ]
  601 -> 605 [label=CFG ]
  360 -> 903 [label=REACHING_DEF VARIABLE="len"]
  326 -> 405 [label=CONTAINS ]
  375 -> 376 [label=CFG ]
  542 -> 543 [label=AST ]
  440 -> 328 [label=REF ]
  573 -> 574 [label=AST ]
  533 -> 580 [label=CDG ]
  414 -> 448 [label=REACHING_DEF VARIABLE="ctx->key"]
  575 -> 580 [label=ARGUMENT ]
  430 -> 506 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  412 -> 415 [label=DOMINATE ]
  326 -> 342 [label=CONTAINS ]
  331 -> 905 [label=PARAMETER_LINK ]
  326 -> 495 [label=CONTAINS ]
  430 -> 445 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  504 -> 503 [label=REACHING_DEF VARIABLE="HMAC_MAX_MD_CBLOCK"]
  390 -> 391 [label=AST ]
  387 -> 529 [label=REACHING_DEF VARIABLE="ctx->md"]
  437 -> 529 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  492 -> 493 [label=AST ]
  469 -> 470 [label=ARGUMENT ]
  482 -> 481 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  430 -> 577 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  512 -> 513 [label=AST ]
  531 -> 528 [label=POST_DOMINATE ]
  564 -> 562 [label=CFG ]
  326 -> 509 [label=REACHING_DEF VARIABLE=""]
  450 -> 505 [label=REACHING_DEF VARIABLE="&ctx->key_length"]
  573 -> 594 [label=CDG ]
  326 -> 518 [label=REACHING_DEF VARIABLE=""]
  438 -> 439 [label=CFG ]
  410 -> 411 [label=REACHING_DEF VARIABLE="j"]
  576 -> 577 [label=AST ]
  487 -> 509 [label=CFG ]
  434 -> 540 [label=REACHING_DEF VARIABLE="impl"]
  366 -> 367 [label=AST ]
  374 -> 598 [label=REACHING_DEF VARIABLE="ctx->md"]
  470 -> 471 [label=DOMINATE ]
  356 -> 355 [label=DOMINATE ]
  421 -> 428 [label=CDG ]
  533 -> 541 [label=POST_DOMINATE ]
  509 -> 536 [label=CDG ]
  326 -> 519 [label=CONTAINS ]
  502 -> 494 [label=POST_DOMINATE ]
  326 -> 355 [label=CONTAINS ]
  596 -> 594 [label=DOMINATE ]
  576 -> 583 [label=REACHING_DEF VARIABLE="ctx->o_ctx"]
  414 -> 470 [label=REACHING_DEF VARIABLE="ctx->key"]
  516 -> 520 [label=CDG ]
  326 -> 550 [label=CONTAINS ]
  326 -> 357 [label=REACHING_DEF VARIABLE=""]
  357 -> 356 [label=REACHING_DEF VARIABLE="key"]
  580 -> 575 [label=DOMINATE ]
  360 -> 361 [label=DOMINATE ]
  386 -> 405 [label=REACHING_DEF VARIABLE="md"]
  556 -> 557 [label=CDG ]
  559 -> 560 [label=AST ]
  476 -> 479 [label=CFG ]
  521 -> 525 [label=ARGUMENT ]
  593 -> 594 [label=AST ]
  554 -> 557 [label=REACHING_DEF VARIABLE="i"]
  576 -> 579 [label=DOMINATE ]
  490 -> 489 [label=POST_DOMINATE ]
  460 -> 461 [label=AST ]
  513 -> 517 [label=DOMINATE ]
  516 -> 523 [label=DOMINATE ]
  340 -> 342 [label=POST_DOMINATE ]
  461 -> 465 [label=CFG ]
  570 -> 569 [label=POST_DOMINATE ]
  509 -> 535 [label=CDG ]
  346 -> 355 [label=CDG ]
  326 -> 592 [label=CONTAINS ]
  447 -> 528 [label=REACHING_DEF VARIABLE="ctx->key"]
  414 -> 506 [label=REACHING_DEF VARIABLE="ctx->key"]
  461 -> 471 [label=CDG ]
  347 -> 351 [label=CFG ]
  536 -> 535 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  374 -> 506 [label=REACHING_DEF VARIABLE="ctx->md"]
  462 -> 480 [label=REACHING_DEF VARIABLE="len"]
  466 -> 468 [label=AST ]
  326 -> 576 [label=CONTAINS ]
  399 -> 403 [label=DOMINATE ]
  398 -> 399 [label=AST ]
  532 -> 533 [label=CONDITION ]
  615 -> 345 [label=POST_DOMINATE ]
  388 -> 327 [label=REF ]
  357 -> 328 [label=REF ]
  326 -> 427 [label=CONTAINS ]
  422 -> 421 [label=REACHING_DEF VARIABLE="j"]
  360 -> 423 [label=REACHING_DEF VARIABLE="len"]
  465 -> 466 [label=REACHING_DEF VARIABLE="len"]
  326 -> 327 [label=AST ]
  327 -> 529 [label=REACHING_DEF VARIABLE="ctx"]
  387 -> 477 [label=REACHING_DEF VARIABLE="ctx->md"]
  342 -> 340 [label=CFG ]
  372 -> 370 [label=CFG ]
  539 -> 536 [label=REACHING_DEF VARIABLE="md"]
  543 -> 546 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  573 -> 590 [label=DOMINATE ]
  444 -> 497 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  556 -> 557 [label=ARGUMENT ]
  581 -> 582 [label=ARGUMENT ]
  371 -> 372 [label=CFG ]
  592 -> 603 [label=DOMINATE ]
  347 -> 351 [label=DOMINATE ]
  494 -> 503 [label=REACHING_DEF VARIABLE="&ctx->key[ctx->key_length]"]
  463 -> 462 [label=REACHING_DEF VARIABLE="0"]
  402 -> 404 [label=POST_DOMINATE ]
  403 -> 405 [label=DOMINATE ]
  370 -> 375 [label=DOMINATE ]
  610 -> 611 [label=REACHING_DEF VARIABLE="pad"]
  590 -> 605 [label=CFG ]
  326 -> 572 [label=CONTAINS ]
  326 -> 547 [label=CONTAINS ]
  605 -> 550 [label=POST_DOMINATE ]
  430 -> 433 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  447 -> 449 [label=AST ]
  496 -> 498 [label=POST_DOMINATE ]
  331 -> 615 [label=REACHING_DEF VARIABLE="impl"]
  565 -> 561 [label=CFG ]
  426 -> 442 [label=POST_DOMINATE ]
  326 -> 901 [label=AST ]
  584 -> 327 [label=REF ]
  557 -> 558 [label=REACHING_DEF VARIABLE="i"]
  327 -> 477 [label=REACHING_DEF VARIABLE="ctx"]
  434 -> 433 [label=REACHING_DEF VARIABLE="impl"]
  396 -> 328 [label=REF ]
  552 -> 553 [label=AST ]
  615 -> 366 [label=POST_DOMINATE ]
  334 -> 336 [label=POST_DOMINATE ]
  326 -> 445 [label=REACHING_DEF VARIABLE=""]
  326 -> 565 [label=CONTAINS ]
  607 -> 610 [label=CFG ]
  556 -> 557 [label=AST ]
  516 -> 521 [label=CDG ]
  429 -> 434 [label=POST_DOMINATE ]
  346 -> 357 [label=DOMINATE ]
  527 -> 531 [label=AST ]
  573 -> 595 [label=CDG ]
  539 -> 579 [label=REACHING_DEF VARIABLE="md"]
  395 -> 397 [label=ARGUMENT ]
  577 -> 578 [label=CFG ]
  423 -> 462 [label=REACHING_DEF VARIABLE="len"]
  368 -> 366 [label=REACHING_DEF VARIABLE="NULL"]
  496 -> 498 [label=ARGUMENT ]
  422 -> 338 [label=REF ]
  597 -> 594 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  475 -> 476 [label=AST ]
  326 -> 385 [label=CONTAINS ]
  368 -> 366 [label=CFG ]
  469 -> 468 [label=CFG ]
  480 -> 479 [label=POST_DOMINATE ]
  326 -> 602 [label=CONTAINS ]
  326 -> 344 [label=CONTAINS ]
  594 -> 595 [label=ARGUMENT ]
  380 -> 384 [label=AST ]
  478 -> 477 [label=POST_DOMINATE ]
  534 -> 541 [label=REACHING_DEF VARIABLE="!EVP_DigestInit_ex(ctx->i_ctx, md, impl)"]
  400 -> 401 [label=DOMINATE ]
  509 -> 599 [label=CDG ]
  525 -> 521 [label=CFG ]
  556 -> 563 [label=DOMINATE ]
  516 -> 524 [label=CDG ]
  591 -> 592 [label=AST ]
  326 -> 371 [label=CONTAINS ]
  447 -> 544 [label=REACHING_DEF VARIABLE="ctx->key"]
  611 -> 612 [label=ARGUMENT ]
  497 -> 498 [label=DOMINATE ]
  326 -> 354 [label=CONTAINS ]
  434 -> 433 [label=POST_DOMINATE ]
  406 -> 407 [label=AST ]
  504 -> 502 [label=POST_DOMINATE ]
  370 -> 372 [label=POST_DOMINATE ]
  505 -> 595 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  615 -> 363 [label=POST_DOMINATE ]
  387 -> 497 [label=REACHING_DEF VARIABLE="ctx->md"]
  326 -> 435 [label=CONTAINS ]
  538 -> 536 [label=DOMINATE ]
  414 -> 415 [label=AST ]
  561 -> 562 [label=AST ]
  567 -> 565 [label=REACHING_DEF VARIABLE="ctx->key[i]"]
  488 -> 487 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  395 -> 509 [label=CFG ]
  326 -> 611 [label=CONTAINS ]
  536 -> 539 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  414 -> 497 [label=REACHING_DEF VARIABLE="ctx->key"]
  326 -> 560 [label=REACHING_DEF VARIABLE=""]
  557 -> 559 [label=POST_DOMINATE ]
  326 -> 394 [label=CONTAINS ]
  326 -> 358 [label=CONTAINS ]
  452 -> 453 [label=CFG ]
  611 -> 609 [label=CFG ]
  345 -> 355 [label=POST_DOMINATE ]
  427 -> 448 [label=CDG ]
  410 -> 402 [label=POST_DOMINATE ]
  374 -> 376 [label=POST_DOMINATE ]
  395 -> 403 [label=CDG ]
  381 -> 393 [label=CFG ]
  597 -> 598 [label=ARGUMENT ]
  533 -> 554 [label=CDG ]
  326 -> 328 [label=AST ]
  535 -> 536 [label=AST ]
  476 -> 577 [label=REACHING_DEF VARIABLE="ctx->key"]
  326 -> 379 [label=CONTAINS ]
  488 -> 537 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  504 -> 506 [label=CFG ]
  535 -> 540 [label=POST_DOMINATE ]
  327 -> 536 [label=REACHING_DEF VARIABLE="ctx"]
  615 -> 381 [label=POST_DOMINATE ]
  488 -> 529 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  543 -> 547 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  326 -> 553 [label=CONTAINS ]
  483 -> 484 [label=CFG ]
  503 -> 494 [label=REACHING_DEF VARIABLE="HMAC_MAX_MD_CBLOCK - ctx->key_length"]
  430 -> 489 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  326 -> 546 [label=REACHING_DEF VARIABLE=""]
  326 -> 400 [label=CONTAINS ]
  592 -> 593 [label=ARGUMENT ]
  421 -> 462 [label=CFG ]
  460 -> 479 [label=CDG ]
  594 -> 598 [label=DOMINATE ]
  442 -> 426 [label=CFG ]
  479 -> 476 [label=POST_DOMINATE ]
  326 -> 564 [label=REACHING_DEF VARIABLE=""]
  527 -> 525 [label=CFG ]
  534 -> 533 [label=DOMINATE ]
  359 -> 361 [label=POST_DOMINATE ]
  435 -> 436 [label=POST_DOMINATE ]
  357 -> 358 [label=REACHING_DEF VARIABLE="key"]
  509 -> 517 [label=CDG ]
  401 -> 400 [label=REACHING_DEF VARIABLE="1"]
  326 -> 443 [label=CONTAINS ]
  527 -> 531 [label=ARGUMENT ]
  349 -> 358 [label=REACHING_DEF VARIABLE="NULL"]
  481 -> 489 [label=CFG ]
  326 -> 375 [label=REACHING_DEF VARIABLE=""]
  453 -> 451 [label=CFG ]
  557 -> 337 [label=REF ]
  350 -> 352 [label=ARGUMENT ]
  487 -> 507 [label=CDG ]
  326 -> 327 [label=REACHING_DEF VARIABLE=""]
  414 -> 489 [label=REACHING_DEF VARIABLE="ctx->key"]
  428 -> 429 [label=AST ]
  416 -> 414 [label=CFG ]
  326 -> 476 [label=CONTAINS ]
  567 -> 571 [label=ARGUMENT ]
  429 -> 430 [label=AST ]
  522 -> 523 [label=AST ]
  326 -> 525 [label=CONTAINS ]
  387 -> 537 [label=REACHING_DEF VARIABLE="ctx->md"]
  534 -> 546 [label=CDG ]
  496 -> 497 [label=ARGUMENT ]
  445 -> 446 [label=CFG ]
  527 -> 528 [label=AST ]
  384 -> 385 [label=AST ]
  460 -> 464 [label=AST ]
  516 -> 523 [label=CFG ]
  516 -> 523 [label=CFG ]
  421 -> 461 [label=CDG ]
  326 -> 528 [label=CONTAINS ]
  326 -> 500 [label=REACHING_DEF VARIABLE=""]
  326 -> 903 [label=AST ]
  557 -> 571 [label=REACHING_DEF VARIABLE="i"]
  414 -> 452 [label=REACHING_DEF VARIABLE="ctx->key"]
  605 -> 602 [label=POST_DOMINATE ]
  404 -> 405 [label=POST_DOMINATE ]
  326 -> 541 [label=CONTAINS ]
  610 -> 612 [label=DOMINATE ]
  413 -> 414 [label=ARGUMENT ]
  326 -> 352 [label=CONTAINS ]
  414 -> 595 [label=REACHING_DEF VARIABLE="ctx->key"]
  564 -> 337 [label=REF ]
  411 -> 413 [label=POST_DOMINATE ]
  326 -> 439 [label=CONTAINS ]
  387 -> 452 [label=REACHING_DEF VARIABLE="ctx->md"]
  381 -> 383 [label=POST_DOMINATE ]
  421 -> 422 [label=AST ]
  556 -> 565 [label=CDG ]
  564 -> 562 [label=DOMINATE ]
  593 -> 597 [label=AST ]
  594 -> 593 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  551 -> 561 [label=AST ]
  520 -> 519 [label=REACHING_DEF VARIABLE="i"]
  332 -> 606 [label=AST ]
  326 -> 559 [label=CONTAINS ]
  580 -> 575 [label=CFG ]
  615 -> 473 [label=POST_DOMINATE ]
  327 -> 499 [label=REACHING_DEF VARIABLE="ctx"]
  556 -> 577 [label=CFG ]
  427 -> 452 [label=CDG ]
  436 -> 441 [label=ARGUMENT ]
  476 -> 529 [label=REACHING_DEF VARIABLE="ctx->key"]
  568 -> 570 [label=ARGUMENT ]
  381 -> 388 [label=CDG ]
  326 -> 473 [label=REACHING_DEF VARIABLE=""]
  326 -> 423 [label=REACHING_DEF VARIABLE=""]
  546 -> 548 [label=DOMINATE ]
  526 -> 522 [label=POST_DOMINATE ]
  458 -> 459 [label=AST ]
  341 -> 340 [label=REACHING_DEF VARIABLE="reset"]
  350 -> 351 [label=ARGUMENT ]
  605 -> 590 [label=POST_DOMINATE ]
  518 -> 516 [label=CFG ]
  355 -> 356 [label=AST ]
  346 -> 350 [label=AST ]
  434 -> 430 [label=REACHING_DEF VARIABLE="impl"]
  473 -> 474 [label=ARGUMENT ]
  543 -> 569 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  436 -> 435 [label=CFG ]
  326 -> 524 [label=REACHING_DEF VARIABLE=""]
  533 -> 554 [label=DOMINATE ]
  377 -> 539 [label=REACHING_DEF VARIABLE="md"]
  349 -> 347 [label=CFG ]
  327 -> 595 [label=REACHING_DEF VARIABLE="ctx"]
  556 -> 558 [label=ARGUMENT ]
  476 -> 568 [label=REACHING_DEF VARIABLE="ctx->key"]
  533 -> 550 [label=DOMINATE ]
  496 -> 497 [label=AST ]
  437 -> 577 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  503 -> 504 [label=AST ]
  356 -> 360 [label=CDG ]
  409 -> 408 [label=REACHING_DEF VARIABLE="j <= (int)sizeof(ctx->key)"]
  584 -> 585 [label=CFG ]
  393 -> 392 [label=CFG ]
  475 -> 479 [label=ARGUMENT ]
  488 -> 489 [label=AST ]
  553 -> 554 [label=ARGUMENT ]
  326 -> 477 [label=CONTAINS ]
  373 -> 374 [label=ARGUMENT ]
  576 -> 578 [label=AST ]
  444 -> 445 [label=ARGUMENT ]
  418 -> 615 [label=REACHING_DEF VARIABLE="<RET>"]
  555 -> 554 [label=POST_DOMINATE ]
  443 -> 444 [label=AST ]
  426 -> 488 [label=CDG ]
  421 -> 429 [label=CDG ]
  342 -> 341 [label=POST_DOMINATE ]
  544 -> 545 [label=CFG ]
  326 -> 567 [label=CONTAINS ]
  443 -> 442 [label=DOMINATE ]
  606 -> 608 [label=AST ]
  615 -> 418 [label=POST_DOMINATE ]
  455 -> 615 [label=REACHING_DEF VARIABLE="<RET>"]
  496 -> 498 [label=AST ]
  436 -> 437 [label=ARGUMENT ]
  509 -> 595 [label=CFG ]
  573 -> 593 [label=CDG ]
  326 -> 526 [label=REACHING_DEF VARIABLE=""]
  604 -> 603 [label=REACHING_DEF VARIABLE="1"]
  464 -> 465 [label=AST ]
  326 -> 598 [label=CONTAINS ]
  326 -> 481 [label=CONTAINS ]
  327 -> 387 [label=REACHING_DEF VARIABLE="ctx"]
  526 -> 525 [label=REACHING_DEF VARIABLE="0x36"]
  439 -> 438 [label=POST_DOMINATE ]
  511 -> 512 [label=AST ]
  421 -> 423 [label=POST_DOMINATE ]
  346 -> 350 [label=POST_DOMINATE ]
  493 -> 503 [label=ARGUMENT ]
  428 -> 429 [label=ARGUMENT ]
  345 -> 346 [label=POST_DOMINATE ]
  444 -> 500 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  365 -> 369 [label=AST ]
  326 -> 594 [label=CONTAINS ]
  352 -> 615 [label=REACHING_DEF VARIABLE="ctx->md"]
  410 -> 422 [label=REACHING_DEF VARIABLE="j"]
  375 -> 370 [label=POST_DOMINATE ]
  562 -> 561 [label=REACHING_DEF VARIABLE="pad[i]"]
  396 -> 397 [label=REACHING_DEF VARIABLE="key"]
  346 -> 350 [label=ARGUMENT ]
  326 -> 610 [label=REACHING_DEF VARIABLE=""]
  493 -> 502 [label=ARGUMENT ]
  381 -> 383 [label=ARGUMENT ]
  326 -> 485 [label=REACHING_DEF VARIABLE=""]
  464 -> 466 [label=POST_DOMINATE ]
  374 -> 569 [label=REACHING_DEF VARIABLE="ctx->md"]
  574 -> 573 [label=REACHING_DEF VARIABLE="!EVP_DigestInit_ex(ctx->o_ctx, md, impl)"]
  387 -> 388 [label=ARGUMENT ]
  326 -> 357 [label=CONTAINS ]
  387 -> 489 [label=REACHING_DEF VARIABLE="ctx->md"]
  433 -> 434 [label=CFG ]
  544 -> 327 [label=REF ]
  340 -> 348 [label=CFG ]
  546 -> 542 [label=REACHING_DEF VARIABLE="pad"]
  366 -> 370 [label=CDG ]
  612 -> 610 [label=POST_DOMINATE ]
  548 -> 330 [label=REF ]
  326 -> 522 [label=CONTAINS ]
  326 -> 449 [label=CONTAINS ]
  410 -> 412 [label=DOMINATE ]
  326 -> 491 [label=CONTAINS ]
  358 -> 356 [label=DOMINATE ]
  395 -> 613 [label=CDG ]
  421 -> 431 [label=CFG ]
  509 -> 534 [label=CDG ]
  326 -> 436 [label=CONTAINS ]
  439 -> 437 [label=CFG ]
  543 -> 545 [label=ARGUMENT ]
  535 -> 536 [label=ARGUMENT ]
  402 -> 410 [label=CFG ]
  326 -> 463 [label=REACHING_DEF VARIABLE=""]
  579 -> 588 [label=REACHING_DEF VARIABLE="md"]
  360 -> 615 [label=REACHING_DEF VARIABLE="len"]
  326 -> 586 [label=REACHING_DEF VARIABLE=""]
  543 -> 545 [label=POST_DOMINATE ]
  444 -> 450 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  405 -> 539 [label=REACHING_DEF VARIABLE="md"]
  334 -> 341 [label=DOMINATE ]
  480 -> 475 [label=REACHING_DEF VARIABLE="len"]
  565 -> 566 [label=ARGUMENT ]
  326 -> 614 [label=CONTAINS ]
  561 -> 565 [label=AST ]
  363 -> 364 [label=POST_DOMINATE ]
  412 -> 415 [label=CFG ]
  451 -> 450 [label=DOMINATE ]
  374 -> 584 [label=REACHING_DEF VARIABLE="ctx->md"]
  426 -> 605 [label=CDG ]
  450 -> 443 [label=REACHING_DEF VARIABLE="&ctx->key_length"]
  461 -> 467 [label=CDG ]
  408 -> 407 [label=DOMINATE ]
  326 -> 502 [label=CONTAINS ]
  476 -> 506 [label=REACHING_DEF VARIABLE="ctx->key"]
  387 -> 448 [label=REACHING_DEF VARIABLE="ctx->md"]
  575 -> 580 [label=POST_DOMINATE ]
  534 -> 547 [label=CDG ]
  427 -> 445 [label=CFG ]
  335 -> 333 [label=REF ]
  543 -> 542 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  374 -> 595 [label=REACHING_DEF VARIABLE="ctx->md"]
  334 -> 615 [label=REACHING_DEF VARIABLE="rv = 0"]
  514 -> 515 [label=DOMINATE ]
  593 -> 592 [label=CFG ]
  466 -> 464 [label=DOMINATE ]
  597 -> 593 [label=DOMINATE ]
  540 -> 539 [label=REACHING_DEF VARIABLE="impl"]
  604 -> 603 [label=POST_DOMINATE ]
  326 -> 488 [label=CONTAINS ]
  446 -> 444 [label=CFG ]
  327 -> 415 [label=REACHING_DEF VARIABLE="ctx"]
  326 -> 600 [label=CONTAINS ]
  326 -> 465 [label=REACHING_DEF VARIABLE=""]
  605 -> 601 [label=POST_DOMINATE ]
  534 -> 543 [label=CDG ]
  366 -> 371 [label=DOMINATE ]
  326 -> 367 [label=CONTAINS ]
  505 -> 507 [label=POST_DOMINATE ]
  519 -> 520 [label=POST_DOMINATE ]
  580 -> 579 [label=POST_DOMINATE ]
  495 -> 499 [label=ARGUMENT ]
  326 -> 489 [label=CONTAINS ]
  509 -> 487 [label=POST_DOMINATE ]
  326 -> 561 [label=CONTAINS ]
  437 -> 569 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  476 -> 494 [label=REACHING_DEF VARIABLE="ctx->key"]
  414 -> 496 [label=REACHING_DEF VARIABLE="ctx->key"]
  556 -> 560 [label=CDG ]
  471 -> 469 [label=DOMINATE ]
  326 -> 590 [label=CONTAINS ]
  391 -> 392 [label=AST ]
  395 -> 414 [label=CDG ]
  527 -> 525 [label=REACHING_DEF VARIABLE="ctx->key[i]"]
  326 -> 537 [label=CONTAINS ]
  511 -> 521 [label=AST ]
  387 -> 389 [label=POST_DOMINATE ]
  577 -> 327 [label=REF ]
  347 -> 350 [label=CDG ]
  434 -> 331 [label=REF ]
  547 -> 546 [label=REACHING_DEF VARIABLE="EVP_MD_block_size(md)"]
  326 -> 480 [label=CONTAINS ]
  428 -> 435 [label=REACHING_DEF VARIABLE="!EVP_DigestInit_ex(ctx->md_ctx, md, impl)"]
  536 -> 538 [label=ARGUMENT ]
  533 -> 541 [label=ARGUMENT ]
  505 -> 503 [label=DOMINATE ]
  326 -> 506 [label=CONTAINS ]
  327 -> 438 [label=REACHING_DEF VARIABLE="ctx"]
  568 -> 569 [label=ARGUMENT ]
  363 -> 615 [label=CFG ]
  373 -> 377 [label=ARGUMENT ]
  444 -> 448 [label=DOMINATE ]
  468 -> 466 [label=DOMINATE ]
  487 -> 496 [label=CDG ]
  540 -> 539 [label=POST_DOMINATE ]
  414 -> 413 [label=DOMINATE ]
  603 -> 604 [label=CFG ]
  326 -> 440 [label=CONTAINS ]
  345 -> 615 [label=DOMINATE ]
  565 -> 561 [label=DOMINATE ]
  498 -> 496 [label=DOMINATE ]
  373 -> 377 [label=POST_DOMINATE ]
  505 -> 584 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  393 -> 392 [label=REACHING_DEF VARIABLE="0"]
  395 -> 415 [label=CDG ]
  341 -> 342 [label=DOMINATE ]
  326 -> 382 [label=REACHING_DEF VARIABLE=""]
  610 -> 612 [label=CFG ]
  430 -> 444 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  486 -> 487 [label=AST ]
  499 -> 495 [label=DOMINATE ]
  357 -> 902 [label=REACHING_DEF VARIABLE="key"]
  462 -> 329 [label=REF ]
  533 -> 534 [label=AST ]
  326 -> 461 [label=CONTAINS ]
  593 -> 592 [label=DOMINATE ]
  573 -> 574 [label=POST_DOMINATE ]
  573 -> 590 [label=CDG ]
  334 -> 335 [label=AST ]
  491 -> 487 [label=DOMINATE ]
  326 -> 503 [label=CONTAINS ]
  565 -> 566 [label=AST ]
  582 -> 581 [label=REACHING_DEF VARIABLE="EVP_DigestUpdate(ctx->o_ctx, pad, EVP_MD_block_size(md))"]
  488 -> 506 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  447 -> 452 [label=CFG ]
  487 -> 501 [label=CDG ]
  513 -> 515 [label=ARGUMENT ]
  326 -> 566 [label=REACHING_DEF VARIABLE=""]
  568 -> 571 [label=CFG ]
  495 -> 499 [label=AST ]
  429 -> 428 [label=DOMINATE ]
  533 -> 578 [label=CDG ]
  326 -> 353 [label=CONTAINS ]
  611 -> 612 [label=POST_DOMINATE ]
  425 -> 426 [label=CONDITION ]
  327 -> 431 [label=REACHING_DEF VARIABLE="ctx"]
  334 -> 335 [label=ARGUMENT ]
  556 -> 577 [label=DOMINATE ]
  365 -> 366 [label=AST ]
  585 -> 584 [label=POST_DOMINATE ]
  536 -> 595 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  423 -> 422 [label=POST_DOMINATE ]
  374 -> 489 [label=REACHING_DEF VARIABLE="ctx->md"]
  435 -> 427 [label=REACHING_DEF VARIABLE="!EVP_DigestUpdate(ctx->md_ctx, key, len)"]
  366 -> 372 [label=CDG ]
  326 -> 416 [label=CONTAINS ]
  344 -> 362 [label=AST ]
  553 -> 557 [label=DOMINATE ]
  539 -> 548 [label=REACHING_DEF VARIABLE="md"]
  326 -> 392 [label=REACHING_DEF VARIABLE=""]
  374 -> 445 [label=REACHING_DEF VARIABLE="ctx->md"]
  358 -> 356 [label=CFG ]
  358 -> 357 [label=POST_DOMINATE ]
  597 -> 599 [label=POST_DOMINATE ]
  574 -> 587 [label=CDG ]
  494 -> 495 [label=AST ]
  599 -> 597 [label=DOMINATE ]
  366 -> 383 [label=CDG ]
  598 -> 599 [label=CFG ]
  505 -> 506 [label=ARGUMENT ]
  327 -> 506 [label=REACHING_DEF VARIABLE="ctx"]
  533 -> 574 [label=CDG ]
  408 -> 409 [label=AST ]
  543 -> 546 [label=CFG ]
  574 -> 582 [label=CDG ]
  441 -> 440 [label=REACHING_DEF VARIABLE="len"]
  447 -> 584 [label=REACHING_DEF VARIABLE="ctx->key"]
  541 -> 542 [label=AST ]
  352 -> 350 [label=REACHING_DEF VARIABLE="ctx->md"]
  490 -> 488 [label=DOMINATE ]
  326 -> 349 [label=REACHING_DEF VARIABLE=""]
  346 -> 357 [label=CFG ]
  564 -> 563 [label=POST_DOMINATE ]
  531 -> 527 [label=DOMINATE ]
  326 -> 347 [label=CONTAINS ]
  491 -> 488 [label=REACHING_DEF VARIABLE="HMAC_MAX_MD_CBLOCK"]
  560 -> 559 [label=REACHING_DEF VARIABLE="i"]
  359 -> 361 [label=AST ]
  485 -> 329 [label=REF ]
  525 -> 527 [label=ARGUMENT ]
  434 -> 429 [label=DOMINATE ]
  326 -> 577 [label=REACHING_DEF VARIABLE=""]
  518 -> 516 [label=REACHING_DEF VARIABLE="HMAC_MAX_MD_CBLOCK"]
  396 -> 373 [label=POST_DOMINATE ]
  368 -> 366 [label=DOMINATE ]
  460 -> 613 [label=CDG ]
  480 -> 329 [label=REF ]
  377 -> 374 [label=POST_DOMINATE ]
  537 -> 327 [label=REF ]
  394 -> 398 [label=AST ]
  555 -> 553 [label=REACHING_DEF VARIABLE="0"]
  484 -> 483 [label=POST_DOMINATE ]
  475 -> 479 [label=AST ]
  522 -> 524 [label=AST ]
  369 -> 370 [label=AST ]
  586 -> 582 [label=REACHING_DEF VARIABLE="pad"]
  395 -> 509 [label=CDG ]
  481 -> 485 [label=ARGUMENT ]
  460 -> 614 [label=CDG ]
  461 -> 465 [label=DOMINATE ]
  476 -> 584 [label=REACHING_DEF VARIABLE="ctx->key"]
  579 -> 576 [label=POST_DOMINATE ]
  352 -> 354 [label=ARGUMENT ]
  326 -> 330 [label=REACHING_DEF VARIABLE=""]
  329 -> 423 [label=REACHING_DEF VARIABLE="len"]
  347 -> 349 [label=AST ]
  493 -> 503 [label=AST ]
  353 -> 351 [label=POST_DOMINATE ]
  498 -> 497 [label=POST_DOMINATE ]
  514 -> 515 [label=CFG ]
  425 -> 426 [label=AST ]
  326 -> 564 [label=CONTAINS ]
  364 -> 363 [label=CFG ]
  487 -> 504 [label=CDG ]
  580 -> 331 [label=REF ]
  371 -> 370 [label=REACHING_DEF VARIABLE="reset"]
  558 -> 557 [label=POST_DOMINATE ]
  433 -> 330 [label=REF ]
  326 -> 571 [label=REACHING_DEF VARIABLE=""]
  509 -> 605 [label=DOMINATE ]
  467 -> 470 [label=CFG ]
  326 -> 422 [label=REACHING_DEF VARIABLE=""]
  500 -> 327 [label=REF ]
  522 -> 524 [label=POST_DOMINATE ]
  547 -> 548 [label=ARGUMENT ]
  605 -> 509 [label=POST_DOMINATE ]
  326 -> 404 [label=CONTAINS ]
  506 -> 507 [label=DOMINATE ]
  412 -> 410 [label=POST_DOMINATE ]
  460 -> 509 [label=CDG ]
  574 -> 584 [label=DOMINATE ]
  586 -> 587 [label=REACHING_DEF VARIABLE="pad"]
  326 -> 545 [label=CONTAINS ]
  347 -> 346 [label=REACHING_DEF VARIABLE="md != NULL"]
  444 -> 594 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  326 -> 486 [label=CONTAINS ]
  326 -> 441 [label=CONTAINS ]
  576 -> 579 [label=CFG ]
  428 -> 440 [label=CDG ]
  587 -> 586 [label=REACHING_DEF VARIABLE="EVP_MD_block_size(md)"]
  566 -> 565 [label=REACHING_DEF VARIABLE="0x5c"]
  604 -> 602 [label=REACHING_DEF VARIABLE="1"]
  610 -> 609 [label=REACHING_DEF VARIABLE="pad"]
  442 -> 443 [label=ARGUMENT ]
  528 -> 530 [label=AST ]
  534 -> 535 [label=POST_DOMINATE ]
  326 -> 382 [label=CONTAINS ]
  373 -> 374 [label=AST ]
  350 -> 352 [label=POST_DOMINATE ]
  403 -> 402 [label=REACHING_DEF VARIABLE="j"]
  556 -> 563 [label=CDG ]
  438 -> 439 [label=DOMINATE ]
  568 -> 571 [label=DOMINATE ]
  326 -> 597 [label=CONTAINS ]
  326 -> 540 [label=CONTAINS ]
  461 -> 463 [label=ARGUMENT ]
  415 -> 416 [label=CFG ]
  530 -> 529 [label=POST_DOMINATE ]
  326 -> 330 [label=AST ]
  554 -> 555 [label=CFG ]
  326 -> 377 [label=CONTAINS ]
  461 -> 460 [label=DOMINATE ]
  515 -> 513 [label=REACHING_DEF VARIABLE="0"]
  568 -> 570 [label=POST_DOMINATE ]
  336 -> 334 [label=REACHING_DEF VARIABLE="0"]
  573 -> 581 [label=POST_DOMINATE ]
  516 -> 531 [label=CDG ]
  488 -> 489 [label=ARGUMENT ]
  388 -> 389 [label=CFG ]
  586 -> 588 [label=DOMINATE ]
  499 -> 500 [label=AST ]
  509 -> 514 [label=CFG ]
  387 -> 388 [label=AST ]
  613 -> 615 [label=CFG ]
  381 -> 383 [label=AST ]
  326 -> 511 [label=CONTAINS ]
  326 -> 376 [label=CONTAINS ]
  597 -> 593 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  356 -> 358 [label=AST ]
  382 -> 383 [label=DOMINATE ]
  374 -> 483 [label=REACHING_DEF VARIABLE="ctx->md"]
  445 -> 446 [label=DOMINATE ]
  494 -> 493 [label=REACHING_DEF VARIABLE="&ctx->key[ctx->key_length]"]
  348 -> 615 [label=REACHING_DEF VARIABLE="md"]
  414 -> 569 [label=REACHING_DEF VARIABLE="ctx->key"]
  332 -> 602 [label=AST ]
  327 -> 576 [label=REACHING_DEF VARIABLE="ctx"]
  326 -> 507 [label=CONTAINS ]
  576 -> 580 [label=REACHING_DEF VARIABLE="ctx->o_ctx"]
  345 -> 367 [label=CDG ]
  605 -> 607 [label=CFG ]
  444 -> 537 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  517 -> 520 [label=REACHING_DEF VARIABLE="i"]
  586 -> 583 [label=POST_DOMINATE ]
  572 -> 573 [label=AST ]
  516 -> 522 [label=CDG ]
  523 -> 343 [label=REF ]
  574 -> 575 [label=ARGUMENT ]
  499 -> 500 [label=ARGUMENT ]
  580 -> 576 [label=REACHING_DEF VARIABLE="impl"]
  326 -> 380 [label=CONTAINS ]
  615 -> 421 [label=POST_DOMINATE ]
  421 -> 462 [label=DOMINATE ]
  332 -> 508 [label=AST ]
  541 -> 542 [label=POST_DOMINATE ]
  447 -> 443 [label=REACHING_DEF VARIABLE="ctx->key"]
  411 -> 410 [label=REACHING_DEF VARIABLE="(int)sizeof(ctx->key)"]
  346 -> 345 [label=DOMINATE ]
  534 -> 533 [label=REACHING_DEF VARIABLE="!EVP_DigestInit_ex(ctx->i_ctx, md, impl)"]
  326 -> 346 [label=CONTAINS ]
  486 -> 492 [label=AST ]
  479 -> 328 [label=REF ]
  345 -> 355 [label=AST ]
  326 -> 526 [label=CONTAINS ]
  326 -> 529 [label=REACHING_DEF VARIABLE=""]
  347 -> 352 [label=CDG ]
  421 -> 426 [label=CDG ]
  428 -> 436 [label=CDG ]
  392 -> 393 [label=ARGUMENT ]
  326 -> 563 [label=REACHING_DEF VARIABLE=""]
  566 -> 567 [label=REACHING_DEF VARIABLE="0x5c"]
  572 -> 573 [label=CONDITION ]
  326 -> 401 [label=REACHING_DEF VARIABLE=""]
  559 -> 560 [label=POST_DOMINATE ]
  326 -> 396 [label=CONTAINS ]
  461 -> 468 [label=CDG ]
  326 -> 450 [label=CONTAINS ]
  478 -> 476 [label=CFG ]
  326 -> 560 [label=CONTAINS ]
  513 -> 514 [label=ARGUMENT ]
  539 -> 536 [label=POST_DOMINATE ]
  352 -> 901 [label=REACHING_DEF VARIABLE="ctx->md"]
  536 -> 584 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  613 -> 615 [label=REACHING_DEF VARIABLE="<RET>"]
  326 -> 556 [label=CONTAINS ]
  345 -> 355 [label=ARGUMENT ]
  476 -> 569 [label=REACHING_DEF VARIABLE="ctx->key"]
  481 -> 482 [label=ARGUMENT ]
  581 -> 582 [label=AST ]
  482 -> 484 [label=POST_DOMINATE ]
  347 -> 354 [label=CDG ]
  427 -> 426 [label=DOMINATE ]
  607 -> 610 [label=CDG ]
  398 -> 420 [label=AST ]
  470 -> 327 [label=REF ]
  377 -> 330 [label=REF ]
  488 -> 577 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  581 -> 574 [label=REACHING_DEF VARIABLE="!EVP_DigestUpdate(ctx->o_ctx, pad, EVP_MD_block_size(md))"]
  547 -> 542 [label=DOMINATE ]
  326 -> 474 [label=CONTAINS ]
  588 -> 586 [label=POST_DOMINATE ]
  533 -> 555 [label=CDG ]
  535 -> 539 [label=AST ]
  327 -> 505 [label=REACHING_DEF VARIABLE="ctx"]
  602 -> 603 [label=AST ]
  413 -> 411 [label=CFG ]
  460 -> 464 [label=ARGUMENT ]
  556 -> 566 [label=CDG ]
  326 -> 551 [label=CONTAINS ]
  366 -> 367 [label=ARGUMENT ]
  433 -> 430 [label=REACHING_DEF VARIABLE="md"]
  596 -> 594 [label=CFG ]
  387 -> 415 [label=REACHING_DEF VARIABLE="ctx->md"]
  326 -> 497 [label=CONTAINS ]
  502 -> 494 [label=REACHING_DEF VARIABLE="0"]
  357 -> 358 [label=DOMINATE ]
  534 -> 544 [label=CFG ]
  426 -> 607 [label=CDG ]
  394 -> 395 [label=CONDITION ]
  377 -> 405 [label=REACHING_DEF VARIABLE="md"]
  515 -> 513 [label=DOMINATE ]
  422 -> 423 [label=DOMINATE ]
  426 -> 489 [label=CDG ]
  405 -> 433 [label=REACHING_DEF VARIABLE="md"]
  340 -> 615 [label=REACHING_DEF VARIABLE="reset = 0"]
  583 -> 598 [label=REACHING_DEF VARIABLE="ctx->o_ctx"]
  565 -> 567 [label=POST_DOMINATE ]
  533 -> 557 [label=CDG ]
  335 -> 326 [label=POST_DOMINATE ]
  356 -> 615 [label=REACHING_DEF VARIABLE="key == NULL"]
  326 -> 515 [label=CONTAINS ]
  483 -> 475 [label=POST_DOMINATE ]
  351 -> 350 [label=REACHING_DEF VARIABLE="md"]
  392 -> 615 [label=CFG ]
  366 -> 368 [label=ARGUMENT ]
  450 -> 488 [label=REACHING_DEF VARIABLE="&ctx->key_length"]
  326 -> 470 [label=REACHING_DEF VARIABLE=""]
  426 -> 427 [label=ARGUMENT ]
  469 -> 468 [label=DOMINATE ]
  602 -> 605 [label=CFG ]
  396 -> 479 [label=REACHING_DEF VARIABLE="key"]
  567 -> 565 [label=DOMINATE ]
  376 -> 374 [label=CFG ]
  450 -> 499 [label=REACHING_DEF VARIABLE="&ctx->key_length"]
  579 -> 580 [label=REACHING_DEF VARIABLE="md"]
  327 -> 476 [label=REACHING_DEF VARIABLE="ctx"]
  559 -> 560 [label=ARGUMENT ]
  536 -> 540 [label=REACHING_DEF VARIABLE="ctx->i_ctx"]
  441 -> 329 [label=REF ]
  612 -> 343 [label=REF ]
  361 -> 360 [label=REACHING_DEF VARIABLE="0"]
  507 -> 505 [label=DOMINATE ]
  551 -> 559 [label=AST ]
  517 -> 531 [label=REACHING_DEF VARIABLE="i"]
  326 -> 392 [label=CONTAINS ]
  447 -> 598 [label=REACHING_DEF VARIABLE="ctx->key"]
  367 -> 368 [label=CFG ]
  491 -> 504 [label=REACHING_DEF VARIABLE="HMAC_MAX_MD_CBLOCK"]
  603 -> 604 [label=DOMINATE ]
  596 -> 595 [label=POST_DOMINATE ]
  437 -> 438 [label=AST ]
  507 -> 506 [label=POST_DOMINATE ]
  419 -> 418 [label=DOMINATE ]
  509 -> 540 [label=CDG ]
  542 -> 541 [label=REACHING_DEF VARIABLE="EVP_DigestUpdate(ctx->i_ctx, pad, EVP_MD_block_size(md))"]
  444 -> 446 [label=ARGUMENT ]
  508 -> 509 [label=CONDITION ]
  509 -> 537 [label=CDG ]
  538 -> 536 [label=CFG ]
  443 -> 447 [label=ARGUMENT ]
  326 -> 570 [label=CONTAINS ]
  488 -> 598 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  503 -> 504 [label=ARGUMENT ]
  326 -> 440 [label=REACHING_DEF VARIABLE=""]
  580 -> 575 [label=REACHING_DEF VARIABLE="impl"]
  447 -> 494 [label=REACHING_DEF VARIABLE="ctx->key"]
  326 -> 500 [label=CONTAINS ]
  411 -> 409 [label=CFG ]
  582 -> 581 [label=CFG ]
  557 -> 564 [label=REACHING_DEF VARIABLE="i"]
  419 -> 418 [label=CFG ]
  604 -> 602 [label=DOMINATE ]
  430 -> 437 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  445 -> 327 [label=REF ]
  609 -> 611 [label=POST_DOMINATE ]
  565 -> 561 [label=REACHING_DEF VARIABLE="0x5c ^ ctx->key[i]"]
  605 -> 533 [label=POST_DOMINATE ]
  527 -> 568 [label=REACHING_DEF VARIABLE="ctx->key[i]"]
  330 -> 904 [label=PARAMETER_LINK ]
  463 -> 461 [label=CFG ]
  428 -> 438 [label=CFG ]
  537 -> 516 [label=POST_DOMINATE ]
  516 -> 517 [label=CDG ]
  527 -> 528 [label=REACHING_DEF VARIABLE="ctx->key[i]"]
  574 -> 585 [label=CDG ]
  466 -> 468 [label=POST_DOMINATE ]
  340 -> 342 [label=AST ]
  527 -> 567 [label=REACHING_DEF VARIABLE="ctx->key[i]"]
  466 -> 468 [label=ARGUMENT ]
  429 -> 434 [label=ARGUMENT ]
  545 -> 543 [label=DOMINATE ]
  374 -> 377 [label=CFG ]
  366 -> 397 [label=CDG ]
  374 -> 438 [label=REACHING_DEF VARIABLE="ctx->md"]
  355 -> 356 [label=ARGUMENT ]
  385 -> 386 [label=ARGUMENT ]
  614 -> 613 [label=REACHING_DEF VARIABLE="rv"]
  409 -> 411 [label=AST ]
  488 -> 490 [label=AST ]
  555 -> 554 [label=REACHING_DEF VARIABLE="0"]
  327 -> 496 [label=REACHING_DEF VARIABLE="ctx"]
  535 -> 539 [label=ARGUMENT ]
  376 -> 375 [label=POST_DOMINATE ]
  326 -> 574 [label=CONTAINS ]
  495 -> 494 [label=CFG ]
  587 -> 588 [label=AST ]
  575 -> 574 [label=DOMINATE ]
  575 -> 580 [label=AST ]
  540 -> 535 [label=CFG ]
  383 -> 382 [label=POST_DOMINATE ]
  613 -> 614 [label=AST ]
  440 -> 441 [label=DOMINATE ]
  426 -> 613 [label=CDG ]
  395 -> 614 [label=CDG ]
  326 -> 464 [label=CONTAINS ]
  395 -> 407 [label=CDG ]
  572 -> 589 [label=AST ]
  326 -> 329 [label=AST ]
  418 -> 615 [label=CFG ]
  551 -> 556 [label=CONDITION ]
  326 -> 477 [label=REACHING_DEF VARIABLE=""]
  326 -> 544 [label=CONTAINS ]
  442 -> 426 [label=REACHING_DEF VARIABLE="!EVP_DigestFinal_ex(ctx->md_ctx, ctx->key,
                                           &ctx->key_length)"]
  396 -> 397 [label=DOMINATE ]
  356 -> 360 [label=DOMINATE ]
  326 -> 516 [label=CONTAINS ]
  433 -> 434 [label=REACHING_DEF VARIABLE="md"]
  326 -> 517 [label=CONTAINS ]
  607 -> 612 [label=CDG ]
  553 -> 557 [label=CFG ]
  422 -> 423 [label=CFG ]
  326 -> 587 [label=CONTAINS ]
  597 -> 598 [label=AST ]
  407 -> 421 [label=CDG ]
  447 -> 449 [label=POST_DOMINATE ]
  326 -> 591 [label=CONTAINS ]
  573 -> 599 [label=CDG ]
  346 -> 356 [label=CDG ]
  427 -> 428 [label=POST_DOMINATE ]
  607 -> 614 [label=CFG ]
  576 -> 595 [label=REACHING_DEF VARIABLE="ctx->o_ctx"]
  414 -> 500 [label=REACHING_DEF VARIABLE="ctx->key"]
  453 -> 451 [label=DOMINATE ]
  578 -> 577 [label=POST_DOMINATE ]
  615 -> 460 [label=POST_DOMINATE ]
  505 -> 569 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  326 -> 448 [label=CONTAINS ]
  602 -> 603 [label=ARGUMENT ]
  456 -> 455 [label=REACHING_DEF VARIABLE="0"]
  326 -> 448 [label=REACHING_DEF VARIABLE=""]
  450 -> 444 [label=REACHING_DEF VARIABLE="&ctx->key_length"]
  421 -> 427 [label=CDG ]
  460 -> 485 [label=CDG ]
  326 -> 510 [label=CONTAINS ]
  326 -> 367 [label=REACHING_DEF VARIABLE=""]
  558 -> 557 [label=REACHING_DEF VARIABLE="HMAC_MAX_MD_CBLOCK"]
  387 -> 386 [label=REACHING_DEF VARIABLE="ctx->md"]
  476 -> 479 [label=DOMINATE ]
  447 -> 448 [label=AST ]
  475 -> 480 [label=POST_DOMINATE ]
  548 -> 547 [label=REACHING_DEF VARIABLE="md"]
  505 -> 529 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  407 -> 408 [label=POST_DOMINATE ]
  326 -> 451 [label=CONTAINS ]
  399 -> 401 [label=POST_DOMINATE ]
  351 -> 904 [label=REACHING_DEF VARIABLE="md"]
  473 -> 474 [label=AST ]
  326 -> 466 [label=CONTAINS ]
  332 -> 339 [label=AST ]
  326 -> 408 [label=CONTAINS ]
  480 -> 475 [label=CFG ]
  469 -> 470 [label=AST ]
  326 -> 335 [label=CFG ]
  502 -> 504 [label=DOMINATE ]
  430 -> 497 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  418 -> 419 [label=ARGUMENT ]
  488 -> 491 [label=REACHING_DEF VARIABLE="ctx->key_length"]
  326 -> 607 [label=REACHING_DEF VARIABLE=""]
  407 -> 408 [label=ARGUMENT ]
  534 -> 541 [label=CDG ]
  326 -> 332 [label=CONTAINS ]
  359 -> 355 [label=REACHING_DEF VARIABLE="len < 0"]
  326 -> 530 [label=CONTAINS ]
  587 -> 588 [label=ARGUMENT ]
  348 -> 349 [label=DOMINATE ]
  326 -> 366 [label=CONTAINS ]
  326 -> 415 [label=CONTAINS ]
  574 -> 581 [label=CDG ]
  387 -> 438 [label=REACHING_DEF VARIABLE="ctx->md"]
  414 -> 416 [label=ARGUMENT ]
  385 -> 396 [label=CFG ]
  326 -> 414 [label=CONTAINS ]
  536 -> 538 [label=AST ]
  326 -> 456 [label=CONTAINS ]
  583 -> 584 [label=ARGUMENT ]
  329 -> 903 [label=REACHING_DEF VARIABLE="len"]
  329 -> 903 [label=REACHING_DEF VARIABLE="len"]
  344 -> 345 [label=AST ]
  426 -> 455 [label=CDG ]
  481 -> 482 [label=AST ]
  414 -> 413 [label=CFG ]
  451 -> 450 [label=CFG ]
  487 -> 491 [label=POST_DOMINATE ]
  610 -> 343 [label=REF ]
  454 -> 455 [label=AST ]
  428 -> 427 [label=CFG ]
  509 -> 533 [label=CDG ]
  562 -> 566 [label=DOMINATE ]
  326 -> 533 [label=CONTAINS ]
  462 -> 463 [label=DOMINATE ]
  414 -> 544 [label=REACHING_DEF VARIABLE="ctx->key"]
  331 -> 905 [label=REACHING_DEF VARIABLE="impl"]
  331 -> 905 [label=REACHING_DEF VARIABLE="impl"]
  381 -> 397 [label=CDG ]
  568 -> 570 [label=AST ]
  533 -> 550 [label=CFG ]
  326 -> 431 [label=REACHING_DEF VARIABLE=""]
  562 -> 564 [label=AST ]
  326 -> 349 [label=CONTAINS ]
  460 -> 482 [label=CDG ]
  326 -> 482 [label=CONTAINS ]
  326 -> 386 [label=CONTAINS ]
  518 -> 517 [label=REACHING_DEF VARIABLE="HMAC_MAX_MD_CBLOCK"]
  444 -> 506 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  460 -> 474 [label=DOMINATE ]
  326 -> 490 [label=CONTAINS ]
  451 -> 452 [label=AST ]
  488 -> 490 [label=POST_DOMINATE ]
  326 -> 609 [label=CONTAINS ]
  430 -> 544 [label=REACHING_DEF VARIABLE="ctx->md_ctx"]
  476 -> 544 [label=REACHING_DEF VARIABLE="ctx->key"]
  403 -> 399 [label=POST_DOMINATE ]
  327 -> 901 [label=REACHING_DEF VARIABLE="ctx"]
  327 -> 901 [label=REACHING_DEF VARIABLE="ctx"]
}
