digraph {
  22 [label=RETURN ORDER=3 ARGUMENT_INDEX=-1 CODE="return 0;" COLUMN_NUMBER=5 LINE_NUMBER=6]
  17 [label=CALL ORDER=2 ARGUMENT_INDEX=-1 CODE="result = add(5, 3)" COLUMN_NUMBER=9 METHOD_FULL_NAME="<operator>.assignment" LINE_NUMBER=5 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.assignment"]
  20 [label=LITERAL ORDER=1 ARGUMENT_INDEX=1 CODE="5" COLUMN_NUMBER=22 LINE_NUMBER=5 TYPE_FULL_NAME="int"]
  16 [label=LOCAL ORDER=1 CODE="int result" COLUMN_NUMBER=9 LINE_NUMBER=5 TYPE_FULL_NAME="int" NAME="result"]
  19 [label=CALL ORDER=2 ARGUMENT_INDEX=2 CODE="add(5, 3)" COLUMN_NUMBER=18 METHOD_FULL_NAME="add" LINE_NUMBER=5 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="add"]
  15 [label=BLOCK ORDER=1 ARGUMENT_INDEX=-1 CODE="{
    int result = add(5, 3);  // 使用 add 函数计算 5 和 3 的和
    return 0;
}" COLUMN_NUMBER=12 LINE_NUMBER=4 TYPE_FULL_NAME="void"]
  24 [label=METHOD_RETURN ORDER=2 CODE="RET" COLUMN_NUMBER=1 LINE_NUMBER=4 TYPE_FULL_NAME="int" EVALUATION_STRATEGY="BY_VALUE"]
  18 [label=IDENTIFIER ORDER=1 ARGUMENT_INDEX=1 CODE="result" COLUMN_NUMBER=9 LINE_NUMBER=5 TYPE_FULL_NAME="int" NAME="result"]
  23 [label=LITERAL ORDER=1 ARGUMENT_INDEX=-1 CODE="0" COLUMN_NUMBER=12 LINE_NUMBER=6 TYPE_FULL_NAME="int"]
  21 [label=LITERAL ORDER=2 ARGUMENT_INDEX=2 CODE="3" COLUMN_NUMBER=25 LINE_NUMBER=5 TYPE_FULL_NAME="int"]
  14 [label=METHOD COLUMN_NUMBER=1 LINE_NUMBER=4 COLUMN_NUMBER_END=1 IS_EXTERNAL=false SIGNATURE="int main ()" NAME="main" AST_PARENT_TYPE="TYPE_DECL" AST_PARENT_FULL_NAME="simple-calculate-multi_function.c:<global>" ORDER=2 CODE="int main() {
    int result = add(5, 3);  // 使用 add 函数计算 5 和 3 的和
    return 0;
}" FULL_NAME="main" LINE_NUMBER_END=7 FILENAME="simple-calculate-multi_function.c"]
  19 -> 18 [label=REACHING_DEF VARIABLE="add(5, 3)"]
  20 -> 21 [label=DOMINATE ]
  14 -> 21 [label=REACHING_DEF VARIABLE=""]
  23 -> 22 [label=DOMINATE ]
  14 -> 21 [label=CONTAINS ]
  18 -> 16 [label=REF ]
  14 -> 19 [label=CONTAINS ]
  15 -> 22 [label=AST ]
  18 -> 20 [label=DOMINATE ]
  19 -> 17 [label=DOMINATE ]
  15 -> 16 [label=AST ]
  18 -> 24 [label=REACHING_DEF VARIABLE="result"]
  19 -> 20 [label=ARGUMENT ]
  24 -> 22 [label=POST_DOMINATE ]
  17 -> 19 [label=AST ]
  14 -> 15 [label=CONTAINS ]
  19 -> 21 [label=POST_DOMINATE ]
  19 -> 21 [label=AST ]
  15 -> 17 [label=AST ]
  17 -> 18 [label=ARGUMENT ]
  21 -> 19 [label=DOMINATE ]
  17 -> 23 [label=DOMINATE ]
  14 -> 18 [label=DOMINATE ]
  18 -> 20 [label=CFG ]
  19 -> 17 [label=REACHING_DEF VARIABLE="add(5, 3)"]
  19 -> 24 [label=REACHING_DEF VARIABLE="add(5, 3)"]
  23 -> 22 [label=CFG ]
  14 -> 18 [label=CONTAINS ]
  14 -> 24 [label=AST ]
  19 -> 17 [label=CFG ]
  20 -> 18 [label=POST_DOMINATE ]
  22 -> 23 [label=AST ]
  22 -> 24 [label=DOMINATE ]
  20 -> 19 [label=REACHING_DEF VARIABLE="5"]
  21 -> 19 [label=CFG ]
  23 -> 17 [label=POST_DOMINATE ]
  18 -> 14 [label=POST_DOMINATE ]
  14 -> 15 [label=AST ]
  14 -> 17 [label=CONTAINS ]
  18 -> 17 [label=REACHING_DEF VARIABLE="result"]
  22 -> 23 [label=ARGUMENT ]
  20 -> 21 [label=CFG ]
  14 -> 22 [label=REACHING_DEF VARIABLE=""]
  14 -> 22 [label=CONTAINS ]
  17 -> 18 [label=AST ]
  17 -> 19 [label=POST_DOMINATE ]
  14 -> 23 [label=REACHING_DEF VARIABLE=""]
  14 -> 23 [label=CONTAINS ]
  19 -> 20 [label=AST ]
  22 -> 23 [label=POST_DOMINATE ]
  21 -> 19 [label=REACHING_DEF VARIABLE="3"]
  23 -> 22 [label=REACHING_DEF VARIABLE="0"]
  17 -> 23 [label=CFG ]
  19 -> 21 [label=ARGUMENT ]
  17 -> 19 [label=ARGUMENT ]
  14 -> 20 [label=CONTAINS ]
  21 -> 20 [label=POST_DOMINATE ]
  14 -> 18 [label=CFG ]
  14 -> 20 [label=REACHING_DEF VARIABLE=""]
  17 -> 24 [label=REACHING_DEF VARIABLE="result = add(5, 3)"]
  22 -> 24 [label=CFG ]
  22 -> 24 [label=REACHING_DEF VARIABLE="<RET>"]
}
