digraph {
33 [label="IDENTIFIER [b]
b" ORDER=2 ARGUMENT_INDEX=2 CODE="b" COLUMN_NUMBER=16 LINE_NUMBER=11 TYPE_FULL_NAME="int" NAME="b"]
27 [label="METHOD_PARAMETER_IN [a]
int a" ORDER=1 CODE="int a" IS_VARIADIC=false COLUMN_NUMBER=9 LINE_NUMBER=10 TYPE_FULL_NAME="int" EVALUATION_STRATEGY="BY_VALUE" INDEX=1 NAME="a"]
34 [label="METHOD_RETURN []
RET" ORDER=4 CODE="RET" COLUMN_NUMBER=1 LINE_NUMBER=10 TYPE_FULL_NAME="int" EVALUATION_STRATEGY="BY_VALUE"]
29 [label="BLOCK []
" ORDER=3 ARGUMENT_INDEX=-1 CODE="{
    return a + b;
}" COLUMN_NUMBER=23 LINE_NUMBER=10 TYPE_FULL_NAME="void"]
63 [label="METHOD_PARAMETER_OUT [a]
int a" ORDER=1 CODE="int a" IS_VARIADIC=false COLUMN_NUMBER=9 LINE_NUMBER=10 TYPE_FULL_NAME="int" EVALUATION_STRATEGY="BY_VALUE" INDEX=1 NAME="a"]
64 [label="METHOD_PARAMETER_OUT [b]
int b" ORDER=2 CODE="int b" IS_VARIADIC=false COLUMN_NUMBER=16 LINE_NUMBER=10 TYPE_FULL_NAME="int" EVALUATION_STRATEGY="BY_VALUE" INDEX=2 NAME="b"]
30 [label="RETURN []
return a + b;" ORDER=1 ARGUMENT_INDEX=-1 CODE="return a + b;" COLUMN_NUMBER=5 LINE_NUMBER=11]
26 [label="METHOD [add]
" COLUMN_NUMBER=1 LINE_NUMBER=10 COLUMN_NUMBER_END=1 IS_EXTERNAL=false SIGNATURE="int add (int,int)" NAME="add" AST_PARENT_TYPE="TYPE_DECL" AST_PARENT_FULL_NAME="simple-calculate-multi_function.c:<global>" ORDER=3 CODE="int add(int a, int b) {
    return a + b;
}" FULL_NAME="add" LINE_NUMBER_END=12 FILENAME="simple-calculate-multi_function.c"]
32 [label="IDENTIFIER [a]
a" ORDER=1 ARGUMENT_INDEX=1 CODE="a" COLUMN_NUMBER=12 LINE_NUMBER=11 TYPE_FULL_NAME="int" NAME="a"]
28 [label="METHOD_PARAMETER_IN [b]
int b" ORDER=2 CODE="int b" IS_VARIADIC=false COLUMN_NUMBER=16 LINE_NUMBER=10 TYPE_FULL_NAME="int" EVALUATION_STRATEGY="BY_VALUE" INDEX=2 NAME="b"]
31 [label="CALL [<operator>.addition]
a + b" ORDER=1 ARGUMENT_INDEX=-1 CODE="a + b" COLUMN_NUMBER=12 METHOD_FULL_NAME="<operator>.addition" LINE_NUMBER=11 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.addition"]
22 [label="RETURN []
return 0;" ORDER=3 ARGUMENT_INDEX=-1 CODE="return 0;" COLUMN_NUMBER=5 LINE_NUMBER=6]
17 [label="CALL [<operator>.assignment]
result = add(5, 3)" ORDER=2 ARGUMENT_INDEX=-1 CODE="result = add(5, 3)" COLUMN_NUMBER=9 METHOD_FULL_NAME="<operator>.assignment" LINE_NUMBER=5 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="<operator>.assignment"]
20 [label="LITERAL []
5" ORDER=1 ARGUMENT_INDEX=1 CODE="5" COLUMN_NUMBER=22 LINE_NUMBER=5 TYPE_FULL_NAME="int"]
16 [label="LOCAL [result]
int result" ORDER=1 CODE="int result" COLUMN_NUMBER=9 LINE_NUMBER=5 TYPE_FULL_NAME="int" NAME="result"]
19 [label="CALL [add]
add(5, 3)" ORDER=2 ARGUMENT_INDEX=2 CODE="add(5, 3)" COLUMN_NUMBER=18 METHOD_FULL_NAME="add" LINE_NUMBER=5 TYPE_FULL_NAME="<empty>" DISPATCH_TYPE="STATIC_DISPATCH" SIGNATURE="" NAME="add"]
15 [label="BLOCK []
" ORDER=1 ARGUMENT_INDEX=-1 CODE="{
    int result = add(5, 3);  // 使用 add 函数计算 5 和 3 的和
    return 0;
}" COLUMN_NUMBER=12 LINE_NUMBER=4 TYPE_FULL_NAME="void"]
24 [label="METHOD_RETURN []
RET" ORDER=2 CODE="RET" COLUMN_NUMBER=1 LINE_NUMBER=4 TYPE_FULL_NAME="int" EVALUATION_STRATEGY="BY_VALUE"]
18 [label="IDENTIFIER [result]
result" ORDER=1 ARGUMENT_INDEX=1 CODE="result" COLUMN_NUMBER=9 LINE_NUMBER=5 TYPE_FULL_NAME="int" NAME="result"]
23 [label="LITERAL []
0" ORDER=1 ARGUMENT_INDEX=-1 CODE="0" COLUMN_NUMBER=12 LINE_NUMBER=6 TYPE_FULL_NAME="int"]
21 [label="LITERAL []
3" ORDER=2 ARGUMENT_INDEX=2 CODE="3" COLUMN_NUMBER=25 LINE_NUMBER=5 TYPE_FULL_NAME="int"]
14 [label="METHOD [main]
" COLUMN_NUMBER=1 LINE_NUMBER=4 COLUMN_NUMBER_END=1 IS_EXTERNAL=false SIGNATURE="int main ()" NAME="main" AST_PARENT_TYPE="TYPE_DECL" AST_PARENT_FULL_NAME="simple-calculate-multi_function.c:<global>" ORDER=2 CODE="int main() {
    int result = add(5, 3);  // 使用 add 函数计算 5 和 3 的和
    return 0;
}" FULL_NAME="main" LINE_NUMBER_END=7 FILENAME="simple-calculate-multi_function.c"]
30 -> 34 [label="CFG" ]
28 -> 64 [label="REACHING_DEF" VARIABLE="b"]
31 -> 33 [label="AST" ]
32 -> 63 [label="REACHING_DEF" VARIABLE="a"]
26 -> 29 [label="AST" ]
26 -> 32 [label="REACHING_DEF" VARIABLE=""]
32 -> 31 [label="REACHING_DEF" VARIABLE="a"]
33 -> 64 [label="REACHING_DEF" VARIABLE="b"]
26 -> 28 [label="REACHING_DEF" VARIABLE=""]
32 -> 33 [label="CFG" ]
33 -> 34 [label="REACHING_DEF" VARIABLE="b"]
33 -> 31 [label="CFG" ]
26 -> 63 [label="AST" ]
28 -> 33 [label="REACHING_DEF" VARIABLE="b"]
32 -> 34 [label="REACHING_DEF" VARIABLE="a"]
26 -> 64 [label="AST" ]
26 -> 27 [label="AST" ]
30 -> 31 [label="AST" ]
31 -> 30 [label="CFG" ]
26 -> 27 [label="REACHING_DEF" VARIABLE=""]
31 -> 34 [label="REACHING_DEF" VARIABLE="a + b"]
26 -> 28 [label="AST" ]
26 -> 34 [label="AST" ]
31 -> 30 [label="REACHING_DEF" VARIABLE="a + b"]
30 -> 34 [label="REACHING_DEF" VARIABLE="<RET>"]
26 -> 33 [label="REACHING_DEF" VARIABLE=""]
26 -> 32 [label="CFG" ]
27 -> 32 [label="REACHING_DEF" VARIABLE="a"]
27 -> 63 [label="REACHING_DEF" VARIABLE="a"]
29 -> 30 [label="AST" ]
31 -> 32 [label="AST" ]
33 -> 31 [label="REACHING_DEF" VARIABLE="b"]
19 -> 18 [label="REACHING_DEF" VARIABLE="add(5, 3)"]
14 -> 21 [label="REACHING_DEF" VARIABLE=""]
15 -> 22 [label="AST" ]
15 -> 16 [label="AST" ]
18 -> 24 [label="REACHING_DEF" VARIABLE="result"]
17 -> 19 [label="AST" ]
19 -> 21 [label="AST" ]
15 -> 17 [label="AST" ]
18 -> 20 [label="CFG" ]
19 -> 17 [label="REACHING_DEF" VARIABLE="add(5, 3)"]
19 -> 24 [label="REACHING_DEF" VARIABLE="add(5, 3)"]
23 -> 22 [label="CFG" ]
14 -> 24 [label="AST" ]
19 -> 17 [label="CFG" ]
22 -> 23 [label="AST" ]
20 -> 19 [label="REACHING_DEF" VARIABLE="5"]
21 -> 19 [label="CFG" ]
14 -> 15 [label="AST" ]
18 -> 17 [label="REACHING_DEF" VARIABLE="result"]
20 -> 21 [label="CFG" ]
14 -> 22 [label="REACHING_DEF" VARIABLE=""]
17 -> 18 [label="AST" ]
14 -> 23 [label="REACHING_DEF" VARIABLE=""]
19 -> 20 [label="AST" ]
21 -> 19 [label="REACHING_DEF" VARIABLE="3"]
23 -> 22 [label="REACHING_DEF" VARIABLE="0"]
17 -> 23 [label="CFG" ]
14 -> 18 [label="CFG" ]
14 -> 20 [label="REACHING_DEF" VARIABLE=""]
17 -> 24 [label="REACHING_DEF" VARIABLE="result = add(5, 3)"]
22 -> 24 [label="CFG" ]
22 -> 24 [label="REACHING_DEF" VARIABLE="<RET>"]
19 -> 26 [label="AST" ]
17 -> 26 [label="CFG" ]
}